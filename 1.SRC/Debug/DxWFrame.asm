; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27034.0 

	TITLE	C:\Users\Administrator\Desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.SRC\DxWFrame.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	?gAppSet@@3UtagAPP_SET@@A			; gAppSet
PUBLIC	?gbIsGod@@3HA					; gbIsGod
PUBLIC	?gbIsFirst@@3HA					; gbIsFirst
PUBLIC	?gbIsFull@@3HA					; gbIsFull
PUBLIC	?gFont@@3PAUHFONT__@@A				; gFont
PUBLIC	?gHdc@@3PAUHDC__@@A				; gHdc
PUBLIC	?g_Pos@@3UtagPOINT@@A				; g_Pos
PUBLIC	?g_BPos@@3UtagPOINT@@A				; g_BPos
PUBLIC	?g_bFadeIn@@3HA					; g_bFadeIn
PUBLIC	?g_bFadeOut@@3HA				; g_bFadeOut
PUBLIC	?g_bFadeLoop@@3HA				; g_bFadeLoop
PUBLIC	?g_bInc@@3HA					; g_bInc
PUBLIC	?g_bJump@@3HA					; g_bJump
PUBLIC	?g_bAccel@@3HA					; g_bAccel
PUBLIC	?g_bJaccel@@3HA					; g_bJaccel
PUBLIC	?g_bRight@@3HA					; g_bRight
PUBLIC	?g_bLeft@@3HA					; g_bLeft
PUBLIC	?g_bJRight@@3HA					; g_bJRight
PUBLIC	?g_bJLeft@@3HA					; g_bJLeft
PUBLIC	?g_bSetSpeed@@3HA				; g_bSetSpeed
PUBLIC	?g_bGrayScale@@3HA				; g_bGrayScale
PUBLIC	?g_bColorize@@3HA				; g_bColorize
PUBLIC	?g_bLookR@@3HA					; g_bLookR
PUBLIC	?g_bLookL@@3HA					; g_bLookL
PUBLIC	?g_bBLR@@3HA					; g_bBLR
PUBLIC	?g_bBLL@@3HA					; g_bBLL
PUBLIC	?g_bRush@@3HA					; g_bRush
PUBLIC	?g_bAR@@3HA					; g_bAR
PUBLIC	?g_bAL@@3HA					; g_bAL
PUBLIC	?g_bAtt@@3HA					; g_bAtt
PUBLIC	?g_bRushR@@3HA					; g_bRushR
PUBLIC	?g_bRushL@@3HA					; g_bRushL
PUBLIC	?musicstart@@3HA				; musicstart
PUBLIC	?bossimmu@@3HA					; bossimmu
PUBLIC	?g_bBAT@@3HA					; g_bBAT
PUBLIC	?Delay@@3HA					; Delay
PUBLIC	?g_dwFadeRate@@3KA				; g_dwFadeRate
PUBLIC	?g_dwR@@3KA					; g_dwR
PUBLIC	?g_dwG@@3KA					; g_dwG
PUBLIC	?g_dwB@@3KA					; g_dwB
PUBLIC	?g_dwFADELUT@@3PAY0GF@KA			; g_dwFADELUT
PUBLIC	?g_ddsd@@3U_DDSURFACEDESC2@@A			; g_ddsd
PUBLIC	?g_dwPixelFormat@@3KA				; g_dwPixelFormat
PUBLIC	?g_dwRGBBitCount@@3KA				; g_dwRGBBitCount
PUBLIC	?g_pDS@@3PAPAUIDirectSoundBuffer@@A		; g_pDS
PUBLIC	?g_pDD@@3PAUIDirectDraw7@@A			; g_pDD
PUBLIC	?g_pDDSPrimary@@3PAUIDirectDrawSurface7@@A	; g_pDDSPrimary
PUBLIC	?g_pDDSBack@@3PAUIDirectDrawSurface7@@A		; g_pDDSBack
PUBLIC	?g_pDDSOne@@3PAUIDirectDrawSurface7@@A		; g_pDDSOne
PUBLIC	?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A		; g_pDDSOneR
PUBLIC	?g_pDDSTwo@@3PAUIDirectDrawSurface7@@A		; g_pDDSTwo
PUBLIC	?g_pDDSTwoR@@3PAUIDirectDrawSurface7@@A		; g_pDDSTwoR
PUBLIC	?g_pDDSSkill@@3PAUIDirectDrawSurface7@@A	; g_pDDSSkill
PUBLIC	?g_pDDSSkillR@@3PAUIDirectDrawSurface7@@A	; g_pDDSSkillR
PUBLIC	?g_pDDSHP@@3PAUIDirectDrawSurface7@@A		; g_pDDSHP
PUBLIC	?g_pDDSTITLE@@3PAUIDirectDrawSurface7@@A	; g_pDDSTITLE
PUBLIC	?g_BossAtt@@3PAUIDirectDrawSurface7@@A		; g_BossAtt
PUBLIC	?g_BossAtt2@@3PAUIDirectDrawSurface7@@A		; g_BossAtt2
PUBLIC	?g_pDDSHPbar@@3PAUIDirectDrawSurface7@@A	; g_pDDSHPbar
PUBLIC	?g_pDDSPHP@@3PAUIDirectDrawSurface7@@A		; g_pDDSPHP
PUBLIC	?g_pDDSCHARGE@@3PAUIDirectDrawSurface7@@A	; g_pDDSCHARGE
PUBLIC	?g_pDDSCHARGER@@3PAUIDirectDrawSurface7@@A	; g_pDDSCHARGER
PUBLIC	?g_pDDSPHPbar@@3PAUIDirectDrawSurface7@@A	; g_pDDSPHPbar
PUBLIC	?g_pDDSBG@@3PAUIDirectDrawSurface7@@A		; g_pDDSBG
PUBLIC	?g_pDDSBG2@@3PAUIDirectDrawSurface7@@A		; g_pDDSBG2
PUBLIC	?g_pDDSBG3@@3PAUIDirectDrawSurface7@@A		; g_pDDSBG3
PUBLIC	?g_pDDSCast@@3PAUIDirectDrawSurface7@@A		; g_pDDSCast
PUBLIC	?g_pDDSCast2@@3PAUIDirectDrawSurface7@@A	; g_pDDSCast2
PUBLIC	?g_pDDSCastAtt@@3PAUIDirectDrawSurface7@@A	; g_pDDSCastAtt
PUBLIC	?g_pDDSBossAtt@@3PAUIDirectDrawSurface7@@A	; g_pDDSBossAtt
PUBLIC	?g_pDDSBossAttR@@3PAUIDirectDrawSurface7@@A	; g_pDDSBossAttR
PUBLIC	?g_pDDSBoss3Att@@3PAUIDirectDrawSurface7@@A	; g_pDDSBoss3Att
PUBLIC	?g_pDDSBoss3AttR@@3PAUIDirectDrawSurface7@@A	; g_pDDSBoss3AttR
PUBLIC	?g_pDDSBoss3Att2@@3PAUIDirectDrawSurface7@@A	; g_pDDSBoss3Att2
PUBLIC	?g_pDDSBoss3AttR2@@3PAUIDirectDrawSurface7@@A	; g_pDDSBoss3AttR2
PUBLIC	?g_pDDSBoss3Att3@@3PAUIDirectDrawSurface7@@A	; g_pDDSBoss3Att3
PUBLIC	?g_pDDSBoss3AttR3@@3PAUIDirectDrawSurface7@@A	; g_pDDSBoss3AttR3
PUBLIC	?g_pDDSGroundAtt@@3PAUIDirectDrawSurface7@@A	; g_pDDSGroundAtt
PUBLIC	?g_pDDSDragAtt@@3PAUIDirectDrawSurface7@@A	; g_pDDSDragAtt
PUBLIC	?g_pDDSDragAttR@@3PAUIDirectDrawSurface7@@A	; g_pDDSDragAttR
PUBLIC	?g_pDDSP3standL@@3PAUIDirectDrawSurface7@@A	; g_pDDSP3standL
PUBLIC	?g_pDDSDHole@@3PAUIDirectDrawSurface7@@A	; g_pDDSDHole
PUBLIC	?g_pDDSP3standR@@3PAUIDirectDrawSurface7@@A	; g_pDDSP3standR
PUBLIC	?g_pDDSDBossHit@@3PAUIDirectDrawSurface7@@A	; g_pDDSDBossHit
PUBLIC	?g_pDDSDPlayerHit@@3PAUIDirectDrawSurface7@@A	; g_pDDSDPlayerHit
PUBLIC	?g_pDDSEnd@@3PAUIDirectDrawSurface7@@A		; g_pDDSEnd
PUBLIC	?g_pDDSGameover@@3PAUIDirectDrawSurface7@@A	; g_pDDSGameover
PUBLIC	?g_pDDSPlayerskill@@3PAUIDirectDrawSurface7@@A	; g_pDDSPlayerskill
PUBLIC	?g_pDDSSkillBut@@3PAUIDirectDrawSurface7@@A	; g_pDDSSkillBut
PUBLIC	?g_pDDSSkillCool@@3PAUIDirectDrawSurface7@@A	; g_pDDSSkillCool
PUBLIC	?g_pDDPal@@3PAUIDirectDrawPalette@@A		; g_pDDPal
PUBLIC	?g_pDDClipper@@3PAUIDirectDrawClipper@@A	; g_pDDClipper
PUBLIC	?g_pDDSVBuffer@@3PAUIDirectDrawSurface7@@A	; g_pDDSVBuffer
PUBLIC	?g_pDDSSBuffer@@3PAUIDirectDrawSurface7@@A	; g_pDDSSBuffer
PUBLIC	?g_pDDSSBuffer2@@3PAUIDirectDrawSurface7@@A	; g_pDDSSBuffer2
PUBLIC	?Bx@@3HA					; Bx
PUBLIC	?Gravity@@3HA					; Gravity
PUBLIC	?Hspeed@@3HA					; Hspeed
PUBLIC	?P1MHP@@3HA					; P1MHP
PUBLIC	?P2MHP@@3HA					; P2MHP
PUBLIC	?P3MHP@@3HA					; P3MHP
PUBLIC	?cx@@3HA					; cx
PUBLIC	?cy@@3HA					; cy
PUBLIC	?o@@3HA						; o
PUBLIC	?P3randpat@@3HA					; P3randpat
PUBLIC	?P3randpat2@@3HA				; P3randpat2
PUBLIC	?isSafe@@3HA					; isSafe
PUBLIC	?g_bCast@@3HA					; g_bCast
PUBLIC	?g_bCRight@@3HA					; g_bCRight
PUBLIC	?g_bCLeft@@3HA					; g_bCLeft
PUBLIC	?g_bCFire@@3HA					; g_bCFire
PUBLIC	?g_bHit@@3HA					; g_bHit
PUBLIC	?Mirror@@3HA					; Mirror
PUBLIC	?BossAtt@@3HA					; BossAtt
PUBLIC	?BAR@@3HA					; BAR
PUBLIC	?BAL@@3HA					; BAL
PUBLIC	?BARR@@3HA					; BARR
PUBLIC	?BALL@@3HA					; BALL
PUBLIC	?Muffle@@3HA					; Muffle
PUBLIC	?P5Mus@@3HA					; P5Mus
PUBLIC	?CastHit@@3HA					; CastHit
PUBLIC	?Skilluse@@3HA					; Skilluse
PUBLIC	?BigHit@@3HA					; BigHit
PUBLIC	?PlayerMHP@@3HA					; PlayerMHP
PUBLIC	?Randpat@@3HA					; Randpat
PUBLIC	?Randpat2@@3HA					; Randpat2
PUBLIC	?P2musicstart@@3HA				; P2musicstart
PUBLIC	?RandNum@@3PAHA					; RandNum
PUBLIC	?Maximum@@3HA					; Maximum
PUBLIC	?Knockspd@@3HA					; Knockspd
PUBLIC	?PlayerHPrate@@3MA				; PlayerHPrate
PUBLIC	?P1HPrate@@3MA					; P1HPrate
PUBLIC	?P2HPrate@@3MA					; P2HPrate
PUBLIC	?P3HPrate@@3MA					; P3HPrate
PUBLIC	?KnockHspeed@@3HA				; KnockHspeed
PUBLIC	?Bframe@@3HA					; Bframe
PUBLIC	?BAframe@@3HA					; BAframe
PUBLIC	?Aframe@@3HA					; Aframe
PUBLIC	?Cframe@@3HA					; Cframe
PUBLIC	?CAframe@@3HA					; CAframe
PUBLIC	?CAAframe@@3HA					; CAAframe
PUBLIC	?BKframe@@3HA					; BKframe
PUBLIC	?DRframe@@3HA					; DRframe
PUBLIC	?GAframe@@3HA					; GAframe
PUBLIC	?SPframe@@3HA					; SPframe
PUBLIC	?PHframe@@3HA					; PHframe
PUBLIC	?BHframe@@3PAHA					; BHframe
PUBLIC	?PSframe@@3HA					; PSframe
PUBLIC	?SpikeX@@3PAHA					; SpikeX
PUBLIC	?SpikeY@@3HA					; SpikeY
PUBLIC	?MaxTime@@3HA					; MaxTime
PUBLIC	?Skillcheat@@3HA				; Skillcheat
PUBLIC	?Timerrate@@3MA					; Timerrate
PUBLIC	?Pimmune@@3HA					; Pimmune
PUBLIC	?HIT@@3UtagRECT@@A				; HIT
PUBLIC	?BOSS@@3UtagRECT@@A				; BOSS
PUBLIC	?rcDest@@3UtagRECT@@A				; rcDest
PUBLIC	?BAHIT@@3PAUtagRECT@@A				; BAHIT
PUBLIC	?PHIT@@3UtagRECT@@A				; PHIT
PUBLIC	?Cast@@3UtagRECT@@A				; Cast
PUBLIC	?Knock@@3UtagRECT@@A				; Knock
PUBLIC	?Spike@@3PAUtagRECT@@A				; Spike
PUBLIC	?p1die@@3HA					; p1die
PUBLIC	?p2die@@3HA					; p2die
PUBLIC	?p3die@@3HA					; p3die
PUBLIC	?Drag@@3HA					; Drag
PUBLIC	?Knockback@@3HA					; Knockback
PUBLIC	?KnockHIT@@3HA					; KnockHIT
PUBLIC	?p3musicstart@@3HA				; p3musicstart
PUBLIC	?P4Mus@@3HA					; P4Mus
PUBLIC	?g_bGatt@@3HA					; g_bGatt
PUBLIC	?g_bSpike@@3HA					; g_bSpike
PUBLIC	?PHplay@@3HA					; PHplay
PUBLIC	?BHplay@@3PAHA					; BHplay
PUBLIC	?BHMPlay@@3HA					; BHMPlay
PUBLIC	?g_nPhaze@@3HA					; g_nPhaze
PUBLIC	?Timer@@3PAHA					; Timer
_BSS	SEGMENT
?gAppSet@@3UtagAPP_SET@@A DB 014H DUP (?)		; gAppSet
?gbIsGod@@3HA DD 01H DUP (?)				; gbIsGod
?gFont@@3PAUHFONT__@@A DD 01H DUP (?)			; gFont
?gHdc@@3PAUHDC__@@A DD 01H DUP (?)			; gHdc
?g_Pos@@3UtagPOINT@@A DQ 01H DUP (?)			; g_Pos
?g_BPos@@3UtagPOINT@@A DQ 01H DUP (?)			; g_BPos
?g_bFadeIn@@3HA DD 01H DUP (?)				; g_bFadeIn
?g_bFadeOut@@3HA DD 01H DUP (?)				; g_bFadeOut
?g_bFadeLoop@@3HA DD 01H DUP (?)			; g_bFadeLoop
?g_bInc@@3HA DD	01H DUP (?)				; g_bInc
?g_bJump@@3HA DD 01H DUP (?)				; g_bJump
?g_bAccel@@3HA DD 01H DUP (?)				; g_bAccel
?g_bJaccel@@3HA DD 01H DUP (?)				; g_bJaccel
?g_bRight@@3HA DD 01H DUP (?)				; g_bRight
?g_bLeft@@3HA DD 01H DUP (?)				; g_bLeft
?g_bJRight@@3HA DD 01H DUP (?)				; g_bJRight
?g_bJLeft@@3HA DD 01H DUP (?)				; g_bJLeft
?g_bSetSpeed@@3HA DD 01H DUP (?)			; g_bSetSpeed
?g_bGrayScale@@3HA DD 01H DUP (?)			; g_bGrayScale
?g_bColorize@@3HA DD 01H DUP (?)			; g_bColorize
?g_bLookL@@3HA DD 01H DUP (?)				; g_bLookL
?g_bBLL@@3HA DD	01H DUP (?)				; g_bBLL
?g_bRush@@3HA DD 01H DUP (?)				; g_bRush
?g_bAR@@3HA DD	01H DUP (?)				; g_bAR
?g_bAL@@3HA DD	01H DUP (?)				; g_bAL
?g_bAtt@@3HA DD	01H DUP (?)				; g_bAtt
?g_bRushR@@3HA DD 01H DUP (?)				; g_bRushR
?g_bRushL@@3HA DD 01H DUP (?)				; g_bRushL
?musicstart@@3HA DD 01H DUP (?)				; musicstart
?bossimmu@@3HA DD 01H DUP (?)				; bossimmu
?g_bBAT@@3HA DD	01H DUP (?)				; g_bBAT
?Delay@@3HA DD	01H DUP (?)				; Delay
?g_dwFadeRate@@3KA DD 01H DUP (?)			; g_dwFadeRate
?g_dwR@@3KA DD	01H DUP (?)				; g_dwR
?g_dwG@@3KA DD	01H DUP (?)				; g_dwG
?g_dwB@@3KA DD	01H DUP (?)				; g_dwB
?g_dwFADELUT@@3PAY0GF@KA DD 01940H DUP (?)		; g_dwFADELUT
?g_ddsd@@3U_DDSURFACEDESC2@@A DB 07cH DUP (?)		; g_ddsd
?g_dwPixelFormat@@3KA DD 01H DUP (?)			; g_dwPixelFormat
?g_dwRGBBitCount@@3KA DD 01H DUP (?)			; g_dwRGBBitCount
?g_pDS@@3PAPAUIDirectSoundBuffer@@A DD 07H DUP (?)	; g_pDS
?g_pDD@@3PAUIDirectDraw7@@A DD 01H DUP (?)		; g_pDD
?g_pDDSPrimary@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?) ; g_pDDSPrimary
?g_pDDSBack@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?)	; g_pDDSBack
?g_pDDSOne@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?)	; g_pDDSOne
?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?)	; g_pDDSOneR
?g_pDDSTwo@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?)	; g_pDDSTwo
?g_pDDSTwoR@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?)	; g_pDDSTwoR
?g_pDDSSkill@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?)	; g_pDDSSkill
?g_pDDSSkillR@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?) ; g_pDDSSkillR
?g_pDDSHP@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?)	; g_pDDSHP
?g_pDDSTITLE@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?)	; g_pDDSTITLE
?g_BossAtt@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?)	; g_BossAtt
?g_BossAtt2@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?)	; g_BossAtt2
?g_pDDSHPbar@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?)	; g_pDDSHPbar
?g_pDDSPHP@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?)	; g_pDDSPHP
?g_pDDSCHARGE@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?) ; g_pDDSCHARGE
?g_pDDSCHARGER@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?) ; g_pDDSCHARGER
?g_pDDSPHPbar@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?) ; g_pDDSPHPbar
?g_pDDSBG@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?)	; g_pDDSBG
?g_pDDSBG2@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?)	; g_pDDSBG2
?g_pDDSBG3@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?)	; g_pDDSBG3
?g_pDDSCast@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?)	; g_pDDSCast
?g_pDDSCast2@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?)	; g_pDDSCast2
?g_pDDSCastAtt@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?) ; g_pDDSCastAtt
?g_pDDSBossAtt@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?) ; g_pDDSBossAtt
?g_pDDSBossAttR@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?) ; g_pDDSBossAttR
?g_pDDSBoss3Att@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?) ; g_pDDSBoss3Att
?g_pDDSBoss3AttR@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?) ; g_pDDSBoss3AttR
?g_pDDSBoss3Att2@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?) ; g_pDDSBoss3Att2
?g_pDDSBoss3AttR2@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?) ; g_pDDSBoss3AttR2
?g_pDDSBoss3Att3@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?) ; g_pDDSBoss3Att3
?g_pDDSBoss3AttR3@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?) ; g_pDDSBoss3AttR3
?g_pDDSGroundAtt@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?) ; g_pDDSGroundAtt
?g_pDDSDragAtt@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?) ; g_pDDSDragAtt
?g_pDDSDragAttR@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?) ; g_pDDSDragAttR
?g_pDDSP3standL@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?) ; g_pDDSP3standL
?g_pDDSDHole@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?)	; g_pDDSDHole
?g_pDDSP3standR@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?) ; g_pDDSP3standR
?g_pDDSDBossHit@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?) ; g_pDDSDBossHit
?g_pDDSDPlayerHit@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?) ; g_pDDSDPlayerHit
?g_pDDSEnd@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?)	; g_pDDSEnd
?g_pDDSGameover@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?) ; g_pDDSGameover
?g_pDDSPlayerskill@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?) ; g_pDDSPlayerskill
?g_pDDSSkillBut@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?) ; g_pDDSSkillBut
?g_pDDSSkillCool@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?) ; g_pDDSSkillCool
?g_pDDPal@@3PAUIDirectDrawPalette@@A DD 01H DUP (?)	; g_pDDPal
?g_pDDClipper@@3PAUIDirectDrawClipper@@A DD 01H DUP (?)	; g_pDDClipper
?g_pDDSVBuffer@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?) ; g_pDDSVBuffer
?g_pDDSSBuffer@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?) ; g_pDDSSBuffer
?g_pDDSSBuffer2@@3PAUIDirectDrawSurface7@@A DD 01H DUP (?) ; g_pDDSSBuffer2
?Bx@@3HA DD	01H DUP (?)				; Bx
?Hspeed@@3HA DD	01H DUP (?)				; Hspeed
?cx@@3HA DD	01H DUP (?)				; cx
?cy@@3HA DD	01H DUP (?)				; cy
?o@@3HA	DD	01H DUP (?)				; o
?P3randpat@@3HA DD 01H DUP (?)				; P3randpat
?P3randpat2@@3HA DD 01H DUP (?)				; P3randpat2
?isSafe@@3HA DD	01H DUP (?)				; isSafe
?g_bCast@@3HA DD 01H DUP (?)				; g_bCast
?g_bCRight@@3HA DD 01H DUP (?)				; g_bCRight
?g_bCLeft@@3HA DD 01H DUP (?)				; g_bCLeft
?g_bCFire@@3HA DD 01H DUP (?)				; g_bCFire
?g_bHit@@3HA DD	01H DUP (?)				; g_bHit
?Mirror@@3HA DD	01H DUP (?)				; Mirror
?BossAtt@@3HA DD 01H DUP (?)				; BossAtt
?BAR@@3HA DD	01H DUP (?)				; BAR
?BAL@@3HA DD	01H DUP (?)				; BAL
?BARR@@3HA DD	01H DUP (?)				; BARR
?BALL@@3HA DD	01H DUP (?)				; BALL
?Muffle@@3HA DD	01H DUP (?)				; Muffle
?P5Mus@@3HA DD	01H DUP (?)				; P5Mus
?CastHit@@3HA DD 01H DUP (?)				; CastHit
?Skilluse@@3HA DD 01H DUP (?)				; Skilluse
?BigHit@@3HA DD	01H DUP (?)				; BigHit
?Randpat@@3HA DD 01H DUP (?)				; Randpat
?Randpat2@@3HA DD 01H DUP (?)				; Randpat2
?P2musicstart@@3HA DD 01H DUP (?)			; P2musicstart
?RandNum@@3PAHA DD 05H DUP (?)				; RandNum
?Maximum@@3HA DD 01H DUP (?)				; Maximum
?Knockspd@@3HA DD 01H DUP (?)				; Knockspd
?KnockHspeed@@3HA DD 01H DUP (?)			; KnockHspeed
?Bframe@@3HA DD	01H DUP (?)				; Bframe
?BAframe@@3HA DD 01H DUP (?)				; BAframe
?Aframe@@3HA DD	01H DUP (?)				; Aframe
?Cframe@@3HA DD	01H DUP (?)				; Cframe
?CAframe@@3HA DD 01H DUP (?)				; CAframe
?CAAframe@@3HA DD 01H DUP (?)				; CAAframe
?BKframe@@3HA DD 01H DUP (?)				; BKframe
?DRframe@@3HA DD 01H DUP (?)				; DRframe
?GAframe@@3HA DD 01H DUP (?)				; GAframe
?SPframe@@3HA DD 01H DUP (?)				; SPframe
?PHframe@@3HA DD 01H DUP (?)				; PHframe
?BHframe@@3PAHA DD 03H DUP (?)				; BHframe
?PSframe@@3HA DD 01H DUP (?)				; PSframe
?SpikeX@@3PAHA DD 0aH DUP (?)				; SpikeX
?SpikeY@@3HA DD	01H DUP (?)				; SpikeY
?Skillcheat@@3HA DD 01H DUP (?)				; Skillcheat
?Pimmune@@3HA DD 01H DUP (?)				; Pimmune
?HIT@@3UtagRECT@@A DB 010H DUP (?)			; HIT
?BOSS@@3UtagRECT@@A DB 010H DUP (?)			; BOSS
?rcDest@@3UtagRECT@@A DB 010H DUP (?)			; rcDest
?BAHIT@@3PAUtagRECT@@A DB 050H DUP (?)			; BAHIT
?PHIT@@3UtagRECT@@A DB 010H DUP (?)			; PHIT
?Cast@@3UtagRECT@@A DB 010H DUP (?)			; Cast
?Knock@@3UtagRECT@@A DB 010H DUP (?)			; Knock
?Spike@@3PAUtagRECT@@A DB 0a0H DUP (?)			; Spike
?p1die@@3HA DD	01H DUP (?)				; p1die
?p2die@@3HA DD	01H DUP (?)				; p2die
?p3die@@3HA DD	01H DUP (?)				; p3die
?Drag@@3HA DD	01H DUP (?)				; Drag
?Knockback@@3HA DD 01H DUP (?)				; Knockback
?KnockHIT@@3HA DD 01H DUP (?)				; KnockHIT
?p3musicstart@@3HA DD 01H DUP (?)			; p3musicstart
?P4Mus@@3HA DD	01H DUP (?)				; P4Mus
?g_bGatt@@3HA DD 01H DUP (?)				; g_bGatt
?g_bSpike@@3HA DD 01H DUP (?)				; g_bSpike
?PHplay@@3HA DD	01H DUP (?)				; PHplay
?BHplay@@3PAHA DD 03H DUP (?)				; BHplay
?BHMPlay@@3HA DD 01H DUP (?)				; BHMPlay
?g_nPhaze@@3HA DD 01H DUP (?)				; g_nPhaze
?Timer@@3PAHA DD 020H DUP (?)				; Timer
_BSS	ENDS
_DATA	SEGMENT
?gbIsFirst@@3HA DD 01H					; gbIsFirst
?gbIsFull@@3HA DD 01H					; gbIsFull
?g_bLookR@@3HA DD 01H					; g_bLookR
?g_bBLR@@3HA DD	01H					; g_bBLR
?Gravity@@3HA DD 0dH					; Gravity
?P1MHP@@3HA DD	0bb8H					; P1MHP
?P2MHP@@3HA DD	01388H					; P2MHP
?P3MHP@@3HA DD	02710H					; P3MHP
?PlayerMHP@@3HA DD 09c40H				; PlayerMHP
?PlayerHPrate@@3MA DD 03f800000r		; 1	; PlayerHPrate
?P1HPrate@@3MA DD 03f800000r			; 1	; P1HPrate
?P2HPrate@@3MA DD 03f800000r			; 1	; P2HPrate
?P3HPrate@@3MA DD 03f800000r			; 1	; P3HPrate
?MaxTime@@3HA DD 01f4H					; MaxTime
?Timerrate@@3MA DD 03f800000r			; 1	; Timerrate
_DATA	ENDS
PUBLIC	_WinMain@16
PUBLIC	___local_stdio_printf_options
PUBLIC	__vsnprintf_l
PUBLIC	_vsprintf
PUBLIC	?DXW_Init@@YAHXZ				; DXW_Init
PUBLIC	?DXW_MainLoop@@YAXXZ				; DXW_MainLoop
PUBLIC	?DXW_DisplayInfo@@YAXXZ				; DXW_DisplayInfo
PUBLIC	?DXW_ReleaseWinMode@@YAXXZ			; DXW_ReleaseWinMode
PUBLIC	?__WndProc@@YGJPAUHWND__@@IIJ@Z			; __WndProc
PUBLIC	?__WinKeyDown@@YAXPAUHWND__@@I@Z		; __WinKeyDown
PUBLIC	?__WinDestroy@@YAXXZ				; __WinDestroy
PUBLIC	?__DDInit@@YAHXZ				; __DDInit
PUBLIC	?__DDInitWin@@YAHH@Z				; __DDInitWin
PUBLIC	?__DDSWBlt@@YAJXZ				; __DDSWBlt
PUBLIC	?__ReleaseAllObjects@@YAXXZ			; __ReleaseAllObjects
PUBLIC	?__CreateSurface@@YAPAUIDirectDrawSurface7@@KKH@Z ; __CreateSurface
PUBLIC	?__DDCSetClipperWin@@YAHXZ			; __DDCSetClipperWin
PUBLIC	?__DDCSetClipper@@YAHPAUIDirectDrawSurface7@@HHHH@Z ; __DDCSetClipper
PUBLIC	?__DDCSetClipperList@@YAHPAUIDirectDrawSurface7@@PAUtagRECT@@H@Z ; __DDCSetClipperList
PUBLIC	?__CreateFont@@YAXPBDHH@Z			; __CreateFont
PUBLIC	?__DestroyFont@@YAXXZ				; __DestroyFont
PUBLIC	?__PutText@@YAXHHKPBD@Z				; __PutText
PUBLIC	?__PutTextf@@YAXHHKPADZZ			; __PutTextf
PUBLIC	?__GetDC@@YAXPAUIDirectDrawSurface7@@@Z		; __GetDC
PUBLIC	?__ReleaseDC@@YAXPAUIDirectDrawSurface7@@@Z	; __ReleaseDC
PUBLIC	?_FillRectEx@@YAXPAUIDirectDrawSurface7@@PAUtagRECT@@K@Z ; _FillRectEx
PUBLIC	?__Lock@@YAHPAUIDirectDrawSurface7@@@Z		; __Lock
PUBLIC	?__Unlock@@YAHPAUIDirectDrawSurface7@@@Z	; __Unlock
PUBLIC	?__PutPixel32@@YAXHHK@Z				; __PutPixel32
PUBLIC	?__PutPixel16@@YAXHHG@Z				; __PutPixel16
PUBLIC	?__PutPixel8@@YAXHHE@Z				; __PutPixel8
PUBLIC	?__GetPixel16@@YAGHH@Z				; __GetPixel16
PUBLIC	?__DrawVLine16@@YAXHHHG@Z			; __DrawVLine16
PUBLIC	?__DrawHLine16@@YAXHHHG@Z			; __DrawHLine16
PUBLIC	?__DrawRect16@@YAXHHHHG@Z			; __DrawRect16
PUBLIC	?__CheckRGBBit@@YAKPAUIDirectDrawSurface7@@@Z	; __CheckRGBBit
PUBLIC	?__GetPixelRGB16@@YAGHHH@Z			; __GetPixelRGB16
PUBLIC	?__CPYDDS@@YAXHHPAUtagRECT@@@Z			; __CPYDDS
PUBLIC	?__DDLoadBin@@YAPAUIDirectDrawSurface7@@PBDH@Z	; __DDLoadBin
PUBLIC	?__MEM2DDS@@YAHPAUIDirectDrawSurface7@@PAEHH@Z	; __MEM2DDS
PUBLIC	?__PutImage@@YAXPAUIDirectDrawSurface7@@HH@Z	; __PutImage
PUBLIC	?__PutSprite@@YAXPAUIDirectDrawSurface7@@HH@Z	; __PutSprite
PUBLIC	?__Putbar@@YAXPAUIDirectDrawSurface7@@HHHHM@Z	; __Putbar
PUBLIC	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
PUBLIC	?__PutImageLock@@YAXPAUIDirectDrawSurface7@@HH@Z ; __PutImageLock
PUBLIC	?__PutSpriteLock16@@YAXPAUIDirectDrawSurface7@@HH@Z ; __PutSpriteLock16
PUBLIC	?__PutSpriteLock32@@YAXPAUIDirectDrawSurface7@@HH@Z ; __PutSpriteLock32
PUBLIC	?__PutImageEx@@YAXPAUIDirectDrawSurface7@@HH@Z	; __PutImageEx
PUBLIC	?__PutSpriteEx@@YAXPAUIDirectDrawSurface7@@HH@Z	; __PutSpriteEx
PUBLIC	?__PutSpriteLockFast16@@YAXPAUIDirectDrawSurface7@@HH@Z ; __PutSpriteLockFast16
PUBLIC	?__PutSpriteLockFastEx16@@YAXPAUIDirectDrawSurface7@@HH@Z ; __PutSpriteLockFastEx16
PUBLIC	?__DDSSetColorKeyEx@@YAHPAUIDirectDrawSurface7@@KK@Z ; __DDSSetColorKeyEx
PUBLIC	?__GetClipRect@@YAHHHHHPAUtagRECT@@0@Z		; __GetClipRect
PUBLIC	?__CreateFastVBuffer@@YAHKKK@Z			; __CreateFastVBuffer
PUBLIC	?__CreateFastSBuffer@@YAHKKK@Z			; __CreateFastSBuffer
PUBLIC	?__CreateFastSBuffer2@@YAHKKK@Z			; __CreateFastSBuffer2
PUBLIC	?__PutSpriteCk@@YAXPAUIDirectDrawSurface7@@HH@Z	; __PutSpriteCk
PUBLIC	?__PutSpriteLockFastCkEx16@@YAXPAUIDirectDrawSurface7@@HHK@Z ; __PutSpriteLockFastCkEx16
PUBLIC	?DXW_LUTInit@@YAXXZ				; DXW_LUTInit
PUBLIC	?__FxFadeIn@@YAXPAUIDirectDrawSurface7@@0K@Z	; __FxFadeIn
PUBLIC	?__FxFadeOut@@YAXPAUIDirectDrawSurface7@@0K@Z	; __FxFadeOut
PUBLIC	?__FxFadeInOutEx@@YAXPAUIDirectDrawSurface7@@0K@Z ; __FxFadeInOutEx
PUBLIC	?__FxFadeTo@@YAXPAUIDirectDrawSurface7@@0KKK@Z	; __FxFadeTo
PUBLIC	?__FxGrayScale@@YAXPAUIDirectDrawSurface7@@0@Z	; __FxGrayScale
PUBLIC	?__FxColorize@@YAXPAUIDirectDrawSurface7@@0KKK@Z ; __FxColorize
PUBLIC	?_ChangeDisplayMode@@YAHKKG@Z			; _ChangeDisplayMode
PUBLIC	?__Init@@YAHPAUHINSTANCE__@@H@Z			; __Init
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	?gFpsMng@@3VCFpsMng@@A				; gFpsMng
PUBLIC	?m_HHSound@@3VCHHSound@@A			; m_HHSound
PUBLIC	?P1HP@@3HA					; P1HP
PUBLIC	?P2HP@@3HA					; P2HP
PUBLIC	?P3HP@@3HA					; P3HP
PUBLIC	?PlayerHP@@3HA					; PlayerHP
PUBLIC	??_C@_08ICEDOJGP@DxWFrame@			; `string'
PUBLIC	??_C@_0BG@JAJIBLHA@music?1Diffraction?4wav@	; `string'
PUBLIC	??_C@_0BF@IOJJCNGD@music?1MirrorCage?4wav@	; `string'
PUBLIC	??_C@_0BE@PCCFIAPH@music?1BloodCage?4wav@	; `string'
PUBLIC	??_C@_0BF@PLJGCCMO@sound?1RagingBlow?4wav@	; `string'
PUBLIC	??_C@_0BB@OGFBJJAC@sound?1Charge?4wav@		; `string'
PUBLIC	??_C@_0BG@LFOPIDOF@sound?1Worldreaver?4wav@	; `string'
PUBLIC	??_C@_0BJ@DDLHJIFA@sound?1WorldreaverHit?4wav@	; `string'
PUBLIC	??_C@_0CL@NKEIDMPK@?$DN?$DN?$DN?$DN?$DN?5Open?5Process?5?$DN?$DN?$DN?$DN?$DN?5?$FL?5DxWF@ ; `string'
PUBLIC	??_C@_0BL@MGKPEOFF@HRes?5?$CF4d?5VRes?5?$CF4d?5Bpp?5?$CF2d?6@ ; `string'
PUBLIC	??_C@_0CM@KCIILGMA@?$DN?$DN?$DN?$DN?$DN?5Close?5Process?5?$DN?$DN?$DN?$DN?$DN?5?$FL?5DxW@ ; `string'
PUBLIC	??_C@_0O@MKKLKCPA@__WinDestroy?6@		; `string'
PUBLIC	??_C@_0BE@OHABGOPB@DXW_ReleaseWinMode?6@	; `string'
PUBLIC	?__LINE__Var@?0??DXW_Init@@YAHXZ@4JA		; `DXW_Init'::`1'::__LINE__Var
PUBLIC	??_C@_0P@MIMHEJLI@image?1Hero?4bmp@		; `string'
PUBLIC	??_C@_0P@MPHNJBIF@image?1Hole?4bmp@		; `string'
PUBLIC	??_C@_0BG@MCGLLKNE@image?1SkillButton?4bmp@	; `string'
PUBLIC	??_C@_0BE@EFMCEHEN@image?1SkillCool?4bmp@	; `string'
PUBLIC	??_C@_0BA@IIOEGDCI@image?1Cast3?4bmp@		; `string'
PUBLIC	??_C@_0BA@JFOBFDJA@image?1Cast4?4bmp@		; `string'
PUBLIC	??_C@_0BF@LBHFHDLC@image?1CastAttack?4bmp@	; `string'
PUBLIC	??_C@_0BM@EFMPOJLK@image?1BossAttackMotionL?4bmp@ ; `string'
PUBLIC	??_C@_0BM@HMBDIKFB@image?1BossAttackMotionR?4bmp@ ; `string'
PUBLIC	??_C@_0BH@PDGBKHPO@image?1BossAttack2R?4bmp@	; `string'
PUBLIC	??_C@_0BH@MKLNMEBF@image?1BossAttack2L?4bmp@	; `string'
PUBLIC	??_C@_0BG@MIHCLFFG@image?1Worldreaver?4bmp@	; `string'
PUBLIC	??_C@_0BH@BGEGJJDF@image?1Boss3AttackL?4bmp@	; `string'
PUBLIC	??_C@_0BH@CPJKPKNO@image?1Boss3AttackR?4bmp@	; `string'
PUBLIC	??_C@_0BJ@OPEOHJGM@image?1Boss3Attack33L?4bmp@	; `string'
PUBLIC	??_C@_0BJ@NGJCBKIH@image?1Boss3Attack33R?4bmp@	; `string'
PUBLIC	??_C@_0BH@OOONBDHA@image?1GroundAttack?4bmp@	; `string'
PUBLIC	??_C@_0BB@IGNNDELJ@image?1HeroRR?4bmp@		; `string'
PUBLIC	??_C@_0BD@JDMLGABL@image?1BossAtt2?4bmp@	; `string'
PUBLIC	??_C@_0BD@FIJHLDLO@image?1BossAtt3?4bmp@	; `string'
PUBLIC	??_C@_0BE@CJOBCKBE@image?1BossStand?4bmp@	; `string'
PUBLIC	??_C@_0BF@JILCBECG@image?1BossStandR?4bmp@	; `string'
PUBLIC	??_C@_0BB@MBFJKOFI@image?1BossHP?4bmp@		; `string'
PUBLIC	??_C@_0BB@MBNFNPOD@image?1Charge?4bmp@		; `string'
PUBLIC	??_C@_0BC@LLIDEHGM@image?1ChargeR?4bmp@		; `string'
PUBLIC	??_C@_0BE@IEPKBFCI@image?1BossHPbar?4bmp@	; `string'
PUBLIC	??_C@_0BD@OCDLPHOG@image?1PlayerHP?4bmp@	; `string'
PUBLIC	??_C@_0BG@IDPPCAHI@image?1PlayerHPbar?4bmp@	; `string'
PUBLIC	??_C@_0BF@GICFCKM@image?1RagingBlow?4bmp@	; `string'
PUBLIC	??_C@_0BG@FNCHEMOA@image?1RagingBlowR?4bmp@	; `string'
PUBLIC	??_C@_0BG@KKLAIKPC@image?1Boss3StandL?4bmp@	; `string'
PUBLIC	??_C@_0BG@JDGMOJBJ@image?1Boss3StandR?4bmp@	; `string'
PUBLIC	??_C@_0BC@LDOKHLD@image?1BossHit?4bmp@		; `string'
PUBLIC	??_C@_0BE@CHMEFLGB@image?1PlayerHit?4bmp@	; `string'
PUBLIC	??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@ ; `string'
PUBLIC	??_C@_0BD@CJHDELKA@?$LP?$MA?G?A?$LN?$LK?E?$KJ?$LI?$LA?$LL?$PN?$LM?$LK?$LN?G?F?P@ ; `string'
PUBLIC	??_C@_0BA@HCGNGLPL@image?1Title?4bmp@		; `string'
PUBLIC	??_C@_0O@MJENNBBN@image?1MI1?4bmp@		; `string'
PUBLIC	??_C@_0O@EPNJKDLD@image?1MI2?4bmp@		; `string'
PUBLIC	??_C@_0O@IEIFHABG@image?1MI3?4bmp@		; `string'
PUBLIC	??_C@_0BD@PFPDFPIN@image?1GameOver?4bmp@	; `string'
PUBLIC	??_C@_0O@EMPBFEPO@image?1End?4bmp@		; `string'
PUBLIC	??_C@_0M@DJJLNBDH@bahnschrift@			; `string'
PUBLIC	??_C@_0M@OFBGHODP@DXW_Init?$CI?$CJ?6@		; `string'
PUBLIC	?__LINE__Var@?0??DXW_MainLoop@@YAXXZ@4JA	; `DXW_MainLoop'::`1'::__LINE__Var
PUBLIC	??_C@_0M@JLGAMLOF@P3PAT?5?$CFd?1?$CFd@		; `string'
PUBLIC	??_C@_06KJFAFILI@FPS?5?$CFd@			; `string'
PUBLIC	??_C@_05LCKIIOJE@?$CFd?1?$CFd@			; `string'
PUBLIC	?__LINE__Var@?0??__DDLoadBin@@YAPAUIDirectDrawSurface7@@PBDH@Z@4JA ; `__DDLoadBin'::`1'::__LINE__Var
PUBLIC	??_C@_02JDPG@rb@				; `string'
PUBLIC	??_C@_0L@EKKCFCMM@_DDLoadBin@			; `string'
PUBLIC	?__LINE__Var@?0??__MEM2DDS@@YAHPAUIDirectDrawSurface7@@PAEHH@Z@4JA ; `__MEM2DDS'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??__PutImage@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA ; `__PutImage'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??__PutSprite@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA ; `__PutSprite'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z@4JA ; `__PutAnimeSprite'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??__Putbar@@YAXPAUIDirectDrawSurface7@@HHHHM@Z@4JA ; `__Putbar'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??__PutImageLock@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA ; `__PutImageLock'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??__PutSpriteLock16@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA ; `__PutSpriteLock16'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??__PutSpriteLock32@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA ; `__PutSpriteLock32'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??__PutSpriteLockFast16@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA ; `__PutSpriteLockFast16'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??__PutImageEx@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA ; `__PutImageEx'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??__PutSpriteEx@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA ; `__PutSpriteEx'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??__PutSpriteLockFastEx16@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA ; `__PutSpriteLockFastEx16'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??__PutSpriteLockFastCkEx16@@YAXPAUIDirectDrawSurface7@@HHK@Z@4JA ; `__PutSpriteLockFastCkEx16'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??__Lock@@YAHPAUIDirectDrawSurface7@@@Z@4JA ; `__Lock'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??__Unlock@@YAHPAUIDirectDrawSurface7@@@Z@4JA ; `__Unlock'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??__CheckRGBBit@@YAKPAUIDirectDrawSurface7@@@Z@4JA ; `__CheckRGBBit'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??__DDInit@@YAHXZ@4JA		; `__DDInit'::`1'::__LINE__Var
PUBLIC	??_C@_0BA@GIFBBLHC@FullMode?5Init?4?6@		; `string'
PUBLIC	?__LINE__Var@?0??__DDInitWin@@YAHH@Z@4JA	; `__DDInitWin'::`1'::__LINE__Var
PUBLIC	??_C@_0DO@MBFLDADI@?$MA?$KJ?$LF?$LF?$LP?l?$LI?p?$LF?e?5?$LM?$LD?A?$KE?5?$LN?G?F?P?5?9?5?G?v?$MA?g?$MA?G?5?D@ ; `string'
PUBLIC	??_C@_0BC@DCLIPGJC@WindowMode?5Init?4?6@	; `string'
PUBLIC	?__LINE__Var@?0??__DDCSetClipperWin@@YAHXZ@4JA	; `__DDCSetClipperWin'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??__DDCSetClipper@@YAHPAUIDirectDrawSurface7@@HHHH@Z@4JA ; `__DDCSetClipper'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??__DDCSetClipperList@@YAHPAUIDirectDrawSurface7@@PAUtagRECT@@H@Z@4JA ; `__DDCSetClipperList'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??__CreateSurface@@YAPAUIDirectDrawSurface7@@KKH@Z@4JA ; `__CreateSurface'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??_FillRectEx@@YAXPAUIDirectDrawSurface7@@PAUtagRECT@@K@Z@4JA ; `_FillRectEx'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??__DDSSetColorKeyEx@@YAHPAUIDirectDrawSurface7@@KK@Z@4JA ; `__DDSSetColorKeyEx'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??__CreateFastVBuffer@@YAHKKK@Z@4JA ; `__CreateFastVBuffer'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??__CreateFastSBuffer@@YAHKKK@Z@4JA ; `__CreateFastSBuffer'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??__CreateFastSBuffer2@@YAHKKK@Z@4JA ; `__CreateFastSBuffer2'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??__PutSpriteCk@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA ; `__PutSpriteCk'::`1'::__LINE__Var
PUBLIC	??_C@_1HK@NIMBEDFO@?$AAc?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAa?$AAd?$AAm?$AAi?$AAn?$AAi@ ; `string'
PUBLIC	??_C@_1BG@HOMGOKFD@?$AAl?$AAp?$AAD?$AAD?$AAS?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	__xmm@41f00000000000000000000000000000
EXTRN	_atexit:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	_strlen:PROC
EXTRN	__imp__GetCurrentProcess@0:PROC
EXTRN	__imp__GetCurrentProcessId@0:PROC
EXTRN	__imp__SetPriorityClass@8:PROC
EXTRN	__imp__CreateFontA@56:PROC
EXTRN	__imp__DeleteObject@4:PROC
EXTRN	__imp__GetDeviceCaps@8:PROC
EXTRN	__imp__SelectObject@8:PROC
EXTRN	__imp__SetBkMode@8:PROC
EXTRN	__imp__SetTextColor@8:PROC
EXTRN	__imp__TextOutA@20:PROC
EXTRN	__imp__GetMessageA@16:PROC
EXTRN	__imp__TranslateMessage@4:PROC
EXTRN	__imp__DispatchMessageA@4:PROC
EXTRN	__imp__PeekMessageA@20:PROC
EXTRN	__imp__PostMessageA@16:PROC
EXTRN	__imp__WaitMessage@0:PROC
EXTRN	__imp__DefWindowProcA@16:PROC
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	__imp__RegisterClassA@4:PROC
EXTRN	__imp__CreateWindowExA@48:PROC
EXTRN	__imp__ShowWindow@8:PROC
EXTRN	__imp__GetKeyState@4:PROC
EXTRN	__imp__UpdateWindow@4:PROC
EXTRN	__imp__GetDC@4:PROC
EXTRN	__imp__ReleaseDC@8:PROC
EXTRN	__imp__GetClientRect@8:PROC
EXTRN	__imp__SetCursor@4:PROC
EXTRN	__imp__ClientToScreen@8:PROC
EXTRN	__imp__SetRect@20:PROC
EXTRN	__imp__IntersectRect@12:PROC
EXTRN	__imp__OffsetRect@12:PROC
EXTRN	__imp__LoadCursorA@8:PROC
EXTRN	__imp__LoadIconA@8:PROC
EXTRN	__imp__ChangeDisplaySettingsA@8:PROC
EXTRN	_free:PROC
EXTRN	_srand:PROC
EXTRN	_rand:PROC
EXTRN	_fclose:PROC
EXTRN	_fopen:PROC
EXTRN	_fread:PROC
EXTRN	___stdio_common_vsprintf:PROC
EXTRN	__time64:PROC
EXTRN	_DirectDrawCreate@12:PROC
EXTRN	_DirectDrawCreateEx@16:PROC
EXTRN	_DirectDrawCreateClipper@12:PROC
EXTRN	__CrtDumpMemoryLeaks:PROC
EXTRN	__malloc_dbg:PROC
EXTRN	?___Trace0@@YAXPAD@Z:PROC			; ___Trace0
EXTRN	?___Trace@@YAXPADZZ:PROC			; ___Trace
EXTRN	?___Error@@YAHPAD0H@Z:PROC			; ___Error
EXTRN	?___DDError@@YAHJPADH@Z:PROC			; ___DDError
EXTRN	__wassert:PROC
EXTRN	_DDLoadBitmap:PROC
EXTRN	_DDColorMatch:PROC
EXTRN	_DDSetColorKey:PROC
EXTRN	??0CFpsMng@@QAE@XZ:PROC				; CFpsMng::CFpsMng
EXTRN	??1CFpsMng@@UAE@XZ:PROC				; CFpsMng::~CFpsMng
EXTRN	?SetFPS@CFpsMng@@QAEXK@Z:PROC			; CFpsMng::SetFPS
EXTRN	?GetFPS@CFpsMng@@QAEKXZ:PROC			; CFpsMng::GetFPS
EXTRN	?FrameTuningEx@CFpsMng@@QAEXXZ:PROC		; CFpsMng::FrameTuningEx
EXTRN	?Init@CHHSound@@QAEXPAUHWND__@@@Z:PROC		; CHHSound::Init
EXTRN	?LoadWave@CHHSound@@QAE_NPADPAPAUIDirectSoundBuffer@@@Z:PROC ; CHHSound::LoadWave
EXTRN	?Play@CHHSound@@QAEXPAUIDirectSoundBuffer@@_N@Z:PROC ; CHHSound::Play
EXTRN	?Stop@CHHSound@@QAEXPAUIDirectSoundBuffer@@@Z:PROC ; CHHSound::Stop
EXTRN	?SetVolume@CHHSound@@QAEXPAUIDirectSoundBuffer@@J@Z:PROC ; CHHSound::SetVolume
EXTRN	??0CHHSound@@QAE@XZ:PROC			; CHHSound::CHHSound
EXTRN	??1CHHSound@@QAE@XZ:PROC			; CHHSound::~CHHSound
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_UninitUse:PROC
EXTRN	_IID_IDirectDraw7:BYTE
EXTRN	?hWnd@@3PAUHWND__@@A:DWORD			; hWnd
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?gFpsMng@@3VCFpsMng@@A DB 038H DUP (?)			; gFpsMng
?m_HHSound@@3VCHHSound@@A DD 01H DUP (?)		; m_HHSound
?P1HP@@3HA DD	01H DUP (?)				; P1HP
?P2HP@@3HA DD	01H DUP (?)				; P2HP
?P3HP@@3HA DD	01H DUP (?)				; P3HP
?PlayerHP@@3HA DD 01H DUP (?)				; PlayerHP
?bIsFpsMax@?1??__WinKeyDown@@YAXPAUHWND__@@I@Z@4HA DD 01H DUP (?) ; `__WinKeyDown'::`2'::bIsFpsMax
_BSS	ENDS
CRT$XCU	SEGMENT
?gFpsMng$initializer$@@3P6AXXZA DD FLAT:??__EgFpsMng@@YAXXZ ; gFpsMng$initializer$
CRT$XCU	ENDS
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_1BG@HOMGOKFD@?$AAl?$AAp?$AAD?$AAD?$AAS?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1BG@HOMGOKFD@?$AAl?$AAp?$AAD?$AAD?$AAS?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 'l'
	DB	00H, 'p', 00H, 'D', 00H, 'D', 00H, 'S', 00H, ' ', 00H, '!', 00H
	DB	'=', 00H, ' ', 00H, '0', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1HK@NIMBEDFO@?$AAc?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAa?$AAd?$AAm?$AAi?$AAn?$AAi@
CONST	SEGMENT
??_C@_1HK@NIMBEDFO@?$AAc?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAa?$AAd?$AAm?$AAi?$AAn?$AAi@ DB 'c'
	DB	00H, ':', 00H, '\', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'a', 00H, 'd', 00H, 'm', 00H, 'i', 00H, 'n'
	DB	00H, 'i', 00H, 's', 00H, 't', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, '\', 00H, 'd', 00H, 'e', 00H, 's', 00H, 'k'
	DB	00H, 't', 00H, 'o', 00H, 'p', 00H, '\', 00H, '@', 0aeH, 0c0H, 0c9H
	DB	0c8H, 0d6H, ' ', 00H, '-', 00H, ' ', 00H, 0f8H, 0bbH, 0ecH, 0b7H
	DB	0d4H, 0c6H, 0dcH, 0b4H, '\', 00H, '1', 00H, '.', 00H, 's', 00H
	DB	'r', 00H, 'c', 00H, '\', 00H, 'd', 00H, 'x', 00H, 'w', 00H, 'f'
	DB	00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H, '.', 00H, 'c', 00H
	DB	'p', 00H, 'p', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??__PutSpriteCk@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??__PutSpriteCk@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA DD 017b1H ; `__PutSpriteCk'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??__CreateFastSBuffer2@@YAHKKK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??__CreateFastSBuffer2@@YAHKKK@Z@4JA DD 01794H ; `__CreateFastSBuffer2'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??__CreateFastSBuffer@@YAHKKK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??__CreateFastSBuffer@@YAHKKK@Z@4JA DD 0177eH ; `__CreateFastSBuffer'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??__CreateFastVBuffer@@YAHKKK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??__CreateFastVBuffer@@YAHKKK@Z@4JA DD 01768H ; `__CreateFastVBuffer'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??__DDSSetColorKeyEx@@YAHPAUIDirectDrawSurface7@@KK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??__DDSSetColorKeyEx@@YAHPAUIDirectDrawSurface7@@KK@Z@4JA DD 0175dH ; `__DDSSetColorKeyEx'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??_FillRectEx@@YAXPAUIDirectDrawSurface7@@PAUtagRECT@@K@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_FillRectEx@@YAXPAUIDirectDrawSurface7@@PAUtagRECT@@K@Z@4JA DD 01723H ; `_FillRectEx'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??__CreateSurface@@YAPAUIDirectDrawSurface7@@KKH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??__CreateSurface@@YAPAUIDirectDrawSurface7@@KKH@Z@4JA DD 01671H ; `__CreateSurface'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??__DDCSetClipperList@@YAHPAUIDirectDrawSurface7@@PAUtagRECT@@H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??__DDCSetClipperList@@YAHPAUIDirectDrawSurface7@@PAUtagRECT@@H@Z@4JA DD 01652H ; `__DDCSetClipperList'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??__DDCSetClipper@@YAHPAUIDirectDrawSurface7@@HHHH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??__DDCSetClipper@@YAHPAUIDirectDrawSurface7@@HHHH@Z@4JA DD 01631H ; `__DDCSetClipper'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??__DDCSetClipperWin@@YAHXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??__DDCSetClipperWin@@YAHXZ@4JA DD 0161bH ; `__DDCSetClipperWin'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BC@DCLIPGJC@WindowMode?5Init?4?6@
CONST	SEGMENT
??_C@_0BC@DCLIPGJC@WindowMode?5Init?4?6@ DB 'WindowMode Init.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@MBFLDADI@?$MA?$KJ?$LF?$LF?$LP?l?$LI?p?$LF?e?5?$LM?$LD?A?$KE?5?$LN?G?F?P?5?9?5?G?v?$MA?g?$MA?G?5?D@
CONST	SEGMENT
??_C@_0DO@MBFLDADI@?$MA?$KJ?$LF?$LF?$LP?l?$LI?p?$LF?e?5?$LM?$LD?A?$KE?5?$LN?G?F?P?5?9?5?G?v?$MA?g?$MA?G?5?D@ DB 0c0H
	DB	0a9H, 0b5H, 0b5H, 0bfH, 0ecH, 0b8H, 0f0H, 0b5H, 0e5H, ' ', 0bcH
	DB	0b3H, 0c1H, 0a4H, ' ', 0bdH, 0c7H, 0c6H, 0d0H, ' - ', 0c7H, 0f6H
	DB	0c0H, 0e7H, 0c0H, 0c7H, ' ', 0c4H, 0c3H, 0b7H, 0afH, 0b8H, 0f0H
	DB	0b5H, 0e5H, 0bfH, 0cdH, ' ', 0bdH, 0c7H, 0c7H, 0e0H, 0b8H, 0f0H
	DB	0b5H, 0e5H, 0b0H, 0a1H, ' ', 0b4H, 0d9H, 0b8H, 0a8H, 0b4H, 0cfH
	DB	0b4H, 0d9H, 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??__DDInitWin@@YAHH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??__DDInitWin@@YAHH@Z@4JA DD 015ecH	; `__DDInitWin'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BA@GIFBBLHC@FullMode?5Init?4?6@
CONST	SEGMENT
??_C@_0BA@GIFBBLHC@FullMode?5Init?4?6@ DB 'FullMode Init.', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??__DDInit@@YAHXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??__DDInit@@YAHXZ@4JA DD 015bfH		; `__DDInit'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??__CheckRGBBit@@YAKPAUIDirectDrawSurface7@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??__CheckRGBBit@@YAKPAUIDirectDrawSurface7@@@Z@4JA DD 015a5H ; `__CheckRGBBit'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??__Unlock@@YAHPAUIDirectDrawSurface7@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??__Unlock@@YAHPAUIDirectDrawSurface7@@@Z@4JA DD 01524H ; `__Unlock'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??__Lock@@YAHPAUIDirectDrawSurface7@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??__Lock@@YAHPAUIDirectDrawSurface7@@@Z@4JA DD 0151aH ; `__Lock'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??__PutSpriteLockFastCkEx16@@YAXPAUIDirectDrawSurface7@@HHK@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??__PutSpriteLockFastCkEx16@@YAXPAUIDirectDrawSurface7@@HHK@Z@4JA DD 01460H ; `__PutSpriteLockFastCkEx16'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??__PutSpriteLockFastEx16@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??__PutSpriteLockFastEx16@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA DD 013adH ; `__PutSpriteLockFastEx16'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??__PutSpriteEx@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??__PutSpriteEx@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA DD 01372H ; `__PutSpriteEx'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??__PutImageEx@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??__PutImageEx@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA DD 0133eH ; `__PutImageEx'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??__PutSpriteLockFast16@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??__PutSpriteLockFast16@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA DD 012cbH ; `__PutSpriteLockFast16'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??__PutSpriteLock32@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??__PutSpriteLock32@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA DD 01295H ; `__PutSpriteLock32'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??__PutSpriteLock16@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??__PutSpriteLock16@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA DD 01260H ; `__PutSpriteLock16'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??__PutImageLock@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??__PutImageLock@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA DD 01232H ; `__PutImageLock'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??__Putbar@@YAXPAUIDirectDrawSurface7@@HHHHM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??__Putbar@@YAXPAUIDirectDrawSurface7@@HHHHM@Z@4JA DD 0121bH ; `__Putbar'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z@4JA DD 011feH ; `__PutAnimeSprite'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??__PutSprite@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??__PutSprite@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA DD 011efH ; `__PutSprite'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??__PutImage@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??__PutImage@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA DD 011dfH ; `__PutImage'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??__MEM2DDS@@YAHPAUIDirectDrawSurface7@@PAEHH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??__MEM2DDS@@YAHPAUIDirectDrawSurface7@@PAEHH@Z@4JA DD 011b6H ; `__MEM2DDS'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0L@EKKCFCMM@_DDLoadBin@
CONST	SEGMENT
??_C@_0L@EKKCFCMM@_DDLoadBin@ DB '_DDLoadBin', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02JDPG@rb@
CONST	SEGMENT
??_C@_02JDPG@rb@ DB 'rb', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??__DDLoadBin@@YAPAUIDirectDrawSurface7@@PBDH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??__DDLoadBin@@YAPAUIDirectDrawSurface7@@PBDH@Z@4JA DD 01196H ; `__DDLoadBin'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_05LCKIIOJE@?$CFd?1?$CFd@
CONST	SEGMENT
??_C@_05LCKIIOJE@?$CFd?1?$CFd@ DB '%d/%d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06KJFAFILI@FPS?5?$CFd@
CONST	SEGMENT
??_C@_06KJFAFILI@FPS?5?$CFd@ DB 'FPS %d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JLGAMLOF@P3PAT?5?$CFd?1?$CFd@
CONST	SEGMENT
??_C@_0M@JLGAMLOF@P3PAT?5?$CFd?1?$CFd@ DB 'P3PAT %d/%d', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??DXW_MainLoop@@YAXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??DXW_MainLoop@@YAXXZ@4JA DD 027cH	; `DXW_MainLoop'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0M@OFBGHODP@DXW_Init?$CI?$CJ?6@
CONST	SEGMENT
??_C@_0M@OFBGHODP@DXW_Init?$CI?$CJ?6@ DB 'DXW_Init()', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DJJLNBDH@bahnschrift@
CONST	SEGMENT
??_C@_0M@DJJLNBDH@bahnschrift@ DB 'bahnschrift', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EMPBFEPO@image?1End?4bmp@
CONST	SEGMENT
??_C@_0O@EMPBFEPO@image?1End?4bmp@ DB 'image/End.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PFPDFPIN@image?1GameOver?4bmp@
CONST	SEGMENT
??_C@_0BD@PFPDFPIN@image?1GameOver?4bmp@ DB 'image/GameOver.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IEIFHABG@image?1MI3?4bmp@
CONST	SEGMENT
??_C@_0O@IEIFHABG@image?1MI3?4bmp@ DB 'image/MI3.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EPNJKDLD@image?1MI2?4bmp@
CONST	SEGMENT
??_C@_0O@EPNJKDLD@image?1MI2?4bmp@ DB 'image/MI2.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MJENNBBN@image?1MI1?4bmp@
CONST	SEGMENT
??_C@_0O@MJENNBBN@image?1MI1?4bmp@ DB 'image/MI1.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HCGNGLPL@image?1Title?4bmp@
CONST	SEGMENT
??_C@_0BA@HCGNGLPL@image?1Title?4bmp@ DB 'image/Title.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CJHDELKA@?$LP?$MA?G?A?$LN?$LK?E?$KJ?$LI?$LA?$LL?$PN?$LM?$LK?$LN?G?F?P@
CONST	SEGMENT
??_C@_0BD@CJHDELKA@?$LP?$MA?G?A?$LN?$LK?E?$KJ?$LI?$LA?$LL?$PN?$LM?$LK?$LN?G?F?P@ DB 0bfH
	DB	0c0H, 0c7H, 0c1H, 0bdH, 0baH, 0c5H, 0a9H, 0b8H, 0b0H, 0bbH, 0fdH
	DB	0bcH, 0baH, 0bdH, 0c7H, 0c6H, 0d0H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
CONST	SEGMENT
??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@ DB 'c:\users\adm'
	DB	'inistrator\desktop\', 0b1H, 0e8H, 0c1H, 0f6H, 0c8H, 0c6H, ' -'
	DB	' ', 0b9H, 0ccH, 0b7H, 0afH, 0bfH, 0f9H, 0b5H, 0e5H, '\1.src\d'
	DB	'xwframe.cpp', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@CHMEFLGB@image?1PlayerHit?4bmp@
CONST	SEGMENT
??_C@_0BE@CHMEFLGB@image?1PlayerHit?4bmp@ DB 'image/PlayerHit.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LDOKHLD@image?1BossHit?4bmp@
CONST	SEGMENT
??_C@_0BC@LDOKHLD@image?1BossHit?4bmp@ DB 'image/BossHit.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@JDGMOJBJ@image?1Boss3StandR?4bmp@
CONST	SEGMENT
??_C@_0BG@JDGMOJBJ@image?1Boss3StandR?4bmp@ DB 'image/Boss3StandR.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@KKLAIKPC@image?1Boss3StandL?4bmp@
CONST	SEGMENT
??_C@_0BG@KKLAIKPC@image?1Boss3StandL?4bmp@ DB 'image/Boss3StandL.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FNCHEMOA@image?1RagingBlowR?4bmp@
CONST	SEGMENT
??_C@_0BG@FNCHEMOA@image?1RagingBlowR?4bmp@ DB 'image/RagingBlowR.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GICFCKM@image?1RagingBlow?4bmp@
CONST	SEGMENT
??_C@_0BF@GICFCKM@image?1RagingBlow?4bmp@ DB 'image/RagingBlow.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IDPPCAHI@image?1PlayerHPbar?4bmp@
CONST	SEGMENT
??_C@_0BG@IDPPCAHI@image?1PlayerHPbar?4bmp@ DB 'image/PlayerHPbar.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OCDLPHOG@image?1PlayerHP?4bmp@
CONST	SEGMENT
??_C@_0BD@OCDLPHOG@image?1PlayerHP?4bmp@ DB 'image/PlayerHP.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@IEPKBFCI@image?1BossHPbar?4bmp@
CONST	SEGMENT
??_C@_0BE@IEPKBFCI@image?1BossHPbar?4bmp@ DB 'image/BossHPbar.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LLIDEHGM@image?1ChargeR?4bmp@
CONST	SEGMENT
??_C@_0BC@LLIDEHGM@image?1ChargeR?4bmp@ DB 'image/ChargeR.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MBNFNPOD@image?1Charge?4bmp@
CONST	SEGMENT
??_C@_0BB@MBNFNPOD@image?1Charge?4bmp@ DB 'image/Charge.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MBFJKOFI@image?1BossHP?4bmp@
CONST	SEGMENT
??_C@_0BB@MBFJKOFI@image?1BossHP?4bmp@ DB 'image/BossHP.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JILCBECG@image?1BossStandR?4bmp@
CONST	SEGMENT
??_C@_0BF@JILCBECG@image?1BossStandR?4bmp@ DB 'image/BossStandR.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@CJOBCKBE@image?1BossStand?4bmp@
CONST	SEGMENT
??_C@_0BE@CJOBCKBE@image?1BossStand?4bmp@ DB 'image/BossStand.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FIJHLDLO@image?1BossAtt3?4bmp@
CONST	SEGMENT
??_C@_0BD@FIJHLDLO@image?1BossAtt3?4bmp@ DB 'image/BossAtt3.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JDMLGABL@image?1BossAtt2?4bmp@
CONST	SEGMENT
??_C@_0BD@JDMLGABL@image?1BossAtt2?4bmp@ DB 'image/BossAtt2.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@IGNNDELJ@image?1HeroRR?4bmp@
CONST	SEGMENT
??_C@_0BB@IGNNDELJ@image?1HeroRR?4bmp@ DB 'image/HeroRR.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@OOONBDHA@image?1GroundAttack?4bmp@
CONST	SEGMENT
??_C@_0BH@OOONBDHA@image?1GroundAttack?4bmp@ DB 'image/GroundAttack.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@NGJCBKIH@image?1Boss3Attack33R?4bmp@
CONST	SEGMENT
??_C@_0BJ@NGJCBKIH@image?1Boss3Attack33R?4bmp@ DB 'image/Boss3Attack33R.b'
	DB	'mp', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@OPEOHJGM@image?1Boss3Attack33L?4bmp@
CONST	SEGMENT
??_C@_0BJ@OPEOHJGM@image?1Boss3Attack33L?4bmp@ DB 'image/Boss3Attack33L.b'
	DB	'mp', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@CPJKPKNO@image?1Boss3AttackR?4bmp@
CONST	SEGMENT
??_C@_0BH@CPJKPKNO@image?1Boss3AttackR?4bmp@ DB 'image/Boss3AttackR.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@BGEGJJDF@image?1Boss3AttackL?4bmp@
CONST	SEGMENT
??_C@_0BH@BGEGJJDF@image?1Boss3AttackL?4bmp@ DB 'image/Boss3AttackL.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MIHCLFFG@image?1Worldreaver?4bmp@
CONST	SEGMENT
??_C@_0BG@MIHCLFFG@image?1Worldreaver?4bmp@ DB 'image/Worldreaver.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@MKLNMEBF@image?1BossAttack2L?4bmp@
CONST	SEGMENT
??_C@_0BH@MKLNMEBF@image?1BossAttack2L?4bmp@ DB 'image/BossAttack2L.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@PDGBKHPO@image?1BossAttack2R?4bmp@
CONST	SEGMENT
??_C@_0BH@PDGBKHPO@image?1BossAttack2R?4bmp@ DB 'image/BossAttack2R.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@HMBDIKFB@image?1BossAttackMotionR?4bmp@
CONST	SEGMENT
??_C@_0BM@HMBDIKFB@image?1BossAttackMotionR?4bmp@ DB 'image/BossAttackMot'
	DB	'ionR.bmp', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@EFMPOJLK@image?1BossAttackMotionL?4bmp@
CONST	SEGMENT
??_C@_0BM@EFMPOJLK@image?1BossAttackMotionL?4bmp@ DB 'image/BossAttackMot'
	DB	'ionL.bmp', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@LBHFHDLC@image?1CastAttack?4bmp@
CONST	SEGMENT
??_C@_0BF@LBHFHDLC@image?1CastAttack?4bmp@ DB 'image/CastAttack.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFOBFDJA@image?1Cast4?4bmp@
CONST	SEGMENT
??_C@_0BA@JFOBFDJA@image?1Cast4?4bmp@ DB 'image/Cast4.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IIOEGDCI@image?1Cast3?4bmp@
CONST	SEGMENT
??_C@_0BA@IIOEGDCI@image?1Cast3?4bmp@ DB 'image/Cast3.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EFMCEHEN@image?1SkillCool?4bmp@
CONST	SEGMENT
??_C@_0BE@EFMCEHEN@image?1SkillCool?4bmp@ DB 'image/SkillCool.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MCGLLKNE@image?1SkillButton?4bmp@
CONST	SEGMENT
??_C@_0BG@MCGLLKNE@image?1SkillButton?4bmp@ DB 'image/SkillButton.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MPHNJBIF@image?1Hole?4bmp@
CONST	SEGMENT
??_C@_0P@MPHNJBIF@image?1Hole?4bmp@ DB 'image/Hole.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MIMHEJLI@image?1Hero?4bmp@
CONST	SEGMENT
??_C@_0P@MIMHEJLI@image?1Hero?4bmp@ DB 'image/Hero.bmp', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??DXW_Init@@YAHXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??DXW_Init@@YAHXZ@4JA DD 01f2H		; `DXW_Init'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BE@OHABGOPB@DXW_ReleaseWinMode?6@
CONST	SEGMENT
??_C@_0BE@OHABGOPB@DXW_ReleaseWinMode?6@ DB 'DXW_ReleaseWinMode', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MKKLKCPA@__WinDestroy?6@
CONST	SEGMENT
??_C@_0O@MKKLKCPA@__WinDestroy?6@ DB '__WinDestroy', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@KCIILGMA@?$DN?$DN?$DN?$DN?$DN?5Close?5Process?5?$DN?$DN?$DN?$DN?$DN?5?$FL?5DxW@
CONST	SEGMENT
??_C@_0CM@KCIILGMA@?$DN?$DN?$DN?$DN?$DN?5Close?5Process?5?$DN?$DN?$DN?$DN?$DN?5?$FL?5DxW@ DB '='
	DB	'==== Close Process ===== [ DxWFrame - %x]', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@MGKPEOFF@HRes?5?$CF4d?5VRes?5?$CF4d?5Bpp?5?$CF2d?6@
CONST	SEGMENT
??_C@_0BL@MGKPEOFF@HRes?5?$CF4d?5VRes?5?$CF4d?5Bpp?5?$CF2d?6@ DB 'HRes %4'
	DB	'd VRes %4d Bpp %2d', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@NKEIDMPK@?$DN?$DN?$DN?$DN?$DN?5Open?5Process?5?$DN?$DN?$DN?$DN?$DN?5?$FL?5DxWF@
CONST	SEGMENT
??_C@_0CL@NKEIDMPK@?$DN?$DN?$DN?$DN?$DN?5Open?5Process?5?$DN?$DN?$DN?$DN?$DN?5?$FL?5DxWF@ DB '='
	DB	'==== Open Process ===== [ DxWFrame - %x]', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DDLHJIFA@sound?1WorldreaverHit?4wav@
CONST	SEGMENT
??_C@_0BJ@DDLHJIFA@sound?1WorldreaverHit?4wav@ DB 'sound/WorldreaverHit.w'
	DB	'av', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LFOPIDOF@sound?1Worldreaver?4wav@
CONST	SEGMENT
??_C@_0BG@LFOPIDOF@sound?1Worldreaver?4wav@ DB 'sound/Worldreaver.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OGFBJJAC@sound?1Charge?4wav@
CONST	SEGMENT
??_C@_0BB@OGFBJJAC@sound?1Charge?4wav@ DB 'sound/Charge.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PLJGCCMO@sound?1RagingBlow?4wav@
CONST	SEGMENT
??_C@_0BF@PLJGCCMO@sound?1RagingBlow?4wav@ DB 'sound/RagingBlow.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PCCFIAPH@music?1BloodCage?4wav@
CONST	SEGMENT
??_C@_0BE@PCCFIAPH@music?1BloodCage?4wav@ DB 'music/BloodCage.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IOJJCNGD@music?1MirrorCage?4wav@
CONST	SEGMENT
??_C@_0BF@IOJJCNGD@music?1MirrorCage?4wav@ DB 'music/MirrorCage.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@JAJIBLHA@music?1Diffraction?4wav@
CONST	SEGMENT
??_C@_0BG@JAJIBLHA@music?1Diffraction?4wav@ DB 'music/Diffraction.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08ICEDOJGP@DxWFrame@
CONST	SEGMENT
??_C@_08ICEDOJGP@DxWFrame@ DB 'DxWFrame', 00H		; `string'
CONST	ENDS
CRT$XCU	SEGMENT
?m_HHSound$initializer$@@3P6AXXZA DD FLAT:??__Em_HHSound@@YAXXZ ; m_HHSound$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?P1HP$initializer$@@3P6AXXZA DD FLAT:??__EP1HP@@YAXXZ	; P1HP$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?P2HP$initializer$@@3P6AXXZA DD FLAT:??__EP2HP@@YAXXZ	; P2HP$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?P3HP$initializer$@@3P6AXXZA DD FLAT:??__EP3HP@@YAXXZ	; P3HP$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?PlayerHP$initializer$@@3P6AXXZA DD FLAT:??__EPlayerHP@@YAXXZ ; PlayerHP$initializer$
CRT$XCU	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__Init@@YAHPAUHINSTANCE__@@H@Z
_TEXT	SEGMENT
_rval$ = -92						; size = 4
_hProc$ = -80						; size = 4
_WinStyle$ = -68					; size = 4
_ExWinStyle$ = -56					; size = 4
_wc$ = -44						; size = 40
_hInstance$ = 8						; size = 4
_nCmdShow$ = 12						; size = 4
?__Init@@YAHPAUHINSTANCE__@@H@Z PROC			; __Init, COMDAT

; 237  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 238  : 	/////	
; 239  : 	gAppSet.bIsActive      = FALSE;

	mov	DWORD PTR ?gAppSet@@3UtagAPP_SET@@A+4, 0

; 240  : 	gAppSet.bIsDisplayInfo = FALSE;

	mov	DWORD PTR ?gAppSet@@3UtagAPP_SET@@A+8, 0

; 241  : 	gAppSet.bIsPause       = FALSE;	

	mov	DWORD PTR ?gAppSet@@3UtagAPP_SET@@A, 0

; 242  : 	gAppSet.bIsRenderBlank = FALSE;

	mov	DWORD PTR ?gAppSet@@3UtagAPP_SET@@A+12, 0

; 243  : 
; 244  :     /////
; 245  :     WNDCLASS  wc;
; 246  : 
; 247  :     wc.style = CS_HREDRAW | CS_VREDRAW;

	mov	DWORD PTR _wc$[ebp], 3

; 248  :     wc.lpfnWndProc = __WndProc;

	mov	DWORD PTR _wc$[ebp+4], OFFSET ?__WndProc@@YGJPAUHWND__@@IIJ@Z ; __WndProc

; 249  :     wc.cbClsExtra = 0;

	mov	DWORD PTR _wc$[ebp+8], 0

; 250  :     wc.cbWndExtra = 0;

	mov	DWORD PTR _wc$[ebp+12], 0

; 251  :     wc.hInstance = hInstance;

	mov	eax, DWORD PTR _hInstance$[ebp]
	mov	DWORD PTR _wc$[ebp+16], eax

; 252  :     wc.hIcon = LoadIcon( hInstance, IDI_APPLICATION );

	mov	esi, esp
	push	32512					; 00007f00H
	mov	eax, DWORD PTR _hInstance$[ebp]
	push	eax
	call	DWORD PTR __imp__LoadIconA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _wc$[ebp+20], eax

; 253  :     wc.hCursor = LoadCursor( NULL, IDC_ARROW );

	mov	esi, esp
	push	32512					; 00007f00H
	push	0
	call	DWORD PTR __imp__LoadCursorA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _wc$[ebp+24], eax

; 254  :     wc.hbrBackground = NULL;//GetStockObject(BLACK_BRUSH);

	mov	DWORD PTR _wc$[ebp+28], 0

; 255  :     wc.lpszMenuName = NAME;

	mov	DWORD PTR _wc$[ebp+32], OFFSET ??_C@_08ICEDOJGP@DxWFrame@

; 256  :     wc.lpszClassName = NAME;

	mov	DWORD PTR _wc$[ebp+36], OFFSET ??_C@_08ICEDOJGP@DxWFrame@

; 257  :     RegisterClass( &wc );

	mov	esi, esp
	lea	eax, DWORD PTR _wc$[ebp]
	push	eax
	call	DWORD PTR __imp__RegisterClassA@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 258  : 
; 259  :     DWORD ExWinStyle, WinStyle;
; 260  : 
; 261  :     #ifdef _DEBUG
; 262  :         ExWinStyle = NULL;

	mov	DWORD PTR _ExWinStyle$[ebp], 0

; 263  :         WinStyle = WS_POPUPWINDOW | WS_CAPTION;

	mov	DWORD PTR _WinStyle$[ebp], -2134376448	; 80c80000H

; 264  :     #else
; 265  :         ExWinStyle = WS_EX_TOPMOST;
; 266  :         WinStyle = WS_POPUP;
; 267  :     #endif
; 268  : 
; 269  :     hWnd = CreateWindowEx(ExWinStyle,

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _hInstance$[ebp]
	push	eax
	push	0
	push	0
	push	793					; 00000319H
	push	1030					; 00000406H
	push	0
	push	0
	mov	ecx, DWORD PTR _WinStyle$[ebp]
	push	ecx
	push	OFFSET ??_C@_08ICEDOJGP@DxWFrame@
	push	OFFSET ??_C@_08ICEDOJGP@DxWFrame@
	mov	edx, DWORD PTR _ExWinStyle$[ebp]
	push	edx
	call	DWORD PTR __imp__CreateWindowExA@48
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?hWnd@@3PAUHWND__@@A, eax	; hWnd

; 270  :                         NAME,
; 271  :                         TITLE,
; 272  :                         WinStyle,
; 273  :                         0,
; 274  :                         0,
; 275  :                         HRES + HEDGE,
; 276  :                         VRES + VEDGE,
; 277  :                         NULL,
; 278  :                         NULL,
; 279  :                         hInstance,
; 280  :                     	NULL);
; 281  : 
; 282  :     if( !hWnd )	return FALSE;

	cmp	DWORD PTR ?hWnd@@3PAUHWND__@@A, 0	; hWnd
	jne	SHORT $LN2@Init
	xor	eax, eax
	jmp	$LN1@Init
$LN2@Init:

; 283  : 
; 284  :     ShowWindow( hWnd, nCmdShow );

	mov	esi, esp
	mov	eax, DWORD PTR _nCmdShow$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?hWnd@@3PAUHWND__@@A	; hWnd
	push	ecx
	call	DWORD PTR __imp__ShowWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 285  :     UpdateWindow( hWnd );

	mov	esi, esp
	mov	eax, DWORD PTR ?hWnd@@3PAUHWND__@@A	; hWnd
	push	eax
	call	DWORD PTR __imp__UpdateWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 286  : 
; 287  :     /////
; 288  :     HANDLE hProc = ::GetCurrentProcess();

	mov	esi, esp
	call	DWORD PTR __imp__GetCurrentProcess@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hProc$[ebp], eax

; 289  :     #ifdef _DEBUG
; 290  : 		::SetPriorityClass (hProc, NORMAL_PRIORITY_CLASS);

	mov	esi, esp
	push	32					; 00000020H
	mov	eax, DWORD PTR _hProc$[ebp]
	push	eax
	call	DWORD PTR __imp__SetPriorityClass@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 291  :     #else
; 292  : 		::SetPriorityClass (hProc, HIGH_PRIORITY_CLASS);
; 293  :     #endif
; 294  : 		
; 295  : 	   m_HHSound.Init(hWnd);

	mov	eax, DWORD PTR ?hWnd@@3PAUHWND__@@A	; hWnd
	push	eax
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?Init@CHHSound@@QAEXPAUHWND__@@@Z	; CHHSound::Init

; 296  : 
; 297  : 		//»ç¿îµå ÃÊ±âÈ­
; 298  : 		m_HHSound.LoadWave("music/Diffraction.wav", &g_pDS[0]);

	mov	eax, 4
	imul	ecx, eax, 0
	add	ecx, OFFSET ?g_pDS@@3PAPAUIDirectSoundBuffer@@A ; g_pDS
	push	ecx
	push	OFFSET ??_C@_0BG@JAJIBLHA@music?1Diffraction?4wav@
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?LoadWave@CHHSound@@QAE_NPADPAPAUIDirectSoundBuffer@@@Z ; CHHSound::LoadWave

; 299  : 		m_HHSound.SetVolume(g_pDS[0], 100);

	push	100					; 00000064H
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[ecx]
	push	edx
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?SetVolume@CHHSound@@QAEXPAUIDirectSoundBuffer@@J@Z ; CHHSound::SetVolume

; 300  : 
; 301  : 		m_HHSound.LoadWave("music/MirrorCage.wav", &g_pDS[1]);

	mov	eax, 4
	shl	eax, 0
	add	eax, OFFSET ?g_pDS@@3PAPAUIDirectSoundBuffer@@A ; g_pDS
	push	eax
	push	OFFSET ??_C@_0BF@IOJJCNGD@music?1MirrorCage?4wav@
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?LoadWave@CHHSound@@QAE_NPADPAPAUIDirectSoundBuffer@@@Z ; CHHSound::LoadWave

; 302  : 		m_HHSound.SetVolume(g_pDS[1], 100);

	push	100					; 00000064H
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[eax]
	push	ecx
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?SetVolume@CHHSound@@QAEXPAUIDirectSoundBuffer@@J@Z ; CHHSound::SetVolume

; 303  : 
; 304  : 		m_HHSound.LoadWave("music/BloodCage.wav", &g_pDS[2]);

	mov	eax, 4
	shl	eax, 1
	add	eax, OFFSET ?g_pDS@@3PAPAUIDirectSoundBuffer@@A ; g_pDS
	push	eax
	push	OFFSET ??_C@_0BE@PCCFIAPH@music?1BloodCage?4wav@
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?LoadWave@CHHSound@@QAE_NPADPAPAUIDirectSoundBuffer@@@Z ; CHHSound::LoadWave

; 305  : 		m_HHSound.SetVolume(g_pDS[2], 100);

	push	100					; 00000064H
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[eax]
	push	ecx
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?SetVolume@CHHSound@@QAEXPAUIDirectSoundBuffer@@J@Z ; CHHSound::SetVolume

; 306  : 
; 307  : 		m_HHSound.LoadWave("sound/RagingBlow.wav", &g_pDS[3]);

	mov	eax, 4
	imul	ecx, eax, 3
	add	ecx, OFFSET ?g_pDS@@3PAPAUIDirectSoundBuffer@@A ; g_pDS
	push	ecx
	push	OFFSET ??_C@_0BF@PLJGCCMO@sound?1RagingBlow?4wav@
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?LoadWave@CHHSound@@QAE_NPADPAPAUIDirectSoundBuffer@@@Z ; CHHSound::LoadWave

; 308  : 		m_HHSound.SetVolume(g_pDS[3], 100);

	push	100					; 00000064H
	mov	eax, 4
	imul	ecx, eax, 3
	mov	edx, DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[ecx]
	push	edx
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?SetVolume@CHHSound@@QAEXPAUIDirectSoundBuffer@@J@Z ; CHHSound::SetVolume

; 309  : 
; 310  : 		m_HHSound.LoadWave("sound/Charge.wav", &g_pDS[4]);

	mov	eax, 4
	shl	eax, 2
	add	eax, OFFSET ?g_pDS@@3PAPAUIDirectSoundBuffer@@A ; g_pDS
	push	eax
	push	OFFSET ??_C@_0BB@OGFBJJAC@sound?1Charge?4wav@
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?LoadWave@CHHSound@@QAE_NPADPAPAUIDirectSoundBuffer@@@Z ; CHHSound::LoadWave

; 311  : 		m_HHSound.SetVolume(g_pDS[4], 100);

	push	100					; 00000064H
	mov	eax, 4
	shl	eax, 2
	mov	ecx, DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[eax]
	push	ecx
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?SetVolume@CHHSound@@QAEXPAUIDirectSoundBuffer@@J@Z ; CHHSound::SetVolume

; 312  : 
; 313  : 		m_HHSound.LoadWave("sound/Worldreaver.wav", &g_pDS[5]);

	mov	eax, 4
	imul	ecx, eax, 5
	add	ecx, OFFSET ?g_pDS@@3PAPAUIDirectSoundBuffer@@A ; g_pDS
	push	ecx
	push	OFFSET ??_C@_0BG@LFOPIDOF@sound?1Worldreaver?4wav@
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?LoadWave@CHHSound@@QAE_NPADPAPAUIDirectSoundBuffer@@@Z ; CHHSound::LoadWave

; 314  : 		m_HHSound.SetVolume(g_pDS[5], 100);

	push	100					; 00000064H
	mov	eax, 4
	imul	ecx, eax, 5
	mov	edx, DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[ecx]
	push	edx
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?SetVolume@CHHSound@@QAEXPAUIDirectSoundBuffer@@J@Z ; CHHSound::SetVolume

; 315  : 
; 316  : 		m_HHSound.LoadWave("sound/WorldreaverHit.wav", &g_pDS[6]);

	mov	eax, 4
	imul	ecx, eax, 6
	add	ecx, OFFSET ?g_pDS@@3PAPAUIDirectSoundBuffer@@A ; g_pDS
	push	ecx
	push	OFFSET ??_C@_0BJ@DDLHJIFA@sound?1WorldreaverHit?4wav@
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?LoadWave@CHHSound@@QAE_NPADPAPAUIDirectSoundBuffer@@@Z ; CHHSound::LoadWave

; 317  : 		m_HHSound.SetVolume(g_pDS[6], 100);

	push	100					; 00000064H
	mov	eax, 4
	imul	ecx, eax, 6
	mov	edx, DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[ecx]
	push	edx
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?SetVolume@CHHSound@@QAEXPAUIDirectSoundBuffer@@J@Z ; CHHSound::SetVolume

; 318  : 		
; 319  : 		///// ÀÔ·ÂÀåÄ¡ ÃÊ±âÈ­
; 320  : 	///// ÀÔ·ÂÀåÄ¡ ÃÊ±âÈ­
; 321  : 
; 322  : 
; 323  : 	/////
; 324  :     BOOL rval = DXW_Init();

	call	?DXW_Init@@YAHXZ			; DXW_Init
	mov	DWORD PTR _rval$[ebp], eax

; 325  :     if (!rval) return FALSE;

	cmp	DWORD PTR _rval$[ebp], 0
	jne	SHORT $LN3@Init
	xor	eax, eax
	jmp	SHORT $LN1@Init
$LN3@Init:

; 326  : 
; 327  :     return TRUE;

	mov	eax, 1
$LN1@Init:

; 328  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Init
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@Init:
	DD	1
	DD	$LN6@Init
$LN6@Init:
	DD	-44					; ffffffd4H
	DD	40					; 00000028H
	DD	$LN5@Init
$LN5@Init:
	DB	119					; 00000077H
	DB	99					; 00000063H
	DB	0
?__Init@@YAHPAUHINSTANCE__@@H@Z ENDP			; __Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?_ChangeDisplayMode@@YAHKKG@Z
_TEXT	SEGMENT
_rval$ = -176						; size = 4
_dm$ = -164						; size = 156
__$ArrayPad$ = -4					; size = 4
_dwWidth$ = 8						; size = 4
_dwHeight$ = 12						; size = 4
_wBPP$ = 16						; size = 2
?_ChangeDisplayMode@@YAHKKG@Z PROC			; _ChangeDisplayMode, COMDAT

; 221  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 372				; 00000174H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-372]
	mov	ecx, 93					; 0000005dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 222  : 	DEVMODE dm;
; 223  : 	LONG    rval;
; 224  : 	
; 225  : 	dm.dmPelsWidth  = dwWidth;

	mov	eax, DWORD PTR _dwWidth$[ebp]
	mov	DWORD PTR _dm$[ebp+108], eax

; 226  : 	dm.dmPelsHeight = dwHeight;

	mov	eax, DWORD PTR _dwHeight$[ebp]
	mov	DWORD PTR _dm$[ebp+112], eax

; 227  : 	dm.dmBitsPerPel = wBPP;

	movzx	eax, WORD PTR _wBPP$[ebp]
	mov	DWORD PTR _dm$[ebp+104], eax

; 228  : 	dm.dmFields     = DM_PELSWIDTH | DM_PELSHEIGHT | DM_BITSPERPEL;

	mov	DWORD PTR _dm$[ebp+40], 1835008		; 001c0000H

; 229  : 
; 230  :     rval = ChangeDisplaySettings(&dm, 0);

	mov	esi, esp
	push	0
	lea	eax, DWORD PTR _dm$[ebp]
	push	eax
	call	DWORD PTR __imp__ChangeDisplaySettingsA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _rval$[ebp], eax

; 231  :     if (rval != DISP_CHANGE_SUCCESSFUL) return FALSE;

	cmp	DWORD PTR _rval$[ebp], 0
	je	SHORT $LN2@ChangeDisp
	xor	eax, eax
	jmp	SHORT $LN1@ChangeDisp
$LN2@ChangeDisp:

; 232  : 
; 233  : 	return TRUE;

	mov	eax, 1
$LN1@ChangeDisp:

; 234  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@ChangeDisp
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 372				; 00000174H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN6@ChangeDisp:
	DD	1
	DD	$LN5@ChangeDisp
$LN5@ChangeDisp:
	DD	-164					; ffffff5cH
	DD	156					; 0000009cH
	DD	$LN4@ChangeDisp
$LN4@ChangeDisp:
	DB	100					; 00000064H
	DB	109					; 0000006dH
	DB	0
?_ChangeDisplayMode@@YAHKKG@Z ENDP			; _ChangeDisplayMode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ??__EPlayerHP@@YAXXZ
text$di	SEGMENT
??__EPlayerHP@@YAXXZ PROC				; `dynamic initializer for 'PlayerHP'', COMDAT

; 169  : int PlayerHP = PlayerMHP;

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ?PlayerMHP@@3HA		; PlayerMHP
	mov	DWORD PTR ?PlayerHP@@3HA, eax		; PlayerHP
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EPlayerHP@@YAXXZ ENDP				; `dynamic initializer for 'PlayerHP''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ??__EP3HP@@YAXXZ
text$di	SEGMENT
??__EP3HP@@YAXXZ PROC					; `dynamic initializer for 'P3HP'', COMDAT

; 148  : int P3HP = P3MHP;

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ?P3MHP@@3HA		; P3MHP
	mov	DWORD PTR ?P3HP@@3HA, eax		; P3HP
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EP3HP@@YAXXZ ENDP					; `dynamic initializer for 'P3HP''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ??__EP2HP@@YAXXZ
text$di	SEGMENT
??__EP2HP@@YAXXZ PROC					; `dynamic initializer for 'P2HP'', COMDAT

; 146  : int P2HP = P2MHP;

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ?P2MHP@@3HA		; P2MHP
	mov	DWORD PTR ?P2HP@@3HA, eax		; P2HP
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EP2HP@@YAXXZ ENDP					; `dynamic initializer for 'P2HP''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ??__EP1HP@@YAXXZ
text$di	SEGMENT
??__EP1HP@@YAXXZ PROC					; `dynamic initializer for 'P1HP'', COMDAT

; 144  : int P1HP = P1MHP;

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ?P1MHP@@3HA		; P1MHP
	mov	DWORD PTR ?P1HP@@3HA, eax		; P1HP
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??__EP1HP@@YAXXZ ENDP					; `dynamic initializer for 'P1HP''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__Fm_HHSound@@YAXXZ
text$yd	SEGMENT
??__Fm_HHSound@@YAXXZ PROC				; `dynamic atexit destructor for 'm_HHSound'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	??1CHHSound@@QAE@XZ			; CHHSound::~CHHSound
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__Fm_HHSound@@YAXXZ ENDP				; `dynamic atexit destructor for 'm_HHSound''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ??__Em_HHSound@@YAXXZ
text$di	SEGMENT
??__Em_HHSound@@YAXXZ PROC				; `dynamic initializer for 'm_HHSound'', COMDAT

; 83   : CHHSound m_HHSound;

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	??0CHHSound@@QAE@XZ			; CHHSound::CHHSound
	push	OFFSET ??__Fm_HHSound@@YAXXZ		; `dynamic atexit destructor for 'm_HHSound''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__Em_HHSound@@YAXXZ ENDP				; `dynamic initializer for 'm_HHSound''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__FgFpsMng@@YAXXZ
text$yd	SEGMENT
??__FgFpsMng@@YAXXZ PROC				; `dynamic atexit destructor for 'gFpsMng'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET ?gFpsMng@@3VCFpsMng@@A	; gFpsMng
	call	??1CFpsMng@@UAE@XZ			; CFpsMng::~CFpsMng
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__FgFpsMng@@YAXXZ ENDP				; `dynamic atexit destructor for 'gFpsMng''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ??__EgFpsMng@@YAXXZ
text$di	SEGMENT
??__EgFpsMng@@YAXXZ PROC				; `dynamic initializer for 'gFpsMng'', COMDAT

; 47   : CFpsMng		gFpsMng;

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET ?gFpsMng@@3VCFpsMng@@A	; gFpsMng
	call	??0CFpsMng@@QAE@XZ			; CFpsMng::CFpsMng
	push	OFFSET ??__FgFpsMng@@YAXXZ		; `dynamic atexit destructor for 'gFpsMng''
	call	_atexit
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__EgFpsMng@@YAXXZ ENDP				; `dynamic initializer for 'gFpsMng''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__FxColorize@@YAXPAUIDirectDrawSurface7@@0KKK@Z
_TEXT	SEGMENT
_lpDDSDst$ = 8						; size = 4
_lpDDSSrc$ = 12						; size = 4
_R2$ = 16						; size = 4
_G2$ = 20						; size = 4
_B2$ = 24						; size = 4
?__FxColorize@@YAXPAUIDirectDrawSurface7@@0KKK@Z PROC	; __FxColorize, COMDAT

; 6230 : {	

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 6231 : 	/*
; 6232 : 	DWORD R, G, B;
; 6233 : 	DWORD RGB1,RGB2;
; 6234 : 	DWORD RGBRGB;
; 6235 : 	DDSURFACEDESC2 ddsdEffectSrc, ddsdEffectDst;
; 6236 : 	HRESULT ddrval;
; 6237 : 	DWORD  ix, iy;
; 6238 : 	
; 6239 : 	if (g_dwRGBBitCount == 16)
; 6240 : 	{											
; 6241 : 		// R = R * R2 / 32
; 6242 : 		// G = G * G2 / 64
; 6243 : 		// B = B * B2 / 32				
; 6244 : 	}
; 6245 : 	*/
; 6246 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?__FxColorize@@YAXPAUIDirectDrawSurface7@@0KKK@Z ENDP	; __FxColorize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__FxGrayScale@@YAXPAUIDirectDrawSurface7@@0@Z
_TEXT	SEGMENT
_lpDDSDst$ = 8						; size = 4
_lpDDSSrc$ = 12						; size = 4
?__FxGrayScale@@YAXPAUIDirectDrawSurface7@@0@Z PROC	; __FxGrayScale, COMDAT

; 6212 : {	

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 6213 : 	/*
; 6214 : 	DWORD R, G, B;
; 6215 : 	DWORD RGB1,RGB2, Gray;
; 6216 : 	DWORD RGBRGB;
; 6217 : 	DDSURFACEDESC2 ddsdEffectSrc, ddsdEffectDst;
; 6218 : 	HRESULT ddrval;
; 6219 : 	DWORD  ix, iy;
; 6220 : 	
; 6221 : 	if (g_dwRGBBitCount == 16)
; 6222 : 	{
; 6223 : 		// Gray = (R + (G/2) + B) / 3;
; 6224 : 		// RGB1 = GetPixelRGB565(Gray, Gray*2, Gray);
; 6225 : 	}
; 6226 : 	*/
; 6227 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?__FxGrayScale@@YAXPAUIDirectDrawSurface7@@0@Z ENDP	; __FxGrayScale
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__FxFadeTo@@YAXPAUIDirectDrawSurface7@@0KKK@Z
_TEXT	SEGMENT
_lpDDSDst$ = 8						; size = 4
_lpDDSSrc$ = 12						; size = 4
_R2$ = 16						; size = 4
_G2$ = 20						; size = 4
_B2$ = 24						; size = 4
?__FxFadeTo@@YAXPAUIDirectDrawSurface7@@0KKK@Z PROC	; __FxFadeTo, COMDAT

; 6186 : {	

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 6187 : 	/*
; 6188 : 	DWORD R, G, B;
; 6189 : 	DWORD RGB1;
; 6190 : 	DWORD RGB2;	
; 6191 : 	DWORD RGBRGB;
; 6192 : 	DDSURFACEDESC2 ddsdEffectSrc, ddsdEffectDst;
; 6193 : 	HRESULT ddrval;
; 6194 : 	DWORD  ix, iy, i;
; 6195 : 	
; 6196 : 	if (g_dwRGBBitCount == 16)
; 6197 : 	{		
; 6198 : 		RGBRGB = *(lpEffectSrc+ix);
; 6199 : 
; 6200 : 		// ÇÈ¼¿ º¯Çü ( RGB Áõ°¨ )
; 6201 : 
; 6202 : 		RGBRGB = (RGB2 << 16) | RGB1;
; 6203 : 		
; 6204 : 		*(lpEffectSrc+ix) = RGBRGB;
; 6205 : 		*(lpEffectDst+ix) = RGBRGB;		
; 6206 : 	}
; 6207 : 	*/
; 6208 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?__FxFadeTo@@YAXPAUIDirectDrawSurface7@@0KKK@Z ENDP	; __FxFadeTo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__FxFadeInOutEx@@YAXPAUIDirectDrawSurface7@@0K@Z
_TEXT	SEGMENT
_lpDDSDst$ = 8						; size = 4
_lpDDSSrc$ = 12						; size = 4
_dwRate$ = 16						; size = 4
?__FxFadeInOutEx@@YAXPAUIDirectDrawSurface7@@0K@Z PROC	; __FxFadeInOutEx, COMDAT

; 6163 : {	

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 6164 : 	/*
; 6165 : 	DWORD RGB1;
; 6166 : 	DWORD RGB2;
; 6167 : 	DWORD R, G, B;
; 6168 : 	DWORD RGBRGB;
; 6169 : 	DDSURFACEDESC2 ddsdEffectSrc, ddsdEffectDst;
; 6170 : 	HRESULT ddrval;
; 6171 : 	DWORD  ix, iy;
; 6172 : 	
; 6173 : 	if (g_dwRGBBitCount == 16)
; 6174 : 	{
; 6175 : 		//// °í¼ÓÃ³¸®¸¦ À§ÇØ Look Up Table ÂüÁ¶ ( ¹Ì¸® °è»êµÈ °á°ú, DXW_LUTInit() )
; 6176 : 		R = g_dwFADELUT[R][dwRate];
; 6177 : 		G = g_dwFADELUT[G][dwRate];
; 6178 : 		B = g_dwFADELUT[B][dwRate];
; 6179 : 	}
; 6180 : 	*/
; 6181 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?__FxFadeInOutEx@@YAXPAUIDirectDrawSurface7@@0K@Z ENDP	; __FxFadeInOutEx
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__FxFadeOut@@YAXPAUIDirectDrawSurface7@@0K@Z
_TEXT	SEGMENT
_lpDDSDst$ = 8						; size = 4
_lpDDSSrc$ = 12						; size = 4
_dwRateStep$ = 16					; size = 4
?__FxFadeOut@@YAXPAUIDirectDrawSurface7@@0K@Z PROC	; __FxFadeOut, COMDAT

; 6139 : {	

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 6140 : 	/*
; 6141 : 	DWORD RGB1;
; 6142 : 	DWORD RGB2;
; 6143 : 	DWORD R, G, B;
; 6144 : 	DWORD RGBRGB;
; 6145 : 	DDSURFACEDESC2 ddsdEffectSrc, ddsdEffectDst;
; 6146 : 	HRESULT ddrval;
; 6147 : 	DWORD  ix, iy, dwRate;
; 6148 : 	
; 6149 : 	if (g_dwRGBBitCount == 16)
; 6150 : 	{
; 6151 : 										
; 6152 : 		R = R * dwRate/100; 
; 6153 : 		G = G * dwRate/100; 
; 6154 : 		B = B * dwRate/100; 					
; 6155 : 	}
; 6156 : 	*/
; 6157 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?__FxFadeOut@@YAXPAUIDirectDrawSurface7@@0K@Z ENDP	; __FxFadeOut
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__FxFadeIn@@YAXPAUIDirectDrawSurface7@@0K@Z
_TEXT	SEGMENT
_lpDDSDst$ = 8						; size = 4
_lpDDSSrc$ = 12						; size = 4
_dwRateStep$ = 16					; size = 4
?__FxFadeIn@@YAXPAUIDirectDrawSurface7@@0K@Z PROC	; __FxFadeIn, COMDAT

; 6119 : {	

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 6120 : 	/*DWORD RGB1;
; 6121 : 	DWORD RGB2;
; 6122 : 	DWORD R, G, B;
; 6123 : 	DWORD RGBRGB;
; 6124 : 	DDSURFACEDESC2 ddsdEffectSrc, ddsdEffectDst;
; 6125 : 	HRESULT ddrval;
; 6126 : 	DWORD  ix, iy, dwRate;
; 6127 : 	
; 6128 : 	if (g_dwRGBBitCount == 16)
; 6129 : 	{										
; 6130 : 		R = R * dwRate/100; 
; 6131 : 		G = G * dwRate/100; 
; 6132 : 		B = B * dwRate/100;
; 6133 : 	}*/
; 6134 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?__FxFadeIn@@YAXPAUIDirectDrawSurface7@@0K@Z ENDP	; __FxFadeIn
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?DXW_LUTInit@@YAXXZ
_TEXT	SEGMENT
_dwRate$1 = -20						; size = 4
_dwDepth$2 = -8						; size = 4
?DXW_LUTInit@@YAXXZ PROC				; DXW_LUTInit, COMDAT

; 486  : {	

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 487  : 	//// Fade Look Up Table »ý¼º
; 488  : 	for (DWORD dwDepth=0; dwDepth < 64; dwDepth++)

	mov	DWORD PTR _dwDepth$2[ebp], 0
	jmp	SHORT $LN4@DXW_LUTIni
$LN2@DXW_LUTIni:
	mov	eax, DWORD PTR _dwDepth$2[ebp]
	add	eax, 1
	mov	DWORD PTR _dwDepth$2[ebp], eax
$LN4@DXW_LUTIni:
	cmp	DWORD PTR _dwDepth$2[ebp], 64		; 00000040H
	jae	SHORT $LN1@DXW_LUTIni

; 489  : 	{
; 490  : 		for (DWORD dwRate=0; dwRate <= 100; dwRate++)

	mov	DWORD PTR _dwRate$1[ebp], 0
	jmp	SHORT $LN7@DXW_LUTIni
$LN5@DXW_LUTIni:
	mov	eax, DWORD PTR _dwRate$1[ebp]
	add	eax, 1
	mov	DWORD PTR _dwRate$1[ebp], eax
$LN7@DXW_LUTIni:
	cmp	DWORD PTR _dwRate$1[ebp], 100		; 00000064H
	ja	SHORT $LN6@DXW_LUTIni

; 491  : 		{
; 492  : 			g_dwFADELUT[dwDepth][dwRate] = dwDepth * dwRate/100;

	mov	eax, DWORD PTR _dwDepth$2[ebp]
	imul	eax, DWORD PTR _dwRate$1[ebp]
	xor	edx, edx
	mov	ecx, 100				; 00000064H
	div	ecx
	imul	edx, DWORD PTR _dwDepth$2[ebp], 404
	mov	ecx, DWORD PTR _dwRate$1[ebp]
	mov	DWORD PTR ?g_dwFADELUT@@3PAY0GF@KA[edx+ecx*4], eax

; 493  : 		}

	jmp	SHORT $LN5@DXW_LUTIni
$LN6@DXW_LUTIni:

; 494  : 	}	

	jmp	SHORT $LN2@DXW_LUTIni
$LN1@DXW_LUTIni:

; 495  : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?DXW_LUTInit@@YAXXZ ENDP				; DXW_LUTInit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__PutSpriteLockFastCkEx16@@YAXPAUIDirectDrawSurface7@@HHK@Z
_TEXT	SEGMENT
tv193 = -1076						; size = 4
_dwColorSpaceLowValueMixed2$1 = -684			; size = 4
_dwColorSpaceLowValueMixed$2 = -672			; size = 4
_bIsRemain$ = -660					; size = 4
_dwHeight$ = -648					; size = 4
_dwWidth$ = -636					; size = 4
_dwWidthSrc$ = -624					; size = 4
_dwDstPitch$ = -612					; size = 4
_dwSrcPitch$ = -600					; size = 4
_dwColorSpaceLowValue$ = -588				; size = 4
_lpDDSDstTemp$ = -576					; size = 4
_lpDDSDst$ = -564					; size = 4
_lpDDSSrc$ = -552					; size = 4
_ddrval$ = -540						; size = 4
_ddsdDst$ = -528					; size = 124
_ddsdSrc$ = -396					; size = 124
_iy$ = -264						; size = 4
_ix$ = -252						; size = 4
_sRGB2$ = -240						; size = 4
_sRGB1$ = -228						; size = 4
_RGBRGB$ = -216						; size = 4
_nOverSize$3 = -204					; size = 4
_nOverSize$4 = -192					; size = 4
_rcSrc$ = -180						; size = 16
_rcDst$ = -156						; size = 16
_ddsd$ = -132						; size = 124
__$ArrayPad$ = -4					; size = 4
_lpDDS$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_dwColorKey2$ = 20					; size = 4
?__PutSpriteLockFastCkEx16@@YAXPAUIDirectDrawSurface7@@HHK@Z PROC ; __PutSpriteLockFastCkEx16, COMDAT

; 5216 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 1076				; 00000434H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1076]
	mov	ecx, 269				; 0000010dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 5217 : 	//// Å¬¸³ÇÎ ¿µ¿ª±¸ÇÏ±â
; 5218 : 	//// Ç¥¸éÀÇ Á¤º¸ ¾ò±â
; 5219 : 	DDSURFACEDESC2 ddsd;
; 5220 :     ddsd.dwSize = sizeof(ddsd);

	mov	DWORD PTR _ddsd$[ebp], 124		; 0000007cH

; 5221 :     //ddsd.dwFlags = DDSD_HEIGHT | DDSD_WIDTH;
; 5222 : 	lpDDS->GetSurfaceDesc(&ddsd);

	mov	esi, esp
	lea	eax, DWORD PTR _ddsd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpDDS$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _lpDDS$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+88]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 5223 : 
; 5224 : 	//// ½ºÅ©¸°ÁÂÇ¥ÀÇ RECT¸¦ ±¸ÇÑ´Ù
; 5225 : 	RECT rcDst = { x, y, x+ddsd.dwWidth, y+ddsd.dwHeight };

	mov	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR _rcDst$[ebp], eax
	mov	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _rcDst$[ebp+4], eax
	mov	eax, DWORD PTR _x$[ebp]
	add	eax, DWORD PTR _ddsd$[ebp+12]
	mov	DWORD PTR _rcDst$[ebp+8], eax
	mov	eax, DWORD PTR _y$[ebp]
	add	eax, DWORD PTR _ddsd$[ebp+8]
	mov	DWORD PTR _rcDst$[ebp+12], eax

; 5226 : 	RECT rcSrc = { 0, 0, ddsd.dwWidth, ddsd.dwHeight };

	mov	DWORD PTR _rcSrc$[ebp], 0
	mov	DWORD PTR _rcSrc$[ebp+4], 0
	mov	eax, DWORD PTR _ddsd$[ebp+12]
	mov	DWORD PTR _rcSrc$[ebp+8], eax
	mov	eax, DWORD PTR _ddsd$[ebp+8]
	mov	DWORD PTR _rcSrc$[ebp+12], eax

; 5227 : 
; 5228 : 	//// ½ºÅ©¸° ¹ÛÀ¸·Î ³ª°¡¸é Ãâ·ÂÇÏÁö ¾Ê´Â´Ù
; 5229 : 	if (x >= HRES || y >= VRES) return;

	cmp	DWORD PTR _x$[ebp], 1024		; 00000400H
	jge	SHORT $LN11@PutSpriteL
	cmp	DWORD PTR _y$[ebp], 768			; 00000300H
	jl	SHORT $LN10@PutSpriteL
$LN11@PutSpriteL:
	jmp	$LN1@PutSpriteL
$LN10@PutSpriteL:

; 5230 : 	if (rcDst.right <= 0 || rcDst.bottom <= 0) return;

	cmp	DWORD PTR _rcDst$[ebp+8], 0
	jle	SHORT $LN13@PutSpriteL
	cmp	DWORD PTR _rcDst$[ebp+12], 0
	jg	SHORT $LN12@PutSpriteL
$LN13@PutSpriteL:
	jmp	$LN1@PutSpriteL
$LN12@PutSpriteL:

; 5231 : 	
; 5232 : 	//// ½ºÇÁ¶óÀÌÆ®°¡ ½ºÅ©¸° ¹ÛÀ¸·Î ³ª°£ ¸¸Å­ Ãâ·ÂÇÏÁö ¾Ê´Â´Ù
; 5233 : 	//// ¿ÀÇÁ ½ºÅ©¸°ÀÇ »ç°¢¿µ¿ªÀ» °¨¼Ò ½ÃÄÑ Å¬¸®ÇÎÀ» ±¸ÇöÇÑ´Ù	
; 5234 : 
; 5235 : 	//// ¼öÆò º¸Á¤
; 5236 : 	if (x < 0)

	cmp	DWORD PTR _x$[ebp], 0
	jge	SHORT $LN14@PutSpriteL

; 5237 : 	{
; 5238 : 		// ÁÂº¯À» ÁÙÀÎ´Ù. rcSrc.left += ³Ñ¾î°£ Å©±â, abs(x)
; 5239 : 		rcSrc.left -= x;

	mov	eax, DWORD PTR _rcSrc$[ebp]
	sub	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR _rcSrc$[ebp], eax

; 5240 : 		rcDst.left=x=0;		

	mov	DWORD PTR _x$[ebp], 0
	mov	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR _rcDst$[ebp], eax
	jmp	SHORT $LN15@PutSpriteL
$LN14@PutSpriteL:

; 5241 : 	}
; 5242 : 	else if (rcDst.right >= HRES)

	cmp	DWORD PTR _rcDst$[ebp+8], 1024		; 00000400H
	jl	SHORT $LN15@PutSpriteL

; 5243 : 	{
; 5244 : 		// ¿ìº¯À» ÁÙÀÎ´Ù. rcSrc.right -= ³Ñ¾î°£ Å©±â
; 5245 : 		int nOverSize = (rcDst.right - HRES);		

	mov	eax, DWORD PTR _rcDst$[ebp+8]
	sub	eax, 1024				; 00000400H
	mov	DWORD PTR _nOverSize$4[ebp], eax

; 5246 : 		rcSrc.right -= nOverSize;

	mov	eax, DWORD PTR _rcSrc$[ebp+8]
	sub	eax, DWORD PTR _nOverSize$4[ebp]
	mov	DWORD PTR _rcSrc$[ebp+8], eax

; 5247 : 		rcDst.right -= nOverSize;

	mov	eax, DWORD PTR _rcDst$[ebp+8]
	sub	eax, DWORD PTR _nOverSize$4[ebp]
	mov	DWORD PTR _rcDst$[ebp+8], eax
$LN15@PutSpriteL:

; 5248 : 	}
; 5249 : 	//// ¼öÁ÷ º¸Á¤
; 5250 : 	if (y < 0)

	cmp	DWORD PTR _y$[ebp], 0
	jge	SHORT $LN17@PutSpriteL

; 5251 : 	{
; 5252 : 		// »óº¯À» ÁÙÀÎ´Ù. rcSrc.top += ³Ñ¾î°£ Å©±â, abs(y)
; 5253 : 		rcSrc.top -= y;

	mov	eax, DWORD PTR _rcSrc$[ebp+4]
	sub	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _rcSrc$[ebp+4], eax

; 5254 : 		rcDst.top=y=0;

	mov	DWORD PTR _y$[ebp], 0
	mov	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _rcDst$[ebp+4], eax
	jmp	SHORT $LN18@PutSpriteL
$LN17@PutSpriteL:

; 5255 : 	}
; 5256 : 	else if (rcDst.bottom >= VRES )

	cmp	DWORD PTR _rcDst$[ebp+12], 768		; 00000300H
	jl	SHORT $LN18@PutSpriteL

; 5257 : 	{
; 5258 : 		// ÇÏº¯À» ÁÙÀÎ´Ù. rcSrc.bottom -= ³Ñ¾î°£ Å©±â 
; 5259 : 		int nOverSize = (rcDst.bottom - VRES);

	mov	eax, DWORD PTR _rcDst$[ebp+12]
	sub	eax, 768				; 00000300H
	mov	DWORD PTR _nOverSize$3[ebp], eax

; 5260 : 		rcSrc.bottom -= nOverSize;

	mov	eax, DWORD PTR _rcSrc$[ebp+12]
	sub	eax, DWORD PTR _nOverSize$3[ebp]
	mov	DWORD PTR _rcSrc$[ebp+12], eax

; 5261 : 		rcDst.bottom -= nOverSize;

	mov	eax, DWORD PTR _rcDst$[ebp+12]
	sub	eax, DWORD PTR _nOverSize$3[ebp]
	mov	DWORD PTR _rcDst$[ebp+12], eax
$LN18@PutSpriteL:

; 5262 : 	}
; 5263 : 
; 5264 : 	////////////////////// 
; 5265 : 	DWORD RGBRGB;
; 5266 : 	DWORD sRGB1, sRGB2;
; 5267 : 
; 5268 : 	DWORD ix, iy;
; 5269 :     DDSURFACEDESC2 ddsdSrc, ddsdDst;
; 5270 : 
; 5271 : 	//// ¼Ò½ºÇ¥¸é Lock
; 5272 : 	ZeroMemory(&ddsdSrc, sizeof(ddsdSrc));	

	push	124					; 0000007cH
	push	0
	lea	eax, DWORD PTR _ddsdSrc$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 5273 : 	ddsdSrc.dwSize = sizeof(ddsdSrc);

	mov	DWORD PTR _ddsdSrc$[ebp], 124		; 0000007cH

; 5274 : 	HRESULT ddrval = lpDDS->Lock(&rcSrc, &ddsdSrc, DDLOCK_READONLY|DDLOCK_WAIT, NULL);

	mov	esi, esp
	push	0
	push	17					; 00000011H
	lea	eax, DWORD PTR _ddsdSrc$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rcSrc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpDDS$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _lpDDS$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+100]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ddrval$[ebp], eax

; 5275 :     if (ddrval != DD_OK) { DDERRCHK(ddrval); return; }

	cmp	DWORD PTR _ddrval$[ebp], 0
	je	SHORT $LN20@PutSpriteL
	mov	eax, DWORD PTR ?__LINE__Var@?0??__PutSpriteLockFastCkEx16@@YAXPAUIDirectDrawSurface7@@HHK@Z@4JA
	add	eax, 59					; 0000003bH
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _ddrval$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
	jmp	$LN1@PutSpriteL
$LN20@PutSpriteL:

; 5276 :     
; 5277 :     //// ¸ñÀûÇ¥¸éÀÇ RECT
; 5278 :     //RECT rcDest = { x, y, x+ddsdSrc.dwWidth, y+ddsdSrc.dwHeight };
; 5279 : 
; 5280 : 	//// ¸ñÀûÇ¥¸é Lock
; 5281 : 	ZeroMemory(&ddsdDst, sizeof(ddsdDst));	

	push	124					; 0000007cH
	push	0
	lea	eax, DWORD PTR _ddsdDst$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 5282 : 	ddsdDst.dwSize = sizeof(ddsdDst);

	mov	DWORD PTR _ddsdDst$[ebp], 124		; 0000007cH

; 5283 : 	ddrval = g_pDDSBack->Lock(&rcDst, &ddsdDst, DDLOCK_WRITEONLY|DDLOCK_WAIT, NULL);

	mov	esi, esp
	push	0
	push	33					; 00000021H
	lea	eax, DWORD PTR _ddsdDst$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rcDst$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	push	ecx
	mov	edx, DWORD PTR [eax+100]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ddrval$[ebp], eax

; 5284 :     if (ddrval != DD_OK)

	cmp	DWORD PTR _ddrval$[ebp], 0
	je	SHORT $LN21@PutSpriteL

; 5285 :     {
; 5286 :     	//// ¼Ò½ºÇ¥¸éÀº Lock »óÅÂÀÌ¹Ç·Î Unlock
; 5287 :         lpDDS->Unlock(&rcSrc);

	mov	esi, esp
	lea	eax, DWORD PTR _rcSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpDDS$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _lpDDS$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+128]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 5288 :         DDERRCHK(ddrval);

	mov	eax, DWORD PTR ?__LINE__Var@?0??__PutSpriteLockFastCkEx16@@YAXPAUIDirectDrawSurface7@@HHK@Z@4JA
	add	eax, 72					; 00000048H
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _ddrval$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH

; 5289 :         return;

	jmp	$LN1@PutSpriteL
$LN21@PutSpriteL:

; 5290 :     }
; 5291 : 
; 5292 : 	//// Ç¥¸éÀÇ ÁÖ¼Ò
; 5293 : 	DWORD* lpDDSSrc = (DWORD*) ddsdSrc.lpSurface;

	mov	eax, DWORD PTR _ddsdSrc$[ebp+36]
	mov	DWORD PTR _lpDDSSrc$[ebp], eax

; 5294 : 	DWORD* lpDDSDst = (DWORD*) ddsdDst.lpSurface;

	mov	eax, DWORD PTR _ddsdDst$[ebp+36]
	mov	DWORD PTR _lpDDSDst$[ebp], eax

; 5295 : 	WORD*  lpDDSDstTemp;
; 5296 : 
; 5297 : 	//TRACE1("%x\n", lpDDSSrc);
; 5298 : 
; 5299 : 	//// ¼Ò½ºÇ¥¸éÀÇ ÄÃ·¯Å° ÂüÁ¶
; 5300 : 	DWORD dwColorSpaceLowValue = ddsdSrc.ddckCKSrcBlt.dwColorSpaceLowValue;

	mov	eax, DWORD PTR _ddsdSrc$[ebp+64]
	mov	DWORD PTR _dwColorSpaceLowValue$[ebp], eax

; 5301 : 	
; 5302 : 	////
; 5303 : 	DWORD dwSrcPitch = ddsdSrc.lPitch >> 2; // 4¹ÙÀÌÆ® Á¤·Ä, /4

	mov	eax, DWORD PTR _ddsdSrc$[ebp+16]
	sar	eax, 2
	mov	DWORD PTR _dwSrcPitch$[ebp], eax

; 5304 : 	DWORD dwDstPitch = ddsdDst.lPitch >> 2;

	mov	eax, DWORD PTR _ddsdDst$[ebp+16]
	sar	eax, 2
	mov	DWORD PTR _dwDstPitch$[ebp], eax

; 5305 : 
; 5306 : 	DWORD dwWidthSrc = rcSrc.right-rcSrc.left;

	mov	eax, DWORD PTR _rcSrc$[ebp+8]
	sub	eax, DWORD PTR _rcSrc$[ebp]
	mov	DWORD PTR _dwWidthSrc$[ebp], eax

; 5307 : 	DWORD dwWidth  = dwWidthSrc >> 1;       // 2°³ÀÇ ÇÈ¼¿À» ÀÐÀ¸¹Ç·Î /2

	mov	eax, DWORD PTR _dwWidthSrc$[ebp]
	shr	eax, 1
	mov	DWORD PTR _dwWidth$[ebp], eax

; 5308 : 	DWORD dwHeight = rcSrc.bottom-rcSrc.top;

	mov	eax, DWORD PTR _rcSrc$[ebp+12]
	sub	eax, DWORD PTR _rcSrc$[ebp+4]
	mov	DWORD PTR _dwHeight$[ebp], eax

; 5309 : 	//// È¦¼öÆøÀÎ °æ¿ì ³ª¸ÓÁö ÇÃ·¡±× ( 1 ÇÈ¼¿ )
; 5310 : 	BOOL bIsRemain = FALSE;

	mov	DWORD PTR _bIsRemain$[ebp], 0

; 5311 : 	if (dwWidthSrc % 2) bIsRemain = TRUE;

	mov	eax, DWORD PTR _dwWidthSrc$[ebp]
	xor	edx, edx
	mov	ecx, 2
	div	ecx
	test	edx, edx
	je	SHORT $LN22@PutSpriteL
	mov	DWORD PTR _bIsRemain$[ebp], 1
$LN22@PutSpriteL:

; 5312 : 
; 5313 : 	//// BPP
; 5314 : 	switch(g_dwRGBBitCount)

	mov	eax, DWORD PTR ?g_dwRGBBitCount@@3KA	; g_dwRGBBitCount
	mov	DWORD PTR tv193[ebp], eax
	cmp	DWORD PTR tv193[ebp], 16		; 00000010H
	je	SHORT $LN23@PutSpriteL
	jmp	$LN2@PutSpriteL
$LN23@PutSpriteL:

; 5315 : 	{
; 5316 : 	case 16 :
; 5317 : 		{
; 5318 : 			//// µÎ°³ÀÇ ÇÈ¼¿¿¡ ´ëÇÑ ÄÃ·¯Å° °ªÀ» ±¸ÇÑ´Ù. °í¼Ó ÆÇÁ¤À» À§ÇÑ OR ¿¬»ê
; 5319 : 			DWORD dwColorSpaceLowValueMixed = dwColorSpaceLowValue << 16 | dwColorSpaceLowValue;

	mov	eax, DWORD PTR _dwColorSpaceLowValue$[ebp]
	shl	eax, 16					; 00000010H
	or	eax, DWORD PTR _dwColorSpaceLowValue$[ebp]
	mov	DWORD PTR _dwColorSpaceLowValueMixed$2[ebp], eax

; 5320 : 			DWORD dwColorSpaceLowValueMixed2 = dwColorKey2 << 16 | dwColorKey2;

	mov	eax, DWORD PTR _dwColorKey2$[ebp]
	shl	eax, 16					; 00000010H
	or	eax, DWORD PTR _dwColorKey2$[ebp]
	mov	DWORD PTR _dwColorSpaceLowValueMixed2$1[ebp], eax

; 5321 : 
; 5322 : 			if (g_dwPixelFormat == RGB565)

	cmp	DWORD PTR ?g_dwPixelFormat@@3KA, 565	; g_dwPixelFormat, 00000235H
	jne	$LN2@PutSpriteL

; 5323 : 			{
; 5324 : 				for (iy=0; iy < dwHeight; iy++)

	mov	DWORD PTR _iy$[ebp], 0
	jmp	SHORT $LN6@PutSpriteL
$LN4@PutSpriteL:
	mov	eax, DWORD PTR _iy$[ebp]
	add	eax, 1
	mov	DWORD PTR _iy$[ebp], eax
$LN6@PutSpriteL:
	mov	eax, DWORD PTR _iy$[ebp]
	cmp	eax, DWORD PTR _dwHeight$[ebp]
	jae	$LN2@PutSpriteL

; 5325 : 				{
; 5326 : 					for (ix=0; ix < dwWidth; ix++)

	mov	DWORD PTR _ix$[ebp], 0
	jmp	SHORT $LN9@PutSpriteL
$LN7@PutSpriteL:
	mov	eax, DWORD PTR _ix$[ebp]
	add	eax, 1
	mov	DWORD PTR _ix$[ebp], eax
$LN9@PutSpriteL:
	mov	eax, DWORD PTR _ix$[ebp]
	cmp	eax, DWORD PTR _dwWidth$[ebp]
	jae	$LN8@PutSpriteL

; 5327 : 					{
; 5328 : 						//// µÎ°³ÀÇ ÇÈ¼¿À» ¾ò¾î¿Â´Ù
; 5329 : 						//memcpy(&RGBRGB, lpDDSSrc+ix, 4);
; 5330 : 						RGBRGB = *(lpDDSSrc+ix);

	mov	eax, DWORD PTR _ix$[ebp]
	mov	ecx, DWORD PTR _lpDDSSrc$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _RGBRGB$[ebp], edx

; 5331 : 						
; 5332 : 						//// µÎ°³ÀÇ ÇÈ¼¿ÀÌ ÄÃ·¯Å°ÀÌ¸é ·çÇÁ¹Ýº¹ ( ´ÙÀ½ ÇÈ¼¿ ±×·ìÀ» ¾ò´Â´Ù )
; 5333 : 						if (RGBRGB == dwColorSpaceLowValueMixed) continue;

	mov	eax, DWORD PTR _RGBRGB$[ebp]
	cmp	eax, DWORD PTR _dwColorSpaceLowValueMixed$2[ebp]
	jne	SHORT $LN26@PutSpriteL
	jmp	SHORT $LN7@PutSpriteL
$LN26@PutSpriteL:

; 5334 : 						if (RGBRGB == dwColorSpaceLowValueMixed2) continue;

	mov	eax, DWORD PTR _RGBRGB$[ebp]
	cmp	eax, DWORD PTR _dwColorSpaceLowValueMixed2$1[ebp]
	jne	SHORT $LN27@PutSpriteL
	jmp	SHORT $LN7@PutSpriteL
$LN27@PutSpriteL:

; 5335 : 						
; 5336 : 						//// ÇÈ¼¿À» ºÐ¸®ÇÑ´Ù
; 5337 : 						sRGB1 = RGBRGB & 0x0000FFFF;

	mov	eax, DWORD PTR _RGBRGB$[ebp]
	and	eax, 65535				; 0000ffffH
	mov	DWORD PTR _sRGB1$[ebp], eax

; 5338 : 						sRGB2 = RGBRGB >> 16;

	mov	eax, DWORD PTR _RGBRGB$[ebp]
	shr	eax, 16					; 00000010H
	mov	DWORD PTR _sRGB2$[ebp], eax

; 5339 : 						
; 5340 : 						//// ¼Ò½ºÇ¥¸éÀÇ ÇÈ¼¿ sRGB1,2°¡ ÀÌ¹ÌÁöÀÎ °æ¿ì
; 5341 : 						if ((sRGB1 != dwColorSpaceLowValue && sRGB2 != dwColorSpaceLowValue) &&

	mov	eax, DWORD PTR _sRGB1$[ebp]
	cmp	eax, DWORD PTR _dwColorSpaceLowValue$[ebp]
	je	SHORT $LN28@PutSpriteL
	mov	eax, DWORD PTR _sRGB2$[ebp]
	cmp	eax, DWORD PTR _dwColorSpaceLowValue$[ebp]
	je	SHORT $LN28@PutSpriteL
	mov	eax, DWORD PTR _sRGB1$[ebp]
	cmp	eax, DWORD PTR _dwColorKey2$[ebp]
	je	SHORT $LN28@PutSpriteL
	mov	eax, DWORD PTR _sRGB2$[ebp]
	cmp	eax, DWORD PTR _dwColorKey2$[ebp]
	je	SHORT $LN28@PutSpriteL

; 5342 : 							(sRGB1 != dwColorKey2          && sRGB2 != dwColorKey2))
; 5343 : 						{
; 5344 : 							//memcpy(lpDDSDst+ix, &RGBRGB, 4);
; 5345 : 							*(lpDDSDst+ix) = RGBRGB;							

	mov	eax, DWORD PTR _ix$[ebp]
	mov	ecx, DWORD PTR _lpDDSDst$[ebp]
	mov	edx, DWORD PTR _RGBRGB$[ebp]
	mov	DWORD PTR [ecx+eax*4], edx
	jmp	SHORT $LN29@PutSpriteL
$LN28@PutSpriteL:

; 5346 : 						}
; 5347 : 						//// ¼Ò½ºÇ¥¸éÀÇ ÇÈ¼¿ sRGB1ÀÌ ÀÌ¹ÌÁö ÇÈ¼¿ÀÎ °æ¿ì
; 5348 : 						// else if (sRGB1 != dwColorSpaceLowValue && sRGB2 == dwColorSpaceLowValue )
; 5349 : 						else if (sRGB1 != dwColorSpaceLowValue && sRGB1 != dwColorKey2)

	mov	eax, DWORD PTR _sRGB1$[ebp]
	cmp	eax, DWORD PTR _dwColorSpaceLowValue$[ebp]
	je	SHORT $LN30@PutSpriteL
	mov	eax, DWORD PTR _sRGB1$[ebp]
	cmp	eax, DWORD PTR _dwColorKey2$[ebp]
	je	SHORT $LN30@PutSpriteL

; 5350 : 						{							
; 5351 : 							lpDDSDstTemp = (WORD*)(lpDDSDst+ix);

	mov	eax, DWORD PTR _ix$[ebp]
	mov	ecx, DWORD PTR _lpDDSDst$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _lpDDSDstTemp$[ebp], edx

; 5352 : 							*lpDDSDstTemp = (WORD)sRGB1;							

	mov	eax, DWORD PTR _lpDDSDstTemp$[ebp]
	mov	cx, WORD PTR _sRGB1$[ebp]
	mov	WORD PTR [eax], cx
	jmp	SHORT $LN29@PutSpriteL
$LN30@PutSpriteL:

; 5353 : 						}
; 5354 : 						//// ¼Ò½ºÇ¥¸éÀÇ ÇÈ¼¿ sRGB1ÀÌ ÀÌ¹ÌÁö ÇÈ¼¿ÀÎ °æ¿ì
; 5355 : 						// else if (sRGB1 == dwColorSpaceLowValue && sRGB2 != dwColorSpaceLowValue )
; 5356 : 						else if (sRGB2 != dwColorSpaceLowValue && sRGB2 != dwColorKey2)

	mov	eax, DWORD PTR _sRGB2$[ebp]
	cmp	eax, DWORD PTR _dwColorSpaceLowValue$[ebp]
	je	SHORT $LN29@PutSpriteL
	mov	eax, DWORD PTR _sRGB2$[ebp]
	cmp	eax, DWORD PTR _dwColorKey2$[ebp]
	je	SHORT $LN29@PutSpriteL

; 5357 : 						//else 
; 5358 : 						{
; 5359 : 							lpDDSDstTemp = (WORD*)(lpDDSDst+ix);

	mov	eax, DWORD PTR _ix$[ebp]
	mov	ecx, DWORD PTR _lpDDSDst$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _lpDDSDstTemp$[ebp], edx

; 5360 : 							*(lpDDSDstTemp+1) = (WORD)sRGB2;

	mov	eax, DWORD PTR _lpDDSDstTemp$[ebp]
	mov	cx, WORD PTR _sRGB2$[ebp]
	mov	WORD PTR [eax+2], cx
$LN29@PutSpriteL:

; 5361 : 						}
; 5362 : 
; 5363 : 
; 5364 : 						//// È¦¼öÆø, 1 ÇÈ¼¿
; 5365 : 						// if (bIsRemain && ix == dwWidth-1)						
; 5366 : 						if (ix == dwWidth-1)

	mov	eax, DWORD PTR _dwWidth$[ebp]
	sub	eax, 1
	cmp	DWORD PTR _ix$[ebp], eax
	jne	SHORT $LN33@PutSpriteL

; 5367 : 						{
; 5368 : 							if (bIsRemain)

	cmp	DWORD PTR _bIsRemain$[ebp], 0
	je	SHORT $LN33@PutSpriteL

; 5369 : 							{								
; 5370 : 								sRGB1 = *(lpDDSSrc+ix+1) & 0x0000FFFF;

	mov	eax, DWORD PTR _ix$[ebp]
	mov	ecx, DWORD PTR _lpDDSSrc$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+4]
	and	edx, 65535				; 0000ffffH
	mov	DWORD PTR _sRGB1$[ebp], edx

; 5371 : 								if (sRGB1 != dwColorSpaceLowValue && sRGB1 != dwColorKey2)

	mov	eax, DWORD PTR _sRGB1$[ebp]
	cmp	eax, DWORD PTR _dwColorSpaceLowValue$[ebp]
	je	SHORT $LN33@PutSpriteL
	mov	eax, DWORD PTR _sRGB1$[ebp]
	cmp	eax, DWORD PTR _dwColorKey2$[ebp]
	je	SHORT $LN33@PutSpriteL

; 5372 : 								{
; 5373 : 									lpDDSDstTemp = (WORD*)(lpDDSDst+ix+1);

	mov	eax, DWORD PTR _ix$[ebp]
	mov	ecx, DWORD PTR _lpDDSDst$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4+4]
	mov	DWORD PTR _lpDDSDstTemp$[ebp], edx

; 5374 : 									*lpDDSDstTemp = (WORD)sRGB1;

	mov	eax, DWORD PTR _lpDDSDstTemp$[ebp]
	mov	cx, WORD PTR _sRGB1$[ebp]
	mov	WORD PTR [eax], cx
$LN33@PutSpriteL:

; 5375 : 								}
; 5376 : 							}
; 5377 : 						}
; 5378 : 					}

	jmp	$LN7@PutSpriteL
$LN8@PutSpriteL:

; 5379 : 					lpDDSSrc += dwSrcPitch;

	mov	eax, DWORD PTR _dwSrcPitch$[ebp]
	mov	ecx, DWORD PTR _lpDDSSrc$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _lpDDSSrc$[ebp], edx

; 5380 : 					lpDDSDst += dwDstPitch;

	mov	eax, DWORD PTR _dwDstPitch$[ebp]
	mov	ecx, DWORD PTR _lpDDSDst$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _lpDDSDst$[ebp], edx

; 5381 : 				}

	jmp	$LN4@PutSpriteL
$LN2@PutSpriteL:

; 5382 : 			}	
; 5383 : 			else if (g_dwPixelFormat == BGR565)
; 5384 : 			{
; 5385 : 			}
; 5386 : 			else if (g_dwPixelFormat == RGB555)
; 5387 : 			{
; 5388 : 			}
; 5389 : 			break;
; 5390 : 		}
; 5391 : 	case 24 :
; 5392 : 	case 32 : break;
; 5393 : 	}
; 5394 : 	
; 5395 : 	//// Ç¥¸é Unlock
; 5396 :     g_pDDSBack->Unlock(&rcDst);

	mov	esi, esp
	lea	eax, DWORD PTR _rcDst$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	push	eax
	mov	ecx, DWORD PTR [edx+128]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 5397 :     lpDDS->Unlock(&rcSrc);	

	mov	esi, esp
	lea	eax, DWORD PTR _rcSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpDDS$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _lpDDS$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+128]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@PutSpriteL:

; 5398 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN47@PutSpriteL
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1076				; 00000434H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN47@PutSpriteL:
	DD	5
	DD	$LN46@PutSpriteL
$LN46@PutSpriteL:
	DD	-132					; ffffff7cH
	DD	124					; 0000007cH
	DD	$LN41@PutSpriteL
	DD	-156					; ffffff64H
	DD	16					; 00000010H
	DD	$LN42@PutSpriteL
	DD	-180					; ffffff4cH
	DD	16					; 00000010H
	DD	$LN43@PutSpriteL
	DD	-396					; fffffe74H
	DD	124					; 0000007cH
	DD	$LN44@PutSpriteL
	DD	-528					; fffffdf0H
	DD	124					; 0000007cH
	DD	$LN45@PutSpriteL
$LN45@PutSpriteL:
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	100					; 00000064H
	DB	68					; 00000044H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN44@PutSpriteL:
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	100					; 00000064H
	DB	83					; 00000053H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
$LN43@PutSpriteL:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	83					; 00000053H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
$LN42@PutSpriteL:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	68					; 00000044H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN41@PutSpriteL:
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	100					; 00000064H
	DB	0
?__PutSpriteLockFastCkEx16@@YAXPAUIDirectDrawSurface7@@HHK@Z ENDP ; __PutSpriteLockFastCkEx16
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__PutSpriteCk@@YAXPAUIDirectDrawSurface7@@HH@Z
_TEXT	SEGMENT
_ddrval$1 = -324					; size = 4
_rcDst$ = -312						; size = 16
_rSrc$ = -288						; size = 16
_ddsdVBF$ = -264					; size = 124
_ddsdSrc$ = -132					; size = 124
__$ArrayPad$ = -4					; size = 4
_lpDDS$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
?__PutSpriteCk@@YAXPAUIDirectDrawSurface7@@HH@Z PROC	; __PutSpriteCk, COMDAT

; 6065 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 520				; 00000208H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-520]
	mov	ecx, 130				; 00000082H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 6066 : 	ASSERT(lpDDS != NULL);

	cmp	DWORD PTR _lpDDS$[ebp], 0
	jne	SHORT $LN8@PutSpriteC
	mov	eax, DWORD PTR ?__LINE__Var@?0??__PutSpriteCk@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA
	add	eax, 1
	push	eax
	push	OFFSET ??_C@_1HK@NIMBEDFO@?$AAc?$AA?3?$AA?2?$AAu?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAa?$AAd?$AAm?$AAi?$AAn?$AAi@
	push	OFFSET ??_C@_1BG@HOMGOKFD@?$AAl?$AAp?$AAD?$AAD?$AAS?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
	call	__wassert
	add	esp, 12					; 0000000cH
$LN8@PutSpriteC:

; 6067 : 
; 6068 : 	//// Ç¥¸éÀÇ Å©±â Á¤º¸¸¦ ¾ò´Â´Ù ( ÀÓ½ÃÄÚµå )
; 6069 : 	DDSURFACEDESC2 ddsdSrc, ddsdVBF;
; 6070 :     ddsdSrc.dwSize = sizeof(ddsdSrc);

	mov	DWORD PTR _ddsdSrc$[ebp], 124		; 0000007cH

; 6071 : 	ddsdVBF.dwSize = sizeof(ddsdVBF);

	mov	DWORD PTR _ddsdVBF$[ebp], 124		; 0000007cH

; 6072 : 	lpDDS->GetSurfaceDesc(&ddsdSrc);

	mov	esi, esp
	lea	eax, DWORD PTR _ddsdSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpDDS$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _lpDDS$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+88]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 6073 : 	g_pDDSVBuffer->GetSurfaceDesc(&ddsdVBF);

	mov	esi, esp
	lea	eax, DWORD PTR _ddsdVBF$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?g_pDDSVBuffer@@3PAUIDirectDrawSurface7@@A ; g_pDDSVBuffer
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?g_pDDSVBuffer@@3PAUIDirectDrawSurface7@@A ; g_pDDSVBuffer
	push	eax
	mov	ecx, DWORD PTR [edx+88]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 6074 : 
; 6075 : 	//// Å¬¸³ÇÎ ¿µ¿ªÀ» ±¸ÇÑ´Ù
; 6076 : 	// Ç¥¸é ÀçÀü¼ÛÀÇ ÃÖ¼ÒÈ­ ( src -> vbuff )
; 6077 :     RECT rSrc, rcDst;
; 6078 :     if (!__GetClipRect(x, y, ddsdSrc.dwWidth, ddsdSrc.dwHeight, &rSrc, &rcDst)) return;

	lea	eax, DWORD PTR _rcDst$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rSrc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ddsdSrc$[ebp+8]
	push	edx
	mov	eax, DWORD PTR _ddsdSrc$[ebp+12]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	push	edx
	call	?__GetClipRect@@YAHHHHHPAUtagRECT@@0@Z	; __GetClipRect
	add	esp, 24					; 00000018H
	test	eax, eax
	jne	SHORT $LN2@PutSpriteC
	jmp	$LN1@PutSpriteC
$LN2@PutSpriteC:

; 6079 : 
; 6080 :     /////
; 6081 :     if (g_pDDSVBuffer)

	cmp	DWORD PTR ?g_pDDSVBuffer@@3PAUIDirectDrawSurface7@@A, 0 ; g_pDDSVBuffer
	je	$LN1@PutSpriteC

; 6082 :     {
; 6083 : 		//// DDSVBuffer¸¦ ÄÃ·¯Å°·Î Ã¤¿î´Ù ( Clean Up )
; 6084 :         _FillRectEx(g_pDDSVBuffer, &rSrc, ddsdVBF.ddckCKSrcBlt.dwColorSpaceLowValue);

	mov	eax, DWORD PTR _ddsdVBF$[ebp+64]
	push	eax
	lea	ecx, DWORD PTR _rSrc$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSVBuffer@@3PAUIDirectDrawSurface7@@A ; g_pDDSVBuffer
	push	edx
	call	?_FillRectEx@@YAXPAUIDirectDrawSurface7@@PAUtagRECT@@K@Z ; _FillRectEx
	add	esp, 12					; 0000000cH

; 6085 : 
; 6086 : 		//// ¼Ò½ºÇ¥¸éÀ» DDSVBuffer·Î Àü¼Û ( ÄÃ·¯Å°1 )
; 6087 :         HRESULT ddrval = g_pDDSVBuffer->Blt(&rSrc, lpDDS, &rSrc, DDBLT_KEYSRC|DDBLT_WAIT, NULL);

	mov	esi, esp
	push	0
	push	16809984				; 01008000H
	lea	eax, DWORD PTR _rSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpDDS$[ebp]
	push	ecx
	lea	edx, DWORD PTR _rSrc$[ebp]
	push	edx
	mov	eax, DWORD PTR ?g_pDDSVBuffer@@3PAUIDirectDrawSurface7@@A ; g_pDDSVBuffer
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?g_pDDSVBuffer@@3PAUIDirectDrawSurface7@@A ; g_pDDSVBuffer
	push	edx
	mov	eax, DWORD PTR [ecx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ddrval$1[ebp], eax

; 6088 :         if (ddrval != DD_OK) DDERRCHK(ddrval);

	cmp	DWORD PTR _ddrval$1[ebp], 0
	je	SHORT $LN5@PutSpriteC
	mov	eax, DWORD PTR ?__LINE__Var@?0??__PutSpriteCk@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA
	add	eax, 23					; 00000017H
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _ddrval$1[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
$LN5@PutSpriteC:

; 6089 : 
; 6090 : 		//// DDSVBuffer¸¦ ¸ñÀûÇ¥¸é( 2Â÷Ç¥¸é )À¸·Î Àü¼Û ( ÄÃ·¯Å°2 )
; 6091 :         ddrval = g_pDDSBack->Blt(&rcDst, g_pDDSVBuffer, &rSrc, DDBLT_KEYSRC|DDBLT_WAIT, NULL);

	mov	esi, esp
	push	0
	push	16809984				; 01008000H
	lea	eax, DWORD PTR _rSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?g_pDDSVBuffer@@3PAUIDirectDrawSurface7@@A ; g_pDDSVBuffer
	push	ecx
	lea	edx, DWORD PTR _rcDst$[ebp]
	push	edx
	mov	eax, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	push	edx
	mov	eax, DWORD PTR [ecx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ddrval$1[ebp], eax

; 6092 :         if (ddrval != DD_OK) DDERRCHK(ddrval);	

	cmp	DWORD PTR _ddrval$1[ebp], 0
	je	SHORT $LN1@PutSpriteC
	mov	eax, DWORD PTR ?__LINE__Var@?0??__PutSpriteCk@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA
	add	eax, 27					; 0000001bH
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _ddrval$1[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
$LN1@PutSpriteC:

; 6093 :     }
; 6094 :     else
; 6095 :     {
; 6096 : 		//// ¿¡¹Ä·¹ÀÌ¼Ç
; 6097 :     }
; 6098 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@PutSpriteC
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 520				; 00000208H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN14@PutSpriteC:
	DD	4
	DD	$LN13@PutSpriteC
$LN13@PutSpriteC:
	DD	-132					; ffffff7cH
	DD	124					; 0000007cH
	DD	$LN9@PutSpriteC
	DD	-264					; fffffef8H
	DD	124					; 0000007cH
	DD	$LN10@PutSpriteC
	DD	-288					; fffffee0H
	DD	16					; 00000010H
	DD	$LN11@PutSpriteC
	DD	-312					; fffffec8H
	DD	16					; 00000010H
	DD	$LN12@PutSpriteC
$LN12@PutSpriteC:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	68					; 00000044H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN11@PutSpriteC:
	DB	114					; 00000072H
	DB	83					; 00000053H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
$LN10@PutSpriteC:
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	100					; 00000064H
	DB	86					; 00000056H
	DB	66					; 00000042H
	DB	70					; 00000046H
	DB	0
$LN9@PutSpriteC:
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	100					; 00000064H
	DB	83					; 00000053H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
?__PutSpriteCk@@YAXPAUIDirectDrawSurface7@@HH@Z ENDP	; __PutSpriteCk
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__CreateFastSBuffer2@@YAHKKK@Z
_TEXT	SEGMENT
_ddrval$ = -8						; size = 4
_dwWidth$ = 8						; size = 4
_dwHeight$ = 12						; size = 4
_rgb$ = 16						; size = 4
?__CreateFastSBuffer2@@YAHKKK@Z PROC			; __CreateFastSBuffer2, COMDAT

; 6036 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 6037 : 	HRESULT ddrval;
; 6038 : 
; 6039 :     if (g_pDDSSBuffer2) 

	cmp	DWORD PTR ?g_pDDSSBuffer2@@3PAUIDirectDrawSurface7@@A, 0 ; g_pDDSSBuffer2
	je	SHORT $LN2@CreateFast

; 6040 : 	{
; 6041 : 		ddrval = g_pDDSSBuffer2->Release();

	mov	eax, DWORD PTR ?g_pDDSSBuffer2@@3PAUIDirectDrawSurface7@@A ; g_pDDSSBuffer2
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?g_pDDSSBuffer2@@3PAUIDirectDrawSurface7@@A ; g_pDDSSBuffer2
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ddrval$[ebp], eax

; 6042 : 		if (ddrval != DD_OK) { DDERRCHK(ddrval); return FALSE; }

	cmp	DWORD PTR _ddrval$[ebp], 0
	je	SHORT $LN2@CreateFast
	mov	eax, DWORD PTR ?__LINE__Var@?0??__CreateFastSBuffer2@@YAHKKK@Z@4JA
	add	eax, 6
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _ddrval$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
	xor	eax, eax
	jmp	SHORT $LN1@CreateFast
$LN2@CreateFast:

; 6043 : 	}
; 6044 : 
; 6045 :     g_pDDSSBuffer2 = __CreateSurface(dwWidth, dwHeight, FALSE);

	push	0
	mov	eax, DWORD PTR _dwHeight$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dwWidth$[ebp]
	push	ecx
	call	?__CreateSurface@@YAPAUIDirectDrawSurface7@@KKH@Z ; __CreateSurface
	add	esp, 12					; 0000000cH
	mov	DWORD PTR ?g_pDDSSBuffer2@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSSBuffer2

; 6046 :     if (!g_pDDSSBuffer2) return FALSE;

	cmp	DWORD PTR ?g_pDDSSBuffer2@@3PAUIDirectDrawSurface7@@A, 0 ; g_pDDSSBuffer2
	jne	SHORT $LN4@CreateFast
	xor	eax, eax
	jmp	SHORT $LN1@CreateFast
$LN4@CreateFast:

; 6047 : 
; 6048 : 	if (g_dwRGBBitCount >= 16)

	cmp	DWORD PTR ?g_dwRGBBitCount@@3KA, 16	; g_dwRGBBitCount, 00000010H
	jb	SHORT $LN5@CreateFast

; 6049 : 	{		
; 6050 : 		ddrval = DDSetColorKey(g_pDDSSBuffer2, rgb);

	mov	eax, DWORD PTR _rgb$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?g_pDDSSBuffer2@@3PAUIDirectDrawSurface7@@A ; g_pDDSSBuffer2
	push	ecx
	call	_DDSetColorKey
	add	esp, 8
	mov	DWORD PTR _ddrval$[ebp], eax

; 6051 : 		if (ddrval != DD_OK) DDERRCHK(ddrval);

	cmp	DWORD PTR _ddrval$[ebp], 0
	je	SHORT $LN5@CreateFast
	mov	eax, DWORD PTR ?__LINE__Var@?0??__CreateFastSBuffer2@@YAHKKK@Z@4JA
	add	eax, 15					; 0000000fH
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _ddrval$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
$LN5@CreateFast:

; 6052 : 	}
; 6053 : 
; 6054 :     return TRUE;

	mov	eax, 1
$LN1@CreateFast:

; 6055 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?__CreateFastSBuffer2@@YAHKKK@Z ENDP			; __CreateFastSBuffer2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__CreateFastSBuffer@@YAHKKK@Z
_TEXT	SEGMENT
_ddrval$ = -8						; size = 4
_dwWidth$ = 8						; size = 4
_dwHeight$ = 12						; size = 4
_rgb$ = 16						; size = 4
?__CreateFastSBuffer@@YAHKKK@Z PROC			; __CreateFastSBuffer, COMDAT

; 6014 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 6015 : 	HRESULT ddrval;
; 6016 : 
; 6017 :     if (g_pDDSSBuffer) 

	cmp	DWORD PTR ?g_pDDSSBuffer@@3PAUIDirectDrawSurface7@@A, 0 ; g_pDDSSBuffer
	je	SHORT $LN2@CreateFast

; 6018 : 	{
; 6019 : 		ddrval = g_pDDSSBuffer->Release();

	mov	eax, DWORD PTR ?g_pDDSSBuffer@@3PAUIDirectDrawSurface7@@A ; g_pDDSSBuffer
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?g_pDDSSBuffer@@3PAUIDirectDrawSurface7@@A ; g_pDDSSBuffer
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ddrval$[ebp], eax

; 6020 : 		if (ddrval != DD_OK) { DDERRCHK(ddrval); return FALSE; }

	cmp	DWORD PTR _ddrval$[ebp], 0
	je	SHORT $LN2@CreateFast
	mov	eax, DWORD PTR ?__LINE__Var@?0??__CreateFastSBuffer@@YAHKKK@Z@4JA
	add	eax, 6
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _ddrval$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
	xor	eax, eax
	jmp	SHORT $LN1@CreateFast
$LN2@CreateFast:

; 6021 : 	}
; 6022 : 
; 6023 :     g_pDDSSBuffer = __CreateSurface(dwWidth, dwHeight, FALSE);

	push	0
	mov	eax, DWORD PTR _dwHeight$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dwWidth$[ebp]
	push	ecx
	call	?__CreateSurface@@YAPAUIDirectDrawSurface7@@KKH@Z ; __CreateSurface
	add	esp, 12					; 0000000cH
	mov	DWORD PTR ?g_pDDSSBuffer@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSSBuffer

; 6024 :     if (!g_pDDSSBuffer) return FALSE;

	cmp	DWORD PTR ?g_pDDSSBuffer@@3PAUIDirectDrawSurface7@@A, 0 ; g_pDDSSBuffer
	jne	SHORT $LN4@CreateFast
	xor	eax, eax
	jmp	SHORT $LN1@CreateFast
$LN4@CreateFast:

; 6025 : 
; 6026 : 	if (g_dwRGBBitCount >= 16)

	cmp	DWORD PTR ?g_dwRGBBitCount@@3KA, 16	; g_dwRGBBitCount, 00000010H
	jb	SHORT $LN5@CreateFast

; 6027 : 	{		
; 6028 : 		ddrval = DDSetColorKey(g_pDDSSBuffer, rgb);

	mov	eax, DWORD PTR _rgb$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?g_pDDSSBuffer@@3PAUIDirectDrawSurface7@@A ; g_pDDSSBuffer
	push	ecx
	call	_DDSetColorKey
	add	esp, 8
	mov	DWORD PTR _ddrval$[ebp], eax

; 6029 : 		if (ddrval != DD_OK) DDERRCHK(ddrval);

	cmp	DWORD PTR _ddrval$[ebp], 0
	je	SHORT $LN5@CreateFast
	mov	eax, DWORD PTR ?__LINE__Var@?0??__CreateFastSBuffer@@YAHKKK@Z@4JA
	add	eax, 15					; 0000000fH
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _ddrval$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
$LN5@CreateFast:

; 6030 : 	}
; 6031 : 
; 6032 :     return TRUE;

	mov	eax, 1
$LN1@CreateFast:

; 6033 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?__CreateFastSBuffer@@YAHKKK@Z ENDP			; __CreateFastSBuffer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__CreateFastVBuffer@@YAHKKK@Z
_TEXT	SEGMENT
_ddrval$ = -8						; size = 4
_dwWidth$ = 8						; size = 4
_dwHeight$ = 12						; size = 4
_rgb$ = 16						; size = 4
?__CreateFastVBuffer@@YAHKKK@Z PROC			; __CreateFastVBuffer, COMDAT

; 5992 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 5993 : 	HRESULT ddrval;
; 5994 : 
; 5995 :     if (g_pDDSVBuffer) 

	cmp	DWORD PTR ?g_pDDSVBuffer@@3PAUIDirectDrawSurface7@@A, 0 ; g_pDDSVBuffer
	je	SHORT $LN2@CreateFast

; 5996 : 	{
; 5997 : 		ddrval = g_pDDSVBuffer->Release();

	mov	eax, DWORD PTR ?g_pDDSVBuffer@@3PAUIDirectDrawSurface7@@A ; g_pDDSVBuffer
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?g_pDDSVBuffer@@3PAUIDirectDrawSurface7@@A ; g_pDDSVBuffer
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ddrval$[ebp], eax

; 5998 : 		if (ddrval != DD_OK) { DDERRCHK(ddrval); return FALSE; }

	cmp	DWORD PTR _ddrval$[ebp], 0
	je	SHORT $LN2@CreateFast
	mov	eax, DWORD PTR ?__LINE__Var@?0??__CreateFastVBuffer@@YAHKKK@Z@4JA
	add	eax, 6
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _ddrval$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
	xor	eax, eax
	jmp	SHORT $LN1@CreateFast
$LN2@CreateFast:

; 5999 : 	}
; 6000 : 
; 6001 :     g_pDDSVBuffer = __CreateSurface(dwWidth, dwHeight, TRUE);

	push	1
	mov	eax, DWORD PTR _dwHeight$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dwWidth$[ebp]
	push	ecx
	call	?__CreateSurface@@YAPAUIDirectDrawSurface7@@KKH@Z ; __CreateSurface
	add	esp, 12					; 0000000cH
	mov	DWORD PTR ?g_pDDSVBuffer@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSVBuffer

; 6002 :     if (!g_pDDSVBuffer) return FALSE;

	cmp	DWORD PTR ?g_pDDSVBuffer@@3PAUIDirectDrawSurface7@@A, 0 ; g_pDDSVBuffer
	jne	SHORT $LN4@CreateFast
	xor	eax, eax
	jmp	SHORT $LN1@CreateFast
$LN4@CreateFast:

; 6003 : 
; 6004 : 	if (g_dwRGBBitCount >= 16)

	cmp	DWORD PTR ?g_dwRGBBitCount@@3KA, 16	; g_dwRGBBitCount, 00000010H
	jb	SHORT $LN5@CreateFast

; 6005 : 	{		
; 6006 : 		ddrval = DDSetColorKey(g_pDDSVBuffer, rgb);

	mov	eax, DWORD PTR _rgb$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?g_pDDSVBuffer@@3PAUIDirectDrawSurface7@@A ; g_pDDSVBuffer
	push	ecx
	call	_DDSetColorKey
	add	esp, 8
	mov	DWORD PTR _ddrval$[ebp], eax

; 6007 : 		if (ddrval != DD_OK) DDERRCHK(ddrval);

	cmp	DWORD PTR _ddrval$[ebp], 0
	je	SHORT $LN5@CreateFast
	mov	eax, DWORD PTR ?__LINE__Var@?0??__CreateFastVBuffer@@YAHKKK@Z@4JA
	add	eax, 15					; 0000000fH
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _ddrval$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
$LN5@CreateFast:

; 6008 : 	}
; 6009 : 
; 6010 :     return TRUE;

	mov	eax, 1
$LN1@CreateFast:

; 6011 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?__CreateFastVBuffer@@YAHKKK@Z ENDP			; __CreateFastVBuffer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__GetClipRect@@YAHHHHHPAUtagRECT@@0@Z
_TEXT	SEGMENT
_rS$ = -72						; size = 16
_rW$ = -48						; size = 16
_yEnd$ = -24						; size = 4
_xEnd$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_nWidth$ = 16						; size = 4
_nHeight$ = 20						; size = 4
_lprcSrc$ = 24						; size = 4
_lprcDst$ = 28						; size = 4
?__GetClipRect@@YAHHHHHPAUtagRECT@@0@Z PROC		; __GetClipRect, COMDAT

; 5941 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 5942 :     ///// Ç¥¸éÀÇ ³¡ ÁÂÇ¥¸¦ ±¸ÇÑ´Ù
; 5943 : 	int xEnd = x + nWidth;

	mov	eax, DWORD PTR _x$[ebp]
	add	eax, DWORD PTR _nWidth$[ebp]
	mov	DWORD PTR _xEnd$[ebp], eax

; 5944 : 	int yEnd = y + nHeight;

	mov	eax, DWORD PTR _y$[ebp]
	add	eax, DWORD PTR _nHeight$[ebp]
	mov	DWORD PTR _yEnd$[ebp], eax

; 5945 : 
; 5946 : 	///// Å¬¸³ÇÎ ¿µ¿ªÀ» ±¸ÇÑ´Ù    
; 5947 : 	RECT rW = { 0, 0, HRES, VRES };

	mov	DWORD PTR _rW$[ebp], 0
	mov	DWORD PTR _rW$[ebp+4], 0
	mov	DWORD PTR _rW$[ebp+8], 1024		; 00000400H
	mov	DWORD PTR _rW$[ebp+12], 768		; 00000300H

; 5948 : 
; 5949 :     ///// Ç¥¸éÀÌ ½ºÅ©¸° ¹ÛÀ¸·Î ³ª°¡¸é Ãâ·ÂÇÏÁö ¾Ê´Â´Ù
; 5950 : 	if (x >= rW.right   || y >= rW.bottom) return FALSE;

	mov	eax, DWORD PTR _x$[ebp]
	cmp	eax, DWORD PTR _rW$[ebp+8]
	jge	SHORT $LN3@GetClipRec
	mov	eax, DWORD PTR _y$[ebp]
	cmp	eax, DWORD PTR _rW$[ebp+12]
	jl	SHORT $LN2@GetClipRec
$LN3@GetClipRec:
	xor	eax, eax
	jmp	$LN1@GetClipRec
$LN2@GetClipRec:

; 5951 : 	if (xEnd <= rW.left || yEnd <= rW.top) return FALSE;

	mov	eax, DWORD PTR _xEnd$[ebp]
	cmp	eax, DWORD PTR _rW$[ebp]
	jle	SHORT $LN5@GetClipRec
	mov	eax, DWORD PTR _yEnd$[ebp]
	cmp	eax, DWORD PTR _rW$[ebp+4]
	jg	SHORT $LN4@GetClipRec
$LN5@GetClipRec:
	xor	eax, eax
	jmp	$LN1@GetClipRec
$LN4@GetClipRec:

; 5952 : 
; 5953 : 	///// ¿ÀÇÁ ½ºÅ©¸°ÀÇ »ç°¢¿µ¿ªÀ» °¨¼Ò ½ÃÄÑ Å¬¸®ÇÎ¿µ¿ªÀ» ±¸ÇöÇÑ´Ù
; 5954 :     RECT rS = { 0, 0, nWidth, nHeight };

	mov	DWORD PTR _rS$[ebp], 0
	mov	DWORD PTR _rS$[ebp+4], 0
	mov	eax, DWORD PTR _nWidth$[ebp]
	mov	DWORD PTR _rS$[ebp+8], eax
	mov	eax, DWORD PTR _nHeight$[ebp]
	mov	DWORD PTR _rS$[ebp+12], eax

; 5955 : 
; 5956 : 	if (x < rW.left)      { rS.left   -= x; }

	mov	eax, DWORD PTR _x$[ebp]
	cmp	eax, DWORD PTR _rW$[ebp]
	jge	SHORT $LN6@GetClipRec
	mov	eax, DWORD PTR _rS$[ebp]
	sub	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR _rS$[ebp], eax
$LN6@GetClipRec:

; 5957 : 	if (y < rW.top)       { rS.top    -= y; }

	mov	eax, DWORD PTR _y$[ebp]
	cmp	eax, DWORD PTR _rW$[ebp+4]
	jge	SHORT $LN7@GetClipRec
	mov	eax, DWORD PTR _rS$[ebp+4]
	sub	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _rS$[ebp+4], eax
$LN7@GetClipRec:

; 5958 : 	if (xEnd > rW.right)  { rS.right  -= (xEnd - rW.right); }	

	mov	eax, DWORD PTR _xEnd$[ebp]
	cmp	eax, DWORD PTR _rW$[ebp+8]
	jle	SHORT $LN8@GetClipRec
	mov	eax, DWORD PTR _xEnd$[ebp]
	sub	eax, DWORD PTR _rW$[ebp+8]
	mov	ecx, DWORD PTR _rS$[ebp+8]
	sub	ecx, eax
	mov	DWORD PTR _rS$[ebp+8], ecx
$LN8@GetClipRec:

; 5959 : 	if (yEnd > rW.bottom) { rS.bottom -= (yEnd - rW.bottom); }

	mov	eax, DWORD PTR _yEnd$[ebp]
	cmp	eax, DWORD PTR _rW$[ebp+12]
	jle	SHORT $LN9@GetClipRec
	mov	eax, DWORD PTR _yEnd$[ebp]
	sub	eax, DWORD PTR _rW$[ebp+12]
	mov	ecx, DWORD PTR _rS$[ebp+12]
	sub	ecx, eax
	mov	DWORD PTR _rS$[ebp+12], ecx
$LN9@GetClipRec:

; 5960 : 
; 5961 :     ///// ¼Ò½ºÀÇ À¯È¿»ç°¢¿©ºÎ
; 5962 : 	//if (IsRectEmpty(&rS)) return FALSE;
; 5963 : 
; 5964 :     //CopyRect(lprcSrc, &rS);
; 5965 : 	lprcSrc->left   = rS.left;

	mov	eax, DWORD PTR _lprcSrc$[ebp]
	mov	ecx, DWORD PTR _rS$[ebp]
	mov	DWORD PTR [eax], ecx

; 5966 : 	lprcSrc->top    = rS.top;

	mov	eax, DWORD PTR _lprcSrc$[ebp]
	mov	ecx, DWORD PTR _rS$[ebp+4]
	mov	DWORD PTR [eax+4], ecx

; 5967 : 	lprcSrc->right  = rS.right;

	mov	eax, DWORD PTR _lprcSrc$[ebp]
	mov	ecx, DWORD PTR _rS$[ebp+8]
	mov	DWORD PTR [eax+8], ecx

; 5968 : 	lprcSrc->bottom = rS.bottom;

	mov	eax, DWORD PTR _lprcSrc$[ebp]
	mov	ecx, DWORD PTR _rS$[ebp+12]
	mov	DWORD PTR [eax+12], ecx

; 5969 : 	
; 5970 : 	//SetRect(lprcDst, x+rS.left, y+rS.top, x+rS.right, y+rS.bottom);
; 5971 :     lprcDst->left  = x+rS.left;

	mov	eax, DWORD PTR _x$[ebp]
	add	eax, DWORD PTR _rS$[ebp]
	mov	ecx, DWORD PTR _lprcDst$[ebp]
	mov	DWORD PTR [ecx], eax

; 5972 :     lprcDst->top   = y+rS.top;

	mov	eax, DWORD PTR _y$[ebp]
	add	eax, DWORD PTR _rS$[ebp+4]
	mov	ecx, DWORD PTR _lprcDst$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 5973 :     lprcDst->right = x+rS.right;

	mov	eax, DWORD PTR _x$[ebp]
	add	eax, DWORD PTR _rS$[ebp+8]
	mov	ecx, DWORD PTR _lprcDst$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 5974 :     lprcDst->bottom= y+rS.bottom;

	mov	eax, DWORD PTR _y$[ebp]
	add	eax, DWORD PTR _rS$[ebp+12]
	mov	ecx, DWORD PTR _lprcDst$[ebp]
	mov	DWORD PTR [ecx+12], eax

; 5975 :     
; 5976 :     return TRUE;

	mov	eax, 1
$LN1@GetClipRec:

; 5977 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@GetClipRec
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN14@GetClipRec:
	DD	2
	DD	$LN13@GetClipRec
$LN13@GetClipRec:
	DD	-48					; ffffffd0H
	DD	16					; 00000010H
	DD	$LN11@GetClipRec
	DD	-72					; ffffffb8H
	DD	16					; 00000010H
	DD	$LN12@GetClipRec
$LN12@GetClipRec:
	DB	114					; 00000072H
	DB	83					; 00000053H
	DB	0
$LN11@GetClipRec:
	DB	114					; 00000072H
	DB	87					; 00000057H
	DB	0
?__GetClipRect@@YAHHHHHPAUtagRECT@@0@Z ENDP		; __GetClipRect
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__DDSSetColorKeyEx@@YAHPAUIDirectDrawSurface7@@KK@Z
_TEXT	SEGMENT
_ddrval$ = -24						; size = 4
_ddck$ = -12						; size = 8
_lpDDSDest$ = 8						; size = 4
_rgb1$ = 12						; size = 4
_rgb2$ = 16						; size = 4
?__DDSSetColorKeyEx@@YAHPAUIDirectDrawSurface7@@KK@Z PROC ; __DDSSetColorKeyEx, COMDAT

; 5981 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 5982 :     DDCOLORKEY              ddck;
; 5983 : 
; 5984 :     ddck.dwColorSpaceLowValue = DDColorMatch(lpDDSDest, rgb1);

	mov	eax, DWORD PTR _rgb1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpDDSDest$[ebp]
	push	ecx
	call	_DDColorMatch
	add	esp, 8
	mov	DWORD PTR _ddck$[ebp], eax

; 5985 :     ddck.dwColorSpaceHighValue = DDColorMatch(lpDDSDest, rgb2);

	mov	eax, DWORD PTR _rgb2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpDDSDest$[ebp]
	push	ecx
	call	_DDColorMatch
	add	esp, 8
	mov	DWORD PTR _ddck$[ebp+4], eax

; 5986 : 	HRESULT ddrval = lpDDSDest->SetColorKey(DDCKEY_SRCBLT | DDCKEY_COLORSPACE, &ddck);

	mov	esi, esp
	lea	eax, DWORD PTR _ddck$[ebp]
	push	eax
	push	9
	mov	ecx, DWORD PTR _lpDDSDest$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _lpDDSDest$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+116]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ddrval$[ebp], eax

; 5987 : 	if (ddrval != DD_OK) { return DDERRCHK(ddrval); }

	cmp	DWORD PTR _ddrval$[ebp], 0
	je	SHORT $LN2@DDSSetColo
	mov	eax, DWORD PTR ?__LINE__Var@?0??__DDSSetColorKeyEx@@YAHPAUIDirectDrawSurface7@@KK@Z@4JA
	add	eax, 6
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _ddrval$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN1@DDSSetColo
$LN2@DDSSetColo:

; 5988 : 	return TRUE;    

	mov	eax, 1
$LN1@DDSSetColo:

; 5989 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@DDSSetColo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@DDSSetColo:
	DD	1
	DD	$LN5@DDSSetColo
$LN5@DDSSetColo:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN4@DDSSetColo
$LN4@DDSSetColo:
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
?__DDSSetColorKeyEx@@YAHPAUIDirectDrawSurface7@@KK@Z ENDP ; __DDSSetColorKeyEx
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__PutSpriteLockFastEx16@@YAXPAUIDirectDrawSurface7@@HH@Z
_TEXT	SEGMENT
tv193 = -1064						; size = 4
_dwColorSpaceLowValueMixed$1 = -672			; size = 4
_bIsRemain$ = -660					; size = 4
_dwHeight$ = -648					; size = 4
_dwWidth$ = -636					; size = 4
_dwWidthSrc$ = -624					; size = 4
_dwDstPitch$ = -612					; size = 4
_dwSrcPitch$ = -600					; size = 4
_dwColorSpaceLowValue$ = -588				; size = 4
_lpDDSDstTemp$ = -576					; size = 4
_lpDDSDst$ = -564					; size = 4
_lpDDSSrc$ = -552					; size = 4
_ddrval$ = -540						; size = 4
_ddsdDst$ = -528					; size = 124
_ddsdSrc$ = -396					; size = 124
_iy$ = -264						; size = 4
_ix$ = -252						; size = 4
_sRGB2$ = -240						; size = 4
_sRGB1$ = -228						; size = 4
_RGBRGB$ = -216						; size = 4
_nOverSize$2 = -204					; size = 4
_nOverSize$3 = -192					; size = 4
_rcSrc$ = -180						; size = 16
_rcDst$ = -156						; size = 16
_ddsd$ = -132						; size = 124
__$ArrayPad$ = -4					; size = 4
_lpDDS$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
?__PutSpriteLockFastEx16@@YAXPAUIDirectDrawSurface7@@HH@Z PROC ; __PutSpriteLockFastEx16, COMDAT

; 5037 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 1064				; 00000428H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-1064]
	mov	ecx, 266				; 0000010aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 5038 : 	//// Å¬¸³ÇÎ ¿µ¿ª±¸ÇÏ±â
; 5039 : 	//// Ç¥¸éÀÇ Á¤º¸ ¾ò±â
; 5040 : 	DDSURFACEDESC2 ddsd;
; 5041 :     ddsd.dwSize = sizeof(ddsd);

	mov	DWORD PTR _ddsd$[ebp], 124		; 0000007cH

; 5042 :     //ddsd.dwFlags = DDSD_HEIGHT | DDSD_WIDTH;
; 5043 : 	lpDDS->GetSurfaceDesc(&ddsd);

	mov	esi, esp
	lea	eax, DWORD PTR _ddsd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpDDS$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _lpDDS$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+88]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 5044 : 
; 5045 : 	//// ½ºÅ©¸°ÁÂÇ¥ÀÇ RECT¸¦ ±¸ÇÑ´Ù
; 5046 : 	RECT rcDst = { x, y, x+ddsd.dwWidth, y+ddsd.dwHeight };

	mov	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR _rcDst$[ebp], eax
	mov	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _rcDst$[ebp+4], eax
	mov	eax, DWORD PTR _x$[ebp]
	add	eax, DWORD PTR _ddsd$[ebp+12]
	mov	DWORD PTR _rcDst$[ebp+8], eax
	mov	eax, DWORD PTR _y$[ebp]
	add	eax, DWORD PTR _ddsd$[ebp+8]
	mov	DWORD PTR _rcDst$[ebp+12], eax

; 5047 : 	RECT rcSrc = { 0, 0, ddsd.dwWidth, ddsd.dwHeight };

	mov	DWORD PTR _rcSrc$[ebp], 0
	mov	DWORD PTR _rcSrc$[ebp+4], 0
	mov	eax, DWORD PTR _ddsd$[ebp+12]
	mov	DWORD PTR _rcSrc$[ebp+8], eax
	mov	eax, DWORD PTR _ddsd$[ebp+8]
	mov	DWORD PTR _rcSrc$[ebp+12], eax

; 5048 : 
; 5049 : 	//// ½ºÅ©¸° ¹ÛÀ¸·Î ³ª°¡¸é Ãâ·ÂÇÏÁö ¾Ê´Â´Ù
; 5050 : 	if (x >= HRES || y >= VRES) return;

	cmp	DWORD PTR _x$[ebp], 1024		; 00000400H
	jge	SHORT $LN11@PutSpriteL
	cmp	DWORD PTR _y$[ebp], 768			; 00000300H
	jl	SHORT $LN10@PutSpriteL
$LN11@PutSpriteL:
	jmp	$LN1@PutSpriteL
$LN10@PutSpriteL:

; 5051 : 	if (rcDst.right <= 0 || rcDst.bottom <= 0) return;

	cmp	DWORD PTR _rcDst$[ebp+8], 0
	jle	SHORT $LN13@PutSpriteL
	cmp	DWORD PTR _rcDst$[ebp+12], 0
	jg	SHORT $LN12@PutSpriteL
$LN13@PutSpriteL:
	jmp	$LN1@PutSpriteL
$LN12@PutSpriteL:

; 5052 : 	
; 5053 : 	//// ½ºÇÁ¶óÀÌÆ®°¡ ½ºÅ©¸° ¹ÛÀ¸·Î ³ª°£ ¸¸Å­ Ãâ·ÂÇÏÁö ¾Ê´Â´Ù
; 5054 : 	//// ¿ÀÇÁ ½ºÅ©¸°ÀÇ »ç°¢¿µ¿ªÀ» °¨¼Ò ½ÃÄÑ Å¬¸®ÇÎÀ» ±¸ÇöÇÑ´Ù	
; 5055 : 
; 5056 : 	//// ¼öÆò º¸Á¤
; 5057 : 	if (x < 0)

	cmp	DWORD PTR _x$[ebp], 0
	jge	SHORT $LN14@PutSpriteL

; 5058 : 	{
; 5059 : 		// ÁÂº¯À» ÁÙÀÎ´Ù. rcSrc.left += ³Ñ¾î°£ Å©±â, abs(x)
; 5060 : 		rcSrc.left -= x;

	mov	eax, DWORD PTR _rcSrc$[ebp]
	sub	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR _rcSrc$[ebp], eax

; 5061 : 		rcDst.left=x=0;		

	mov	DWORD PTR _x$[ebp], 0
	mov	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR _rcDst$[ebp], eax
	jmp	SHORT $LN15@PutSpriteL
$LN14@PutSpriteL:

; 5062 : 	}
; 5063 : 	else if (rcDst.right >= HRES)

	cmp	DWORD PTR _rcDst$[ebp+8], 1024		; 00000400H
	jl	SHORT $LN15@PutSpriteL

; 5064 : 	{
; 5065 : 		// ¿ìº¯À» ÁÙÀÎ´Ù. rcSrc.right -= ³Ñ¾î°£ Å©±â
; 5066 : 		int nOverSize = (rcDst.right - HRES);		

	mov	eax, DWORD PTR _rcDst$[ebp+8]
	sub	eax, 1024				; 00000400H
	mov	DWORD PTR _nOverSize$3[ebp], eax

; 5067 : 		rcSrc.right -= nOverSize;

	mov	eax, DWORD PTR _rcSrc$[ebp+8]
	sub	eax, DWORD PTR _nOverSize$3[ebp]
	mov	DWORD PTR _rcSrc$[ebp+8], eax

; 5068 : 		rcDst.right -= nOverSize;

	mov	eax, DWORD PTR _rcDst$[ebp+8]
	sub	eax, DWORD PTR _nOverSize$3[ebp]
	mov	DWORD PTR _rcDst$[ebp+8], eax
$LN15@PutSpriteL:

; 5069 : 	}
; 5070 : 	//// ¼öÁ÷ º¸Á¤
; 5071 : 	if (y < 0)

	cmp	DWORD PTR _y$[ebp], 0
	jge	SHORT $LN17@PutSpriteL

; 5072 : 	{
; 5073 : 		// »óº¯À» ÁÙÀÎ´Ù. rcSrc.top += ³Ñ¾î°£ Å©±â, abs(y)
; 5074 : 		rcSrc.top -= y;

	mov	eax, DWORD PTR _rcSrc$[ebp+4]
	sub	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _rcSrc$[ebp+4], eax

; 5075 : 		rcDst.top=y=0;

	mov	DWORD PTR _y$[ebp], 0
	mov	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _rcDst$[ebp+4], eax
	jmp	SHORT $LN18@PutSpriteL
$LN17@PutSpriteL:

; 5076 : 	}
; 5077 : 	else if (rcDst.bottom >= VRES )

	cmp	DWORD PTR _rcDst$[ebp+12], 768		; 00000300H
	jl	SHORT $LN18@PutSpriteL

; 5078 : 	{
; 5079 : 		// ÇÏº¯À» ÁÙÀÎ´Ù. rcSrc.bottom -= ³Ñ¾î°£ Å©±â 
; 5080 : 		int nOverSize = (rcDst.bottom - VRES);

	mov	eax, DWORD PTR _rcDst$[ebp+12]
	sub	eax, 768				; 00000300H
	mov	DWORD PTR _nOverSize$2[ebp], eax

; 5081 : 		rcSrc.bottom -= nOverSize;

	mov	eax, DWORD PTR _rcSrc$[ebp+12]
	sub	eax, DWORD PTR _nOverSize$2[ebp]
	mov	DWORD PTR _rcSrc$[ebp+12], eax

; 5082 : 		rcDst.bottom -= nOverSize;

	mov	eax, DWORD PTR _rcDst$[ebp+12]
	sub	eax, DWORD PTR _nOverSize$2[ebp]
	mov	DWORD PTR _rcDst$[ebp+12], eax
$LN18@PutSpriteL:

; 5083 : 	}
; 5084 : 
; 5085 : 	////////////////////// 
; 5086 : 	DWORD RGBRGB;
; 5087 : 	DWORD sRGB1, sRGB2;
; 5088 : 
; 5089 : 	DWORD ix, iy;
; 5090 :     DDSURFACEDESC2 ddsdSrc, ddsdDst;
; 5091 : 
; 5092 : 	//// ¼Ò½ºÇ¥¸é Lock
; 5093 : 	ZeroMemory(&ddsdSrc, sizeof(ddsdSrc));	

	push	124					; 0000007cH
	push	0
	lea	eax, DWORD PTR _ddsdSrc$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 5094 : 	ddsdSrc.dwSize = sizeof(ddsdSrc);

	mov	DWORD PTR _ddsdSrc$[ebp], 124		; 0000007cH

; 5095 : 	HRESULT ddrval = lpDDS->Lock(&rcSrc, &ddsdSrc, DDLOCK_READONLY|DDLOCK_WAIT, NULL);

	mov	esi, esp
	push	0
	push	17					; 00000011H
	lea	eax, DWORD PTR _ddsdSrc$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rcSrc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpDDS$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _lpDDS$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+100]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ddrval$[ebp], eax

; 5096 :     if (ddrval != DD_OK) { DDERRCHK(ddrval); return; }

	cmp	DWORD PTR _ddrval$[ebp], 0
	je	SHORT $LN20@PutSpriteL
	mov	eax, DWORD PTR ?__LINE__Var@?0??__PutSpriteLockFastEx16@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA
	add	eax, 59					; 0000003bH
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _ddrval$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
	jmp	$LN1@PutSpriteL
$LN20@PutSpriteL:

; 5097 :     
; 5098 :     //// ¸ñÀûÇ¥¸éÀÇ RECT
; 5099 :     //RECT rcDest = { x, y, x+ddsdSrc.dwWidth, y+ddsdSrc.dwHeight };
; 5100 : 
; 5101 : 	//// ¸ñÀûÇ¥¸é Lock
; 5102 : 	ZeroMemory(&ddsdDst, sizeof(ddsdDst));	

	push	124					; 0000007cH
	push	0
	lea	eax, DWORD PTR _ddsdDst$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 5103 : 	ddsdDst.dwSize = sizeof(ddsdDst);

	mov	DWORD PTR _ddsdDst$[ebp], 124		; 0000007cH

; 5104 : 	ddrval = g_pDDSBack->Lock(&rcDst, &ddsdDst, DDLOCK_WRITEONLY|DDLOCK_WAIT, NULL);

	mov	esi, esp
	push	0
	push	33					; 00000021H
	lea	eax, DWORD PTR _ddsdDst$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rcDst$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	push	ecx
	mov	edx, DWORD PTR [eax+100]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ddrval$[ebp], eax

; 5105 :     if (ddrval != DD_OK)

	cmp	DWORD PTR _ddrval$[ebp], 0
	je	SHORT $LN21@PutSpriteL

; 5106 :     {
; 5107 :     	//// ¼Ò½ºÇ¥¸éÀº Lock »óÅÂÀÌ¹Ç·Î Unlock
; 5108 :         lpDDS->Unlock(&rcSrc);

	mov	esi, esp
	lea	eax, DWORD PTR _rcSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpDDS$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _lpDDS$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+128]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 5109 :         DDERRCHK(ddrval);

	mov	eax, DWORD PTR ?__LINE__Var@?0??__PutSpriteLockFastEx16@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA
	add	eax, 72					; 00000048H
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _ddrval$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH

; 5110 :         return;

	jmp	$LN1@PutSpriteL
$LN21@PutSpriteL:

; 5111 :     }
; 5112 : 
; 5113 : 	//// Ç¥¸éÀÇ ÁÖ¼Ò
; 5114 : 	DWORD* lpDDSSrc = (DWORD*) ddsdSrc.lpSurface;

	mov	eax, DWORD PTR _ddsdSrc$[ebp+36]
	mov	DWORD PTR _lpDDSSrc$[ebp], eax

; 5115 : 	DWORD* lpDDSDst = (DWORD*) ddsdDst.lpSurface;

	mov	eax, DWORD PTR _ddsdDst$[ebp+36]
	mov	DWORD PTR _lpDDSDst$[ebp], eax

; 5116 : 	WORD*  lpDDSDstTemp;
; 5117 : 
; 5118 : 	//// ¼Ò½ºÇ¥¸éÀÇ ÄÃ·¯Å° ÂüÁ¶
; 5119 : 	DWORD dwColorSpaceLowValue = ddsdSrc.ddckCKSrcBlt.dwColorSpaceLowValue;

	mov	eax, DWORD PTR _ddsdSrc$[ebp+64]
	mov	DWORD PTR _dwColorSpaceLowValue$[ebp], eax

; 5120 : 	
; 5121 : 	////
; 5122 : 	DWORD dwSrcPitch = ddsdSrc.lPitch >> 2; // 4¹ÙÀÌÆ® Á¤·Ä, /4

	mov	eax, DWORD PTR _ddsdSrc$[ebp+16]
	sar	eax, 2
	mov	DWORD PTR _dwSrcPitch$[ebp], eax

; 5123 : 	DWORD dwDstPitch = ddsdDst.lPitch >> 2;

	mov	eax, DWORD PTR _ddsdDst$[ebp+16]
	sar	eax, 2
	mov	DWORD PTR _dwDstPitch$[ebp], eax

; 5124 : 
; 5125 : 	DWORD dwWidthSrc = rcSrc.right-rcSrc.left;

	mov	eax, DWORD PTR _rcSrc$[ebp+8]
	sub	eax, DWORD PTR _rcSrc$[ebp]
	mov	DWORD PTR _dwWidthSrc$[ebp], eax

; 5126 : 	DWORD dwWidth  = dwWidthSrc >> 1;       // 2°³ÀÇ ÇÈ¼¿À» ÀÐÀ¸¹Ç·Î /2

	mov	eax, DWORD PTR _dwWidthSrc$[ebp]
	shr	eax, 1
	mov	DWORD PTR _dwWidth$[ebp], eax

; 5127 : 	DWORD dwHeight = rcSrc.bottom-rcSrc.top;

	mov	eax, DWORD PTR _rcSrc$[ebp+12]
	sub	eax, DWORD PTR _rcSrc$[ebp+4]
	mov	DWORD PTR _dwHeight$[ebp], eax

; 5128 : 	//// È¦¼öÆøÀÎ °æ¿ì ³ª¸ÓÁö ÇÃ·¡±× ( 1 ÇÈ¼¿ )
; 5129 : 	BOOL bIsRemain = FALSE;

	mov	DWORD PTR _bIsRemain$[ebp], 0

; 5130 : 	if (dwWidthSrc % 2) bIsRemain = TRUE;

	mov	eax, DWORD PTR _dwWidthSrc$[ebp]
	xor	edx, edx
	mov	ecx, 2
	div	ecx
	test	edx, edx
	je	SHORT $LN22@PutSpriteL
	mov	DWORD PTR _bIsRemain$[ebp], 1
$LN22@PutSpriteL:

; 5131 : 
; 5132 : 	//// BPP
; 5133 : 	switch(g_dwRGBBitCount)

	mov	eax, DWORD PTR ?g_dwRGBBitCount@@3KA	; g_dwRGBBitCount
	mov	DWORD PTR tv193[ebp], eax
	cmp	DWORD PTR tv193[ebp], 16		; 00000010H
	je	SHORT $LN23@PutSpriteL
	jmp	$LN2@PutSpriteL
$LN23@PutSpriteL:

; 5134 : 	{
; 5135 : 	case 16 :
; 5136 : 		{
; 5137 : 			//// µÎ°³ÀÇ ÇÈ¼¿¿¡ ´ëÇÑ ÄÃ·¯Å° °ªÀ» ±¸ÇÑ´Ù. °í¼Ó ÆÇÁ¤À» À§ÇÑ OR ¿¬»ê
; 5138 : 			DWORD dwColorSpaceLowValueMixed = dwColorSpaceLowValue << 16 | dwColorSpaceLowValue;

	mov	eax, DWORD PTR _dwColorSpaceLowValue$[ebp]
	shl	eax, 16					; 00000010H
	or	eax, DWORD PTR _dwColorSpaceLowValue$[ebp]
	mov	DWORD PTR _dwColorSpaceLowValueMixed$1[ebp], eax

; 5139 : 
; 5140 : 			if (g_dwPixelFormat == RGB565)

	cmp	DWORD PTR ?g_dwPixelFormat@@3KA, 565	; g_dwPixelFormat, 00000235H
	jne	$LN2@PutSpriteL

; 5141 : 			{
; 5142 : 				for (iy=0; iy < dwHeight; iy++)

	mov	DWORD PTR _iy$[ebp], 0
	jmp	SHORT $LN6@PutSpriteL
$LN4@PutSpriteL:
	mov	eax, DWORD PTR _iy$[ebp]
	add	eax, 1
	mov	DWORD PTR _iy$[ebp], eax
$LN6@PutSpriteL:
	mov	eax, DWORD PTR _iy$[ebp]
	cmp	eax, DWORD PTR _dwHeight$[ebp]
	jae	$LN2@PutSpriteL

; 5143 : 				{
; 5144 : 					for (ix=0; ix < dwWidth; ix++)

	mov	DWORD PTR _ix$[ebp], 0
	jmp	SHORT $LN9@PutSpriteL
$LN7@PutSpriteL:
	mov	eax, DWORD PTR _ix$[ebp]
	add	eax, 1
	mov	DWORD PTR _ix$[ebp], eax
$LN9@PutSpriteL:
	mov	eax, DWORD PTR _ix$[ebp]
	cmp	eax, DWORD PTR _dwWidth$[ebp]
	jae	$LN8@PutSpriteL

; 5145 : 					{
; 5146 : 						//// µÎ°³ÀÇ ÇÈ¼¿À» ¾ò¾î¿Â´Ù
; 5147 : 						//memcpy(&RGBRGB, lpDDSSrc+ix, 4);
; 5148 : 						RGBRGB = *(lpDDSSrc+ix);

	mov	eax, DWORD PTR _ix$[ebp]
	mov	ecx, DWORD PTR _lpDDSSrc$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _RGBRGB$[ebp], edx

; 5149 : 						
; 5150 : 						//// µÎ°³ÀÇ ÇÈ¼¿ÀÌ ÄÃ·¯Å°ÀÌ¸é ·çÇÁ¹Ýº¹ ( ´ÙÀ½ ÇÈ¼¿ ±×·ìÀ» ¾ò´Â´Ù )
; 5151 : 						if (RGBRGB == dwColorSpaceLowValueMixed) continue;	

	mov	eax, DWORD PTR _RGBRGB$[ebp]
	cmp	eax, DWORD PTR _dwColorSpaceLowValueMixed$1[ebp]
	jne	SHORT $LN26@PutSpriteL
	jmp	SHORT $LN7@PutSpriteL
$LN26@PutSpriteL:

; 5152 : 						
; 5153 : 						//// ÇÈ¼¿À» ºÐ¸®ÇÑ´Ù
; 5154 : 						sRGB1 = RGBRGB & 0x0000FFFF;

	mov	eax, DWORD PTR _RGBRGB$[ebp]
	and	eax, 65535				; 0000ffffH
	mov	DWORD PTR _sRGB1$[ebp], eax

; 5155 : 						sRGB2 = RGBRGB >> 16;

	mov	eax, DWORD PTR _RGBRGB$[ebp]
	shr	eax, 16					; 00000010H
	mov	DWORD PTR _sRGB2$[ebp], eax

; 5156 : 						
; 5157 : 						//// ¼Ò½ºÇ¥¸éÀÇ ÇÈ¼¿ sRGB1,2°¡ ÀÌ¹ÌÁöÀÎ °æ¿ì
; 5158 : 						if (sRGB1 != dwColorSpaceLowValue && sRGB2 != dwColorSpaceLowValue)

	mov	eax, DWORD PTR _sRGB1$[ebp]
	cmp	eax, DWORD PTR _dwColorSpaceLowValue$[ebp]
	je	SHORT $LN27@PutSpriteL
	mov	eax, DWORD PTR _sRGB2$[ebp]
	cmp	eax, DWORD PTR _dwColorSpaceLowValue$[ebp]
	je	SHORT $LN27@PutSpriteL

; 5159 : 						{
; 5160 : 							//memcpy(lpDDSDst+ix, &RGBRGB, 4);
; 5161 : 							*(lpDDSDst+ix) = RGBRGB;							

	mov	eax, DWORD PTR _ix$[ebp]
	mov	ecx, DWORD PTR _lpDDSDst$[ebp]
	mov	edx, DWORD PTR _RGBRGB$[ebp]
	mov	DWORD PTR [ecx+eax*4], edx
	jmp	SHORT $LN28@PutSpriteL
$LN27@PutSpriteL:

; 5162 : 						}						
; 5163 : 						//// ¼Ò½ºÇ¥¸éÀÇ ÇÈ¼¿ sRGB1ÀÌ ÀÌ¹ÌÁö ÇÈ¼¿ÀÎ °æ¿ì
; 5164 : 						// else if (sRGB1 != dwColorSpaceLowValue && sRGB2 == dwColorSpaceLowValue )
; 5165 : 						else if (sRGB1 != dwColorSpaceLowValue)

	mov	eax, DWORD PTR _sRGB1$[ebp]
	cmp	eax, DWORD PTR _dwColorSpaceLowValue$[ebp]
	je	SHORT $LN29@PutSpriteL

; 5166 : 						{							
; 5167 : 							lpDDSDstTemp = (WORD*)(lpDDSDst+ix);

	mov	eax, DWORD PTR _ix$[ebp]
	mov	ecx, DWORD PTR _lpDDSDst$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _lpDDSDstTemp$[ebp], edx

; 5168 : 							*lpDDSDstTemp = (WORD)sRGB1;							

	mov	eax, DWORD PTR _lpDDSDstTemp$[ebp]
	mov	cx, WORD PTR _sRGB1$[ebp]
	mov	WORD PTR [eax], cx

; 5169 : 						}
; 5170 : 						//// ¼Ò½ºÇ¥¸éÀÇ ÇÈ¼¿ sRGB1ÀÌ ÀÌ¹ÌÁö ÇÈ¼¿ÀÎ °æ¿ì
; 5171 : 						// else if (sRGB1 == dwColorSpaceLowValue && sRGB2 != dwColorSpaceLowValue )
; 5172 : 						// else if (sRGB2 != dwColorSpaceLowValue)
; 5173 : 						else 

	jmp	SHORT $LN28@PutSpriteL
$LN29@PutSpriteL:

; 5174 : 						{
; 5175 : 							lpDDSDstTemp = (WORD*)(lpDDSDst+ix);

	mov	eax, DWORD PTR _ix$[ebp]
	mov	ecx, DWORD PTR _lpDDSDst$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _lpDDSDstTemp$[ebp], edx

; 5176 : 							*(lpDDSDstTemp+1) = (WORD)sRGB2;

	mov	eax, DWORD PTR _lpDDSDstTemp$[ebp]
	mov	cx, WORD PTR _sRGB2$[ebp]
	mov	WORD PTR [eax+2], cx
$LN28@PutSpriteL:

; 5177 : 						}
; 5178 : 
; 5179 : 						//// È¦¼öÆø, 1 ÇÈ¼¿
; 5180 : 						// if (bIsRemain && ix == dwWidth-1)						
; 5181 : 						if (ix == dwWidth-1)

	mov	eax, DWORD PTR _dwWidth$[ebp]
	sub	eax, 1
	cmp	DWORD PTR _ix$[ebp], eax
	jne	SHORT $LN31@PutSpriteL

; 5182 : 						{
; 5183 : 							if (bIsRemain)

	cmp	DWORD PTR _bIsRemain$[ebp], 0
	je	SHORT $LN31@PutSpriteL

; 5184 : 							{								
; 5185 : 								sRGB1 = *(lpDDSSrc+ix+1) & 0x0000FFFF;

	mov	eax, DWORD PTR _ix$[ebp]
	mov	ecx, DWORD PTR _lpDDSSrc$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+4]
	and	edx, 65535				; 0000ffffH
	mov	DWORD PTR _sRGB1$[ebp], edx

; 5186 : 								if (sRGB1 != dwColorSpaceLowValue)

	mov	eax, DWORD PTR _sRGB1$[ebp]
	cmp	eax, DWORD PTR _dwColorSpaceLowValue$[ebp]
	je	SHORT $LN31@PutSpriteL

; 5187 : 								{
; 5188 : 									lpDDSDstTemp = (WORD*)(lpDDSDst+ix+1);

	mov	eax, DWORD PTR _ix$[ebp]
	mov	ecx, DWORD PTR _lpDDSDst$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4+4]
	mov	DWORD PTR _lpDDSDstTemp$[ebp], edx

; 5189 : 									*lpDDSDstTemp = (WORD)sRGB1;

	mov	eax, DWORD PTR _lpDDSDstTemp$[ebp]
	mov	cx, WORD PTR _sRGB1$[ebp]
	mov	WORD PTR [eax], cx
$LN31@PutSpriteL:

; 5190 : 								}
; 5191 : 							}
; 5192 : 						}
; 5193 : 					}

	jmp	$LN7@PutSpriteL
$LN8@PutSpriteL:

; 5194 : 					lpDDSSrc += dwSrcPitch;

	mov	eax, DWORD PTR _dwSrcPitch$[ebp]
	mov	ecx, DWORD PTR _lpDDSSrc$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _lpDDSSrc$[ebp], edx

; 5195 : 					lpDDSDst += dwDstPitch;

	mov	eax, DWORD PTR _dwDstPitch$[ebp]
	mov	ecx, DWORD PTR _lpDDSDst$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _lpDDSDst$[ebp], edx

; 5196 : 				}

	jmp	$LN4@PutSpriteL
$LN2@PutSpriteL:

; 5197 : 			}	
; 5198 : 			else if (g_dwPixelFormat == BGR565)
; 5199 : 			{
; 5200 : 			}
; 5201 : 			else if (g_dwPixelFormat == RGB555)
; 5202 : 			{
; 5203 : 			}
; 5204 : 			break;
; 5205 : 		}
; 5206 : 	case 24 :
; 5207 : 	case 32 : break;
; 5208 : 	}
; 5209 : 	
; 5210 : 	//// Ç¥¸é Unlock
; 5211 :     g_pDDSBack->Unlock(&rcDst);

	mov	esi, esp
	lea	eax, DWORD PTR _rcDst$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	push	eax
	mov	ecx, DWORD PTR [edx+128]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 5212 :     lpDDS->Unlock(&rcSrc);

	mov	esi, esp
	lea	eax, DWORD PTR _rcSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpDDS$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _lpDDS$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+128]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@PutSpriteL:

; 5213 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN45@PutSpriteL
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1064				; 00000428H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN45@PutSpriteL:
	DD	5
	DD	$LN44@PutSpriteL
$LN44@PutSpriteL:
	DD	-132					; ffffff7cH
	DD	124					; 0000007cH
	DD	$LN39@PutSpriteL
	DD	-156					; ffffff64H
	DD	16					; 00000010H
	DD	$LN40@PutSpriteL
	DD	-180					; ffffff4cH
	DD	16					; 00000010H
	DD	$LN41@PutSpriteL
	DD	-396					; fffffe74H
	DD	124					; 0000007cH
	DD	$LN42@PutSpriteL
	DD	-528					; fffffdf0H
	DD	124					; 0000007cH
	DD	$LN43@PutSpriteL
$LN43@PutSpriteL:
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	100					; 00000064H
	DB	68					; 00000044H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN42@PutSpriteL:
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	100					; 00000064H
	DB	83					; 00000053H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
$LN41@PutSpriteL:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	83					; 00000053H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
$LN40@PutSpriteL:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	68					; 00000044H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN39@PutSpriteL:
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	100					; 00000064H
	DB	0
?__PutSpriteLockFastEx16@@YAXPAUIDirectDrawSurface7@@HH@Z ENDP ; __PutSpriteLockFastEx16
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__PutSpriteLockFast16@@YAXPAUIDirectDrawSurface7@@HH@Z
_TEXT	SEGMENT
tv137 = -656						; size = 4
_dwColorSpaceLowValueMixed$1 = -456			; size = 4
_dwWidth$ = -444					; size = 4
_dwDstPitch$ = -432					; size = 4
_dwSrcPitch$ = -420					; size = 4
_dwColorSpaceLowValue$ = -408				; size = 4
_lpDDSDstTemp$ = -396					; size = 4
_lpDDSDst$ = -384					; size = 4
_lpDDSSrc$ = -372					; size = 4
_rcDest$ = -360						; size = 16
_ddrval$ = -336						; size = 4
_ddsdDst$ = -324					; size = 124
_ddsdSrc$ = -192					; size = 124
_iy$ = -60						; size = 4
_ix$ = -48						; size = 4
_sRGB2$ = -36						; size = 4
_sRGB1$ = -24						; size = 4
_RGBRGB$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_lpDDS$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
?__PutSpriteLockFast16@@YAXPAUIDirectDrawSurface7@@HH@Z PROC ; __PutSpriteLockFast16, COMDAT

; 4811 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 656				; 00000290H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-656]
	mov	ecx, 164				; 000000a4H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 4812 : 	DWORD RGBRGB;
; 4813 : 	DWORD sRGB1, sRGB2;
; 4814 : 
; 4815 : 	DWORD ix, iy;
; 4816 :     DDSURFACEDESC2 ddsdSrc, ddsdDst;
; 4817 : 
; 4818 : 	//// ¼Ò½ºÇ¥¸é Lock
; 4819 : 	ZeroMemory(&ddsdSrc, sizeof(ddsdSrc));	

	push	124					; 0000007cH
	push	0
	lea	eax, DWORD PTR _ddsdSrc$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 4820 : 	ddsdSrc.dwSize = sizeof(ddsdSrc);

	mov	DWORD PTR _ddsdSrc$[ebp], 124		; 0000007cH

; 4821 : 	HRESULT ddrval = lpDDS->Lock(NULL, &ddsdSrc, DDLOCK_READONLY|DDLOCK_WAIT, NULL);

	mov	esi, esp
	push	0
	push	17					; 00000011H
	lea	eax, DWORD PTR _ddsdSrc$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _lpDDS$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _lpDDS$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+100]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ddrval$[ebp], eax

; 4822 :     if (ddrval != DD_OK) { DDERRCHK(ddrval); return; }

	cmp	DWORD PTR _ddrval$[ebp], 0
	je	SHORT $LN10@PutSpriteL
	mov	eax, DWORD PTR ?__LINE__Var@?0??__PutSpriteLockFast16@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA
	add	eax, 11					; 0000000bH
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _ddrval$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
	jmp	$LN1@PutSpriteL
$LN10@PutSpriteL:

; 4823 :     
; 4824 :     //// ¸ñÀûÇ¥¸éÀÇ RECT
; 4825 :     RECT rcDest = { x, y, x+ddsdSrc.dwWidth, y+ddsdSrc.dwHeight };

	mov	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR _rcDest$[ebp], eax
	mov	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _rcDest$[ebp+4], eax
	mov	eax, DWORD PTR _x$[ebp]
	add	eax, DWORD PTR _ddsdSrc$[ebp+12]
	mov	DWORD PTR _rcDest$[ebp+8], eax
	mov	eax, DWORD PTR _y$[ebp]
	add	eax, DWORD PTR _ddsdSrc$[ebp+8]
	mov	DWORD PTR _rcDest$[ebp+12], eax

; 4826 : 
; 4827 : 	//// ¸ñÀûÇ¥¸é Lock
; 4828 : 	ZeroMemory(&ddsdDst, sizeof(ddsdDst));	

	push	124					; 0000007cH
	push	0
	lea	eax, DWORD PTR _ddsdDst$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 4829 : 	ddsdDst.dwSize = sizeof(ddsdDst);

	mov	DWORD PTR _ddsdDst$[ebp], 124		; 0000007cH

; 4830 : 	ddrval = g_pDDSBack->Lock(&rcDest, &ddsdDst, DDLOCK_WRITEONLY|DDLOCK_WAIT, NULL);

	mov	esi, esp
	push	0
	push	33					; 00000021H
	lea	eax, DWORD PTR _ddsdDst$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rcDest$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	push	ecx
	mov	edx, DWORD PTR [eax+100]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ddrval$[ebp], eax

; 4831 :     if (ddrval != DD_OK)

	cmp	DWORD PTR _ddrval$[ebp], 0
	je	SHORT $LN11@PutSpriteL

; 4832 :     {
; 4833 :     	//// ¼Ò½ºÇ¥¸éÀº Lock »óÅÂÀÌ¹Ç·Î Unlock
; 4834 :         lpDDS->Unlock(NULL);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _lpDDS$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _lpDDS$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+128]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 4835 :         DDERRCHK(ddrval);     

	mov	eax, DWORD PTR ?__LINE__Var@?0??__PutSpriteLockFast16@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA
	add	eax, 24					; 00000018H
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _ddrval$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH

; 4836 :         return;

	jmp	$LN1@PutSpriteL
$LN11@PutSpriteL:

; 4837 :     }
; 4838 : 
; 4839 : 	//// Ç¥¸éÀÇ ÁÖ¼Ò
; 4840 : 	DWORD* lpDDSSrc = (DWORD*) ddsdSrc.lpSurface;

	mov	eax, DWORD PTR _ddsdSrc$[ebp+36]
	mov	DWORD PTR _lpDDSSrc$[ebp], eax

; 4841 : 	DWORD* lpDDSDst = (DWORD*) ddsdDst.lpSurface;

	mov	eax, DWORD PTR _ddsdDst$[ebp+36]
	mov	DWORD PTR _lpDDSDst$[ebp], eax

; 4842 : 	WORD*  lpDDSDstTemp;
; 4843 : 
; 4844 : 	//// ¼Ò½ºÇ¥¸éÀÇ ÄÃ·¯Å° ÂüÁ¶
; 4845 : 	DWORD dwColorSpaceLowValue = ddsdSrc.ddckCKSrcBlt.dwColorSpaceLowValue;	

	mov	eax, DWORD PTR _ddsdSrc$[ebp+64]
	mov	DWORD PTR _dwColorSpaceLowValue$[ebp], eax

; 4846 : 	
; 4847 : 	DWORD dwSrcPitch = ddsdSrc.lPitch >> 2; // 4¹ÙÀÌÆ® Á¤·Ä, /4

	mov	eax, DWORD PTR _ddsdSrc$[ebp+16]
	sar	eax, 2
	mov	DWORD PTR _dwSrcPitch$[ebp], eax

; 4848 : 	DWORD dwDstPitch = ddsdDst.lPitch >> 2;

	mov	eax, DWORD PTR _ddsdDst$[ebp+16]
	sar	eax, 2
	mov	DWORD PTR _dwDstPitch$[ebp], eax

; 4849 : 	DWORD dwWidth  = ddsdSrc.dwWidth >> 1;   // 2°³ÀÇ ÇÈ¼¿À» ÀÐÀ¸¹Ç·Î /2

	mov	eax, DWORD PTR _ddsdSrc$[ebp+12]
	shr	eax, 1
	mov	DWORD PTR _dwWidth$[ebp], eax

; 4850 : 	
; 4851 : 	//// BPP
; 4852 : 	switch(g_dwRGBBitCount)

	mov	eax, DWORD PTR ?g_dwRGBBitCount@@3KA	; g_dwRGBBitCount
	mov	DWORD PTR tv137[ebp], eax
	cmp	DWORD PTR tv137[ebp], 16		; 00000010H
	je	SHORT $LN12@PutSpriteL
	jmp	$LN2@PutSpriteL
$LN12@PutSpriteL:

; 4853 : 	{
; 4854 : 	case 16 :
; 4855 : 		{
; 4856 : 			//// µÎ°³ÀÇ ÇÈ¼¿¿¡ ´ëÇÑ ÄÃ·¯Å° °ªÀ» ±¸ÇÑ´Ù. °í¼Ó ÆÇÁ¤À» À§ÇÑ OR ¿¬»ê
; 4857 : 			DWORD dwColorSpaceLowValueMixed = dwColorSpaceLowValue << 16 | dwColorSpaceLowValue;

	mov	eax, DWORD PTR _dwColorSpaceLowValue$[ebp]
	shl	eax, 16					; 00000010H
	or	eax, DWORD PTR _dwColorSpaceLowValue$[ebp]
	mov	DWORD PTR _dwColorSpaceLowValueMixed$1[ebp], eax

; 4858 : 	
; 4859 : 			if (g_dwPixelFormat == RGB565)

	cmp	DWORD PTR ?g_dwPixelFormat@@3KA, 565	; g_dwPixelFormat, 00000235H
	jne	$LN2@PutSpriteL

; 4860 : 			{
; 4861 : 				for (iy=0; iy < ddsdSrc.dwHeight; iy++)

	mov	DWORD PTR _iy$[ebp], 0
	jmp	SHORT $LN6@PutSpriteL
$LN4@PutSpriteL:
	mov	eax, DWORD PTR _iy$[ebp]
	add	eax, 1
	mov	DWORD PTR _iy$[ebp], eax
$LN6@PutSpriteL:
	mov	eax, DWORD PTR _iy$[ebp]
	cmp	eax, DWORD PTR _ddsdSrc$[ebp+8]
	jae	$LN2@PutSpriteL

; 4862 : 				{
; 4863 : 					for (ix=0; ix < dwWidth; ix++)

	mov	DWORD PTR _ix$[ebp], 0
	jmp	SHORT $LN9@PutSpriteL
$LN7@PutSpriteL:
	mov	eax, DWORD PTR _ix$[ebp]
	add	eax, 1
	mov	DWORD PTR _ix$[ebp], eax
$LN9@PutSpriteL:
	mov	eax, DWORD PTR _ix$[ebp]
	cmp	eax, DWORD PTR _dwWidth$[ebp]
	jae	$LN8@PutSpriteL

; 4864 : 					{
; 4865 : 						//// µÎ°³ÀÇ ÇÈ¼¿À» ¾ò¾î¿Â´Ù
; 4866 : 						//memcpy(&RGBRGB, lpDDSSrc+ix, 4);
; 4867 : 						RGBRGB = *(lpDDSSrc+ix);

	mov	eax, DWORD PTR _ix$[ebp]
	mov	ecx, DWORD PTR _lpDDSSrc$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _RGBRGB$[ebp], edx

; 4868 : 						
; 4869 : 						//// µÎ°³ÀÇ ÇÈ¼¿ÀÌ ÄÃ·¯Å°ÀÌ¸é ·çÇÁ¹Ýº¹ ( ´ÙÀ½ ÇÈ¼¿ ±×·ìÀ» ¾ò´Â´Ù )
; 4870 : 						if (RGBRGB == dwColorSpaceLowValueMixed) continue;	

	mov	eax, DWORD PTR _RGBRGB$[ebp]
	cmp	eax, DWORD PTR _dwColorSpaceLowValueMixed$1[ebp]
	jne	SHORT $LN15@PutSpriteL
	jmp	SHORT $LN7@PutSpriteL
$LN15@PutSpriteL:

; 4871 : 						
; 4872 : 						//// ÇÈ¼¿À» ºÐ¸®ÇÑ´Ù
; 4873 : 						sRGB1 = RGBRGB & 0x0000FFFF;

	mov	eax, DWORD PTR _RGBRGB$[ebp]
	and	eax, 65535				; 0000ffffH
	mov	DWORD PTR _sRGB1$[ebp], eax

; 4874 : 						sRGB2 = RGBRGB >> 16;

	mov	eax, DWORD PTR _RGBRGB$[ebp]
	shr	eax, 16					; 00000010H
	mov	DWORD PTR _sRGB2$[ebp], eax

; 4875 : 						
; 4876 : 						//// ¼Ò½ºÇ¥¸éÀÇ ÇÈ¼¿ sRGB1,2°¡ ÀÌ¹ÌÁöÀÎ °æ¿ì
; 4877 : 						if (sRGB1 != dwColorSpaceLowValue && sRGB2 != dwColorSpaceLowValue)

	mov	eax, DWORD PTR _sRGB1$[ebp]
	cmp	eax, DWORD PTR _dwColorSpaceLowValue$[ebp]
	je	SHORT $LN16@PutSpriteL
	mov	eax, DWORD PTR _sRGB2$[ebp]
	cmp	eax, DWORD PTR _dwColorSpaceLowValue$[ebp]
	je	SHORT $LN16@PutSpriteL

; 4878 : 						{
; 4879 : 							//memcpy(lpDDSDst+ix, &RGBRGB, 4);
; 4880 : 							*(lpDDSDst+ix) = RGBRGB;							

	mov	eax, DWORD PTR _ix$[ebp]
	mov	ecx, DWORD PTR _lpDDSDst$[ebp]
	mov	edx, DWORD PTR _RGBRGB$[ebp]
	mov	DWORD PTR [ecx+eax*4], edx
	jmp	SHORT $LN17@PutSpriteL
$LN16@PutSpriteL:

; 4881 : 						}						
; 4882 : 						//// ¼Ò½ºÇ¥¸éÀÇ ÇÈ¼¿ sRGB1ÀÌ ÀÌ¹ÌÁö ÇÈ¼¿ÀÎ °æ¿ì
; 4883 : 						// else if (sRGB1 != dwColorSpaceLowValue && sRGB2 == dwColorSpaceLowValue )
; 4884 : 						else if (sRGB1 != dwColorSpaceLowValue)						

	mov	eax, DWORD PTR _sRGB1$[ebp]
	cmp	eax, DWORD PTR _dwColorSpaceLowValue$[ebp]
	je	SHORT $LN18@PutSpriteL

; 4885 : 						{							
; 4886 : 							lpDDSDstTemp = (WORD*)(lpDDSDst+ix);

	mov	eax, DWORD PTR _ix$[ebp]
	mov	ecx, DWORD PTR _lpDDSDst$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _lpDDSDstTemp$[ebp], edx

; 4887 : 							*lpDDSDstTemp = (WORD)sRGB1;							

	mov	eax, DWORD PTR _lpDDSDstTemp$[ebp]
	mov	cx, WORD PTR _sRGB1$[ebp]
	mov	WORD PTR [eax], cx

; 4888 : 						}
; 4889 : 						//// ¼Ò½ºÇ¥¸éÀÇ ÇÈ¼¿ sRGB1ÀÌ ÀÌ¹ÌÁö ÇÈ¼¿ÀÎ °æ¿ì
; 4890 : 						// else if (sRGB1 == dwColorSpaceLowValue && sRGB2 != dwColorSpaceLowValue )
; 4891 : 						// else if (sRGB2 != dwColorSpaceLowValue)
; 4892 : 						else 

	jmp	SHORT $LN17@PutSpriteL
$LN18@PutSpriteL:

; 4893 : 						{
; 4894 : 							lpDDSDstTemp = (WORD*)(lpDDSDst+ix);

	mov	eax, DWORD PTR _ix$[ebp]
	mov	ecx, DWORD PTR _lpDDSDst$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _lpDDSDstTemp$[ebp], edx

; 4895 : 							*(lpDDSDstTemp+1) = (WORD)sRGB2;

	mov	eax, DWORD PTR _lpDDSDstTemp$[ebp]
	mov	cx, WORD PTR _sRGB2$[ebp]
	mov	WORD PTR [eax+2], cx
$LN17@PutSpriteL:

; 4896 : 						}				
; 4897 : 					}					

	jmp	$LN7@PutSpriteL
$LN8@PutSpriteL:

; 4898 : 					lpDDSSrc += dwSrcPitch;

	mov	eax, DWORD PTR _dwSrcPitch$[ebp]
	mov	ecx, DWORD PTR _lpDDSSrc$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _lpDDSSrc$[ebp], edx

; 4899 : 					lpDDSDst += dwDstPitch;

	mov	eax, DWORD PTR _dwDstPitch$[ebp]
	mov	ecx, DWORD PTR _lpDDSDst$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _lpDDSDst$[ebp], edx

; 4900 : 				}

	jmp	$LN4@PutSpriteL
$LN2@PutSpriteL:

; 4901 : 			}	
; 4902 : 			else if (g_dwPixelFormat == BGR565)
; 4903 : 			{
; 4904 : 			}
; 4905 : 			else if (g_dwPixelFormat == RGB555)
; 4906 : 			{
; 4907 : 			}
; 4908 : 			break;
; 4909 : 		}
; 4910 : 	case 24 :
; 4911 : 	case 32 : break;
; 4912 : 	}	
; 4913 : 	
; 4914 : 	//// Ç¥¸é Unlock
; 4915 :     g_pDDSBack->Unlock(&rcDest);

	mov	esi, esp
	lea	eax, DWORD PTR _rcDest$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	push	eax
	mov	ecx, DWORD PTR [edx+128]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 4916 :     lpDDS->Unlock(NULL);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _lpDDS$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _lpDDS$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+128]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@PutSpriteL:

; 4917 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN29@PutSpriteL
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 656				; 00000290H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN29@PutSpriteL:
	DD	3
	DD	$LN28@PutSpriteL
$LN28@PutSpriteL:
	DD	-192					; ffffff40H
	DD	124					; 0000007cH
	DD	$LN25@PutSpriteL
	DD	-324					; fffffebcH
	DD	124					; 0000007cH
	DD	$LN26@PutSpriteL
	DD	-360					; fffffe98H
	DD	16					; 00000010H
	DD	$LN27@PutSpriteL
$LN27@PutSpriteL:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN26@PutSpriteL:
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	100					; 00000064H
	DB	68					; 00000044H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN25@PutSpriteL:
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	100					; 00000064H
	DB	83					; 00000053H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
?__PutSpriteLockFast16@@YAXPAUIDirectDrawSurface7@@HH@Z ENDP ; __PutSpriteLockFast16
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__PutSpriteEx@@YAXPAUIDirectDrawSurface7@@HH@Z
_TEXT	SEGMENT
_ddrval$ = -216						; size = 4
_nOverSize$1 = -204					; size = 4
_nOverSize$2 = -192					; size = 4
_rcSrc$ = -180						; size = 16
_rcDst$ = -156						; size = 16
_ddsd$ = -132						; size = 124
__$ArrayPad$ = -4					; size = 4
_lpDDS$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
?__PutSpriteEx@@YAXPAUIDirectDrawSurface7@@HH@Z PROC	; __PutSpriteEx, COMDAT

; 4978 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 412				; 0000019cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-412]
	mov	ecx, 103				; 00000067H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 4979 : 	//// Ç¥¸éÀÇ Å©±â Á¤º¸¸¦ ¾ò´Â´Ù ( ÀÓ½ÃÄÚµå )
; 4980 : 	DDSURFACEDESC2 ddsd;
; 4981 :     ddsd.dwSize = sizeof(ddsd);

	mov	DWORD PTR _ddsd$[ebp], 124		; 0000007cH

; 4982 :     //ddsd.dwFlags = DDSD_HEIGHT | DDSD_WIDTH;
; 4983 : 	lpDDS->GetSurfaceDesc(&ddsd);

	mov	esi, esp
	lea	eax, DWORD PTR _ddsd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpDDS$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _lpDDS$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+88]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 4984 : 
; 4985 : 	//// ½ºÅ©¸°ÁÂÇ¥ÀÇ RECT¸¦ ±¸ÇÑ´Ù
; 4986 : 	RECT rcDst = { x, y, x+ddsd.dwWidth, y+ddsd.dwHeight };

	mov	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR _rcDst$[ebp], eax
	mov	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _rcDst$[ebp+4], eax
	mov	eax, DWORD PTR _x$[ebp]
	add	eax, DWORD PTR _ddsd$[ebp+12]
	mov	DWORD PTR _rcDst$[ebp+8], eax
	mov	eax, DWORD PTR _y$[ebp]
	add	eax, DWORD PTR _ddsd$[ebp+8]
	mov	DWORD PTR _rcDst$[ebp+12], eax

; 4987 : 	RECT rcSrc = { 0, 0, ddsd.dwWidth, ddsd.dwHeight };

	mov	DWORD PTR _rcSrc$[ebp], 0
	mov	DWORD PTR _rcSrc$[ebp+4], 0
	mov	eax, DWORD PTR _ddsd$[ebp+12]
	mov	DWORD PTR _rcSrc$[ebp+8], eax
	mov	eax, DWORD PTR _ddsd$[ebp+8]
	mov	DWORD PTR _rcSrc$[ebp+12], eax

; 4988 : 
; 4989 : 	//// ½ºÅ©¸° ¹ÛÀ¸·Î ³ª°¡¸é Ãâ·ÂÇÏÁö ¾Ê´Â´Ù
; 4990 : 	if (x >= HRES || y >= VRES) return;

	cmp	DWORD PTR _x$[ebp], 1024		; 00000400H
	jge	SHORT $LN3@PutSpriteE
	cmp	DWORD PTR _y$[ebp], 768			; 00000300H
	jl	SHORT $LN2@PutSpriteE
$LN3@PutSpriteE:
	jmp	$LN1@PutSpriteE
$LN2@PutSpriteE:

; 4991 : 	if (rcDst.right <= 0 || rcDst.bottom <= 0) return;

	cmp	DWORD PTR _rcDst$[ebp+8], 0
	jle	SHORT $LN5@PutSpriteE
	cmp	DWORD PTR _rcDst$[ebp+12], 0
	jg	SHORT $LN4@PutSpriteE
$LN5@PutSpriteE:
	jmp	$LN1@PutSpriteE
$LN4@PutSpriteE:

; 4992 : 	
; 4993 : 	//// ½ºÇÁ¶óÀÌÆ®°¡ ½ºÅ©¸° ¹ÛÀ¸·Î ³ª°£ ¸¸Å­ Ãâ·ÂÇÏÁö ¾Ê´Â´Ù
; 4994 : 	//// ¿ÀÇÁ ½ºÅ©¸°ÀÇ »ç°¢¿µ¿ªÀ» °¨¼Ò ½ÃÄÑ Å¬¸®ÇÎÀ» ±¸ÇöÇÑ´Ù	
; 4995 : 
; 4996 : 	//// ¼öÆò º¸Á¤
; 4997 : 	if (x < 0)

	cmp	DWORD PTR _x$[ebp], 0
	jge	SHORT $LN6@PutSpriteE

; 4998 : 	{
; 4999 : 		// ÁÂº¯À» ÁÙÀÎ´Ù. rcSrc.left += ³Ñ¾î°£ Å©±â, abs(x)
; 5000 : 		rcSrc.left -= x;

	mov	eax, DWORD PTR _rcSrc$[ebp]
	sub	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR _rcSrc$[ebp], eax

; 5001 : 		rcDst.left=x=0;

	mov	DWORD PTR _x$[ebp], 0
	mov	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR _rcDst$[ebp], eax
	jmp	SHORT $LN7@PutSpriteE
$LN6@PutSpriteE:

; 5002 : 	}
; 5003 : 	else if (rcDst.right >= HRES)

	cmp	DWORD PTR _rcDst$[ebp+8], 1024		; 00000400H
	jl	SHORT $LN7@PutSpriteE

; 5004 : 	{
; 5005 : 		// ¿ìº¯À» ÁÙÀÎ´Ù. rcSrc.right -= ³Ñ¾î°£ Å©±â
; 5006 : 		int nOverSize = (rcDst.right - HRES);		

	mov	eax, DWORD PTR _rcDst$[ebp+8]
	sub	eax, 1024				; 00000400H
	mov	DWORD PTR _nOverSize$2[ebp], eax

; 5007 : 		rcSrc.right -= nOverSize;

	mov	eax, DWORD PTR _rcSrc$[ebp+8]
	sub	eax, DWORD PTR _nOverSize$2[ebp]
	mov	DWORD PTR _rcSrc$[ebp+8], eax

; 5008 : 		rcDst.right -= nOverSize;

	mov	eax, DWORD PTR _rcDst$[ebp+8]
	sub	eax, DWORD PTR _nOverSize$2[ebp]
	mov	DWORD PTR _rcDst$[ebp+8], eax
$LN7@PutSpriteE:

; 5009 : 	}
; 5010 : 	//// ¼öÁ÷ º¸Á¤
; 5011 : 	if (y < 0)

	cmp	DWORD PTR _y$[ebp], 0
	jge	SHORT $LN9@PutSpriteE

; 5012 : 	{
; 5013 : 		// »óº¯À» ÁÙÀÎ´Ù. rcSrc.top += ³Ñ¾î°£ Å©±â, abs(y)
; 5014 : 		rcSrc.top -= y;

	mov	eax, DWORD PTR _rcSrc$[ebp+4]
	sub	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _rcSrc$[ebp+4], eax

; 5015 : 		rcDst.top=y=0;		

	mov	DWORD PTR _y$[ebp], 0
	mov	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _rcDst$[ebp+4], eax
	jmp	SHORT $LN10@PutSpriteE
$LN9@PutSpriteE:

; 5016 : 	}
; 5017 : 	else if (rcDst.bottom >= VRES )

	cmp	DWORD PTR _rcDst$[ebp+12], 768		; 00000300H
	jl	SHORT $LN10@PutSpriteE

; 5018 : 	{
; 5019 : 		// ÇÏº¯À» ÁÙÀÎ´Ù. rcSrc.bottom -= ³Ñ¾î°£ Å©±â 
; 5020 : 		int nOverSize = (rcDst.bottom - VRES);

	mov	eax, DWORD PTR _rcDst$[ebp+12]
	sub	eax, 768				; 00000300H
	mov	DWORD PTR _nOverSize$1[ebp], eax

; 5021 : 		rcSrc.bottom -= nOverSize;

	mov	eax, DWORD PTR _rcSrc$[ebp+12]
	sub	eax, DWORD PTR _nOverSize$1[ebp]
	mov	DWORD PTR _rcSrc$[ebp+12], eax

; 5022 : 		rcDst.bottom -= nOverSize;

	mov	eax, DWORD PTR _rcDst$[ebp+12]
	sub	eax, DWORD PTR _nOverSize$1[ebp]
	mov	DWORD PTR _rcDst$[ebp+12], eax
$LN10@PutSpriteE:

; 5023 : 	}
; 5024 : 
; 5025 : 	HRESULT ddrval = g_pDDSBack->Blt(&rcDst, lpDDS, &rcSrc, DDBLT_KEYSRC|DDBLT_WAIT, NULL);

	mov	esi, esp
	push	0
	push	16809984				; 01008000H
	lea	eax, DWORD PTR _rcSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpDDS$[ebp]
	push	ecx
	lea	edx, DWORD PTR _rcDst$[ebp]
	push	edx
	mov	eax, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	push	edx
	mov	eax, DWORD PTR [ecx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ddrval$[ebp], eax

; 5026 : 	if (ddrval != DD_OK) DDERRCHK(ddrval);

	cmp	DWORD PTR _ddrval$[ebp], 0
	je	SHORT $LN1@PutSpriteE
	mov	eax, DWORD PTR ?__LINE__Var@?0??__PutSpriteEx@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA
	add	eax, 48					; 00000030H
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _ddrval$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
$LN1@PutSpriteE:

; 5027 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@PutSpriteE
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 412				; 0000019cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN18@PutSpriteE:
	DD	3
	DD	$LN17@PutSpriteE
$LN17@PutSpriteE:
	DD	-132					; ffffff7cH
	DD	124					; 0000007cH
	DD	$LN14@PutSpriteE
	DD	-156					; ffffff64H
	DD	16					; 00000010H
	DD	$LN15@PutSpriteE
	DD	-180					; ffffff4cH
	DD	16					; 00000010H
	DD	$LN16@PutSpriteE
$LN16@PutSpriteE:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	83					; 00000053H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
$LN15@PutSpriteE:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	68					; 00000044H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN14@PutSpriteE:
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	100					; 00000064H
	DB	0
?__PutSpriteEx@@YAXPAUIDirectDrawSurface7@@HH@Z ENDP	; __PutSpriteEx
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__PutImageEx@@YAXPAUIDirectDrawSurface7@@HH@Z
_TEXT	SEGMENT
_ddrval$ = -216						; size = 4
_nOverSize$1 = -204					; size = 4
_nOverSize$2 = -192					; size = 4
_rcSrc$ = -180						; size = 16
_rcDst$ = -156						; size = 16
_ddsd$ = -132						; size = 124
__$ArrayPad$ = -4					; size = 4
_lpDDS$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
?__PutImageEx@@YAXPAUIDirectDrawSurface7@@HH@Z PROC	; __PutImageEx, COMDAT

; 4926 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 412				; 0000019cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-412]
	mov	ecx, 103				; 00000067H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 4927 : 	//// Ç¥¸éÀÇ Å©±â Á¤º¸¸¦ ¾ò´Â´Ù ( ÀÓ½ÃÄÚµå )
; 4928 : 	DDSURFACEDESC2 ddsd;
; 4929 :     ddsd.dwSize = sizeof(ddsd);

	mov	DWORD PTR _ddsd$[ebp], 124		; 0000007cH

; 4930 :     //ddsd.dwFlags = DDSD_HEIGHT | DDSD_WIDTH;
; 4931 : 	lpDDS->GetSurfaceDesc(&ddsd);

	mov	esi, esp
	lea	eax, DWORD PTR _ddsd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpDDS$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _lpDDS$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+88]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 4932 : 
; 4933 : 	//// ½ºÅ©¸°ÁÂÇ¥ÀÇ RECT¸¦ ±¸ÇÑ´Ù
; 4934 : 	RECT rcDst = { x, y, x+ddsd.dwWidth, y+ddsd.dwHeight };

	mov	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR _rcDst$[ebp], eax
	mov	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _rcDst$[ebp+4], eax
	mov	eax, DWORD PTR _x$[ebp]
	add	eax, DWORD PTR _ddsd$[ebp+12]
	mov	DWORD PTR _rcDst$[ebp+8], eax
	mov	eax, DWORD PTR _y$[ebp]
	add	eax, DWORD PTR _ddsd$[ebp+8]
	mov	DWORD PTR _rcDst$[ebp+12], eax

; 4935 : 	RECT rcSrc = { 0, 0, ddsd.dwWidth, ddsd.dwHeight };

	mov	DWORD PTR _rcSrc$[ebp], 0
	mov	DWORD PTR _rcSrc$[ebp+4], 0
	mov	eax, DWORD PTR _ddsd$[ebp+12]
	mov	DWORD PTR _rcSrc$[ebp+8], eax
	mov	eax, DWORD PTR _ddsd$[ebp+8]
	mov	DWORD PTR _rcSrc$[ebp+12], eax

; 4936 : 
; 4937 : 	//// ½ºÅ©¸° ¹ÛÀ¸·Î ³ª°¡¸é Ãâ·ÂÇÏÁö ¾Ê´Â´Ù
; 4938 : 	if (x >= HRES || y >= VRES) return;

	cmp	DWORD PTR _x$[ebp], 1024		; 00000400H
	jge	SHORT $LN3@PutImageEx
	cmp	DWORD PTR _y$[ebp], 768			; 00000300H
	jl	SHORT $LN2@PutImageEx
$LN3@PutImageEx:
	jmp	$LN1@PutImageEx
$LN2@PutImageEx:

; 4939 : 	if (rcDst.right <= 0 || rcDst.bottom <= 0) return;

	cmp	DWORD PTR _rcDst$[ebp+8], 0
	jle	SHORT $LN5@PutImageEx
	cmp	DWORD PTR _rcDst$[ebp+12], 0
	jg	SHORT $LN4@PutImageEx
$LN5@PutImageEx:
	jmp	$LN1@PutImageEx
$LN4@PutImageEx:

; 4940 : 	
; 4941 : 	//// ½ºÇÁ¶óÀÌÆ®°¡ ½ºÅ©¸° ¹ÛÀ¸·Î ³ª°£ ¸¸Å­ Ãâ·ÂÇÏÁö ¾Ê´Â´Ù
; 4942 : 	//// ¿ÀÇÁ ½ºÅ©¸°ÀÇ »ç°¢¿µ¿ªÀ» °¨¼Ò ½ÃÄÑ Å¬¸®ÇÎÀ» ±¸ÇöÇÑ´Ù	
; 4943 : 
; 4944 : 	//// ¼öÆò º¸Á¤
; 4945 : 	if (x < 0)

	cmp	DWORD PTR _x$[ebp], 0
	jge	SHORT $LN6@PutImageEx

; 4946 : 	{
; 4947 : 		// ÁÂº¯À» ÁÙÀÎ´Ù. rcSrc.left += ³Ñ¾î°£ Å©±â, abs(x)
; 4948 : 		rcSrc.left -= x;

	mov	eax, DWORD PTR _rcSrc$[ebp]
	sub	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR _rcSrc$[ebp], eax

; 4949 : 		rcDst.left=x=0;		

	mov	DWORD PTR _x$[ebp], 0
	mov	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR _rcDst$[ebp], eax
	jmp	SHORT $LN7@PutImageEx
$LN6@PutImageEx:

; 4950 : 	}
; 4951 : 	else if (rcDst.right >= HRES)

	cmp	DWORD PTR _rcDst$[ebp+8], 1024		; 00000400H
	jl	SHORT $LN7@PutImageEx

; 4952 : 	{
; 4953 : 		// ¿ìº¯À» ÁÙÀÎ´Ù. rcSrc.right -= ³Ñ¾î°£ Å©±â
; 4954 : 		int nOverSize = (rcDst.right - HRES);		

	mov	eax, DWORD PTR _rcDst$[ebp+8]
	sub	eax, 1024				; 00000400H
	mov	DWORD PTR _nOverSize$2[ebp], eax

; 4955 : 		rcSrc.right -= nOverSize;

	mov	eax, DWORD PTR _rcSrc$[ebp+8]
	sub	eax, DWORD PTR _nOverSize$2[ebp]
	mov	DWORD PTR _rcSrc$[ebp+8], eax

; 4956 : 		rcDst.right -= nOverSize;

	mov	eax, DWORD PTR _rcDst$[ebp+8]
	sub	eax, DWORD PTR _nOverSize$2[ebp]
	mov	DWORD PTR _rcDst$[ebp+8], eax
$LN7@PutImageEx:

; 4957 : 	}
; 4958 : 	//// ¼öÁ÷ º¸Á¤
; 4959 : 	if (y < 0)

	cmp	DWORD PTR _y$[ebp], 0
	jge	SHORT $LN9@PutImageEx

; 4960 : 	{
; 4961 : 		// »óº¯À» ÁÙÀÎ´Ù. rcSrc.top += ³Ñ¾î°£ Å©±â, abs(y)
; 4962 : 		rcSrc.top -= y;

	mov	eax, DWORD PTR _rcSrc$[ebp+4]
	sub	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _rcSrc$[ebp+4], eax

; 4963 : 		rcDst.top=y=0;		

	mov	DWORD PTR _y$[ebp], 0
	mov	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _rcDst$[ebp+4], eax
	jmp	SHORT $LN10@PutImageEx
$LN9@PutImageEx:

; 4964 : 	}
; 4965 : 	else if (rcDst.bottom >= VRES )

	cmp	DWORD PTR _rcDst$[ebp+12], 768		; 00000300H
	jl	SHORT $LN10@PutImageEx

; 4966 : 	{
; 4967 : 		// ÇÏº¯À» ÁÙÀÎ´Ù. rcSrc.bottom -= ³Ñ¾î°£ Å©±â 
; 4968 : 		int nOverSize = (rcDst.bottom - VRES);

	mov	eax, DWORD PTR _rcDst$[ebp+12]
	sub	eax, 768				; 00000300H
	mov	DWORD PTR _nOverSize$1[ebp], eax

; 4969 : 		rcSrc.bottom -= nOverSize;

	mov	eax, DWORD PTR _rcSrc$[ebp+12]
	sub	eax, DWORD PTR _nOverSize$1[ebp]
	mov	DWORD PTR _rcSrc$[ebp+12], eax

; 4970 : 		rcDst.bottom -= nOverSize;

	mov	eax, DWORD PTR _rcDst$[ebp+12]
	sub	eax, DWORD PTR _nOverSize$1[ebp]
	mov	DWORD PTR _rcDst$[ebp+12], eax
$LN10@PutImageEx:

; 4971 : 	}
; 4972 : 
; 4973 : 	HRESULT ddrval = g_pDDSBack->Blt(&rcDst, lpDDS, &rcSrc, DDBLT_WAIT, NULL);

	mov	esi, esp
	push	0
	push	16777216				; 01000000H
	lea	eax, DWORD PTR _rcSrc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpDDS$[ebp]
	push	ecx
	lea	edx, DWORD PTR _rcDst$[ebp]
	push	edx
	mov	eax, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	push	edx
	mov	eax, DWORD PTR [ecx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ddrval$[ebp], eax

; 4974 : 	if (ddrval != DD_OK) DDERRCHK(ddrval);

	cmp	DWORD PTR _ddrval$[ebp], 0
	je	SHORT $LN1@PutImageEx
	mov	eax, DWORD PTR ?__LINE__Var@?0??__PutImageEx@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA
	add	eax, 48					; 00000030H
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _ddrval$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
$LN1@PutImageEx:

; 4975 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@PutImageEx
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 412				; 0000019cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN18@PutImageEx:
	DD	3
	DD	$LN17@PutImageEx
$LN17@PutImageEx:
	DD	-132					; ffffff7cH
	DD	124					; 0000007cH
	DD	$LN14@PutImageEx
	DD	-156					; ffffff64H
	DD	16					; 00000010H
	DD	$LN15@PutImageEx
	DD	-180					; ffffff4cH
	DD	16					; 00000010H
	DD	$LN16@PutImageEx
$LN16@PutImageEx:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	83					; 00000053H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
$LN15@PutImageEx:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	68					; 00000044H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN14@PutImageEx:
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	100					; 00000064H
	DB	0
?__PutImageEx@@YAXPAUIDirectDrawSurface7@@HH@Z ENDP	; __PutImageEx
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__PutSpriteLock32@@YAXPAUIDirectDrawSurface7@@HH@Z
_TEXT	SEGMENT
_ix$1 = -264						; size = 4
_iy$2 = -252						; size = 4
_dwDstPitch$ = -240					; size = 4
_dwSrcPitch$ = -228					; size = 4
_dwSrc$ = -216						; size = 4
_dwSrcColorKey$ = -204					; size = 4
_nHeight$ = -192					; size = 4
_nWidth$ = -180						; size = 4
_lpDst$ = -168						; size = 4
_lpSrc$ = -156						; size = 4
_ddsdSrc$ = -144					; size = 124
_hRet$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_lpDDS$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
?__PutSpriteLock32@@YAXPAUIDirectDrawSurface7@@HH@Z PROC ; __PutSpriteLock32, COMDAT

; 4757 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 460				; 000001ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-460]
	mov	ecx, 115				; 00000073H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 4758 : 	HRESULT hRet;
; 4759 : 	DDSURFACEDESC2 ddsdSrc;
; 4760 : 
; 4761 : 	memset(&ddsdSrc, 0, sizeof(ddsdSrc));

	push	124					; 0000007cH
	push	0
	lea	eax, DWORD PTR _ddsdSrc$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 4762 : 	ddsdSrc.dwSize = sizeof(ddsdSrc);

	mov	DWORD PTR _ddsdSrc$[ebp], 124		; 0000007cH

; 4763 : 	ddsdSrc.dwFlags = DDSD_CKSRCBLT;

	mov	DWORD PTR _ddsdSrc$[ebp+4], 65536	; 00010000H

; 4764 : 
; 4765 : 	hRet = lpDDS->Lock(NULL, &ddsdSrc, DDLOCK_READONLY|DDLOCK_WAIT, NULL);

	mov	esi, esp
	push	0
	push	17					; 00000011H
	lea	eax, DWORD PTR _ddsdSrc$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _lpDDS$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _lpDDS$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+100]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hRet$[ebp], eax

; 4766 : 	if (hRet != DD_OK) { DDERRCHK(hRet); return; }

	cmp	DWORD PTR _hRet$[ebp], 0
	je	SHORT $LN8@PutSpriteL
	mov	eax, DWORD PTR ?__LINE__Var@?0??__PutSpriteLock32@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA
	add	eax, 9
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _hRet$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
	jmp	$LN1@PutSpriteL
$LN8@PutSpriteL:

; 4767 : 	
; 4768 : 	//// ÀÌ¹ÌÁö Ç¥¸é ÁÖ¼Ò
; 4769 : 	DWORD* lpSrc = (DWORD*) ddsdSrc.lpSurface;

	mov	eax, DWORD PTR _ddsdSrc$[ebp+36]
	mov	DWORD PTR _lpSrc$[ebp], eax

; 4770 : 	
; 4771 : 	//// 2Â÷ Ç¥¸é ÁÖ¼Ò ( Àü¿ª ) , ( *4 )
; 4772 : 	DWORD* lpDst = (DWORD*) ((LPBYTE)g_ddsd.lpSurface + y*g_ddsd.lPitch+(x << 2));

	mov	eax, DWORD PTR _y$[ebp]
	imul	eax, DWORD PTR ?g_ddsd@@3U_DDSURFACEDESC2@@A+16
	add	eax, DWORD PTR ?g_ddsd@@3U_DDSURFACEDESC2@@A+36
	mov	ecx, DWORD PTR _x$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR _lpDst$[ebp], edx

; 4773 : 
; 4774 : 	int nWidth  = ddsdSrc.dwWidth;

	mov	eax, DWORD PTR _ddsdSrc$[ebp+12]
	mov	DWORD PTR _nWidth$[ebp], eax

; 4775 : 	int nHeight = ddsdSrc.dwHeight;

	mov	eax, DWORD PTR _ddsdSrc$[ebp+8]
	mov	DWORD PTR _nHeight$[ebp], eax

; 4776 : 	
; 4777 : 	//// ÄÃ·¯Å°
; 4778 : 	DWORD dwSrcColorKey = ddsdSrc.ddckCKSrcBlt.dwColorSpaceLowValue;

	mov	eax, DWORD PTR _ddsdSrc$[ebp+64]
	mov	DWORD PTR _dwSrcColorKey$[ebp], eax

; 4779 : 	DWORD dwSrc=0;

	mov	DWORD PTR _dwSrc$[ebp], 0

; 4780 : 
; 4781 : 	//// DWORD ´ÜÀ§·Î ÁÖ¼Ò°¡ Áõ°¡ µÇ¹Ç·Î RShift ( /4)
; 4782 : 	DWORD dwSrcPitch = ddsdSrc.lPitch >> 2;

	mov	eax, DWORD PTR _ddsdSrc$[ebp+16]
	sar	eax, 2
	mov	DWORD PTR _dwSrcPitch$[ebp], eax

; 4783 : 	DWORD dwDstPitch = g_ddsd.lPitch >> 2;

	mov	eax, DWORD PTR ?g_ddsd@@3U_DDSURFACEDESC2@@A+16
	sar	eax, 2
	mov	DWORD PTR _dwDstPitch$[ebp], eax

; 4784 : 
; 4785 : 	//// ·çÇÁ³»¿¡¼­´Â ÃÖ´ëÇÑ ¿¬»êÀ» ÃÖ¼ÒÈ­ÇÑ´Ù	
; 4786 : 	for (int iy=0; iy < nHeight; iy++)

	mov	DWORD PTR _iy$2[ebp], 0
	jmp	SHORT $LN4@PutSpriteL
$LN2@PutSpriteL:
	mov	eax, DWORD PTR _iy$2[ebp]
	add	eax, 1
	mov	DWORD PTR _iy$2[ebp], eax
$LN4@PutSpriteL:
	mov	eax, DWORD PTR _iy$2[ebp]
	cmp	eax, DWORD PTR _nHeight$[ebp]
	jge	$LN3@PutSpriteL

; 4787 : 	{
; 4788 : 		for (int ix=0; ix < nWidth; ix++)

	mov	DWORD PTR _ix$1[ebp], 0
	jmp	SHORT $LN7@PutSpriteL
$LN5@PutSpriteL:
	mov	eax, DWORD PTR _ix$1[ebp]
	add	eax, 1
	mov	DWORD PTR _ix$1[ebp], eax
$LN7@PutSpriteL:
	mov	eax, DWORD PTR _ix$1[ebp]
	cmp	eax, DWORD PTR _nWidth$[ebp]
	jge	SHORT $LN6@PutSpriteL

; 4789 : 		{
; 4790 : 			//// ¾ËÆÄ °ª ¶Ç´Â ÃÖ»óÀ§ 8ºñÆ®´Â ¹«½ÃÇÑ´Ù, ARGB
; 4791 : 			dwSrc = *(lpSrc+ix) & 0x00FFFFFF;

	mov	eax, DWORD PTR _ix$1[ebp]
	mov	ecx, DWORD PTR _lpSrc$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	and	edx, 16777215				; 00ffffffH
	mov	DWORD PTR _dwSrc$[ebp], edx

; 4792 : 			if (dwSrc != dwSrcColorKey)

	mov	eax, DWORD PTR _dwSrc$[ebp]
	cmp	eax, DWORD PTR _dwSrcColorKey$[ebp]
	je	SHORT $LN9@PutSpriteL

; 4793 : 			{
; 4794 : 				*(lpDst+ix) = dwSrc;

	mov	eax, DWORD PTR _ix$1[ebp]
	mov	ecx, DWORD PTR _lpDst$[ebp]
	mov	edx, DWORD PTR _dwSrc$[ebp]
	mov	DWORD PTR [ecx+eax*4], edx
$LN9@PutSpriteL:

; 4795 : 			}
; 4796 : 		}

	jmp	SHORT $LN5@PutSpriteL
$LN6@PutSpriteL:

; 4797 : 		lpSrc += dwSrcPitch;

	mov	eax, DWORD PTR _dwSrcPitch$[ebp]
	mov	ecx, DWORD PTR _lpSrc$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _lpSrc$[ebp], edx

; 4798 : 		lpDst += dwDstPitch;

	mov	eax, DWORD PTR _dwDstPitch$[ebp]
	mov	ecx, DWORD PTR _lpDst$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _lpDst$[ebp], edx

; 4799 : 	}

	jmp	$LN2@PutSpriteL
$LN3@PutSpriteL:

; 4800 : 
; 4801 : 	hRet = lpDDS->Unlock(NULL);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _lpDDS$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _lpDDS$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+128]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hRet$[ebp], eax

; 4802 : 	if (hRet != DD_OK) { DDERRCHK(hRet); return; }

	cmp	DWORD PTR _hRet$[ebp], 0
	je	SHORT $LN1@PutSpriteL
	mov	eax, DWORD PTR ?__LINE__Var@?0??__PutSpriteLock32@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA
	add	eax, 45					; 0000002dH
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _hRet$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
$LN1@PutSpriteL:

; 4803 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@PutSpriteL
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 460				; 000001ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN14@PutSpriteL:
	DD	1
	DD	$LN13@PutSpriteL
$LN13@PutSpriteL:
	DD	-144					; ffffff70H
	DD	124					; 0000007cH
	DD	$LN12@PutSpriteL
$LN12@PutSpriteL:
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	100					; 00000064H
	DB	83					; 00000053H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
?__PutSpriteLock32@@YAXPAUIDirectDrawSurface7@@HH@Z ENDP ; __PutSpriteLock32
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__PutSpriteLock16@@YAXPAUIDirectDrawSurface7@@HH@Z
_TEXT	SEGMENT
_ix$1 = -264						; size = 4
_iy$2 = -252						; size = 4
_dwDstPitch$ = -240					; size = 4
_dwSrcPitch$ = -228					; size = 4
_wSrc$ = -216						; size = 2
_dwSrcColorKey$ = -204					; size = 4
_nHeight$ = -192					; size = 4
_nWidth$ = -180						; size = 4
_lpDst$ = -168						; size = 4
_lpSrc$ = -156						; size = 4
_ddsdSrc$ = -144					; size = 124
_hRet$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_lpDDS$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
?__PutSpriteLock16@@YAXPAUIDirectDrawSurface7@@HH@Z PROC ; __PutSpriteLock16, COMDAT

; 4704 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 460				; 000001ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-460]
	mov	ecx, 115				; 00000073H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 4705 : 	HRESULT hRet;
; 4706 : 	DDSURFACEDESC2 ddsdSrc;
; 4707 : 
; 4708 : 	memset(&ddsdSrc, 0, sizeof(ddsdSrc));

	push	124					; 0000007cH
	push	0
	lea	eax, DWORD PTR _ddsdSrc$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 4709 : 	ddsdSrc.dwSize = sizeof(ddsdSrc);    

	mov	DWORD PTR _ddsdSrc$[ebp], 124		; 0000007cH

; 4710 : 
; 4711 : 	hRet = lpDDS->Lock(NULL, &ddsdSrc, DDLOCK_READONLY|DDLOCK_WAIT, NULL);

	mov	esi, esp
	push	0
	push	17					; 00000011H
	lea	eax, DWORD PTR _ddsdSrc$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _lpDDS$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _lpDDS$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+100]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hRet$[ebp], eax

; 4712 : 	if (hRet != DD_OK) { DDERRCHK(hRet); return; }

	cmp	DWORD PTR _hRet$[ebp], 0
	je	SHORT $LN8@PutSpriteL
	mov	eax, DWORD PTR ?__LINE__Var@?0??__PutSpriteLock16@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA
	add	eax, 8
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _hRet$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
	jmp	$LN1@PutSpriteL
$LN8@PutSpriteL:

; 4713 : 	
; 4714 : 	//// ÀÌ¹ÌÁö Ç¥¸é ÁÖ¼Ò
; 4715 : 	WORD* lpSrc = (WORD*) ddsdSrc.lpSurface;

	mov	eax, DWORD PTR _ddsdSrc$[ebp+36]
	mov	DWORD PTR _lpSrc$[ebp], eax

; 4716 : 	
; 4717 : 	//// 2Â÷ Ç¥¸é ÁÖ¼Ò ( Àü¿ª ) , ( *2 )
; 4718 : 	WORD* lpDst = (WORD*) ((LPBYTE)g_ddsd.lpSurface + y*g_ddsd.lPitch+(x << 1));

	mov	eax, DWORD PTR _y$[ebp]
	imul	eax, DWORD PTR ?g_ddsd@@3U_DDSURFACEDESC2@@A+16
	add	eax, DWORD PTR ?g_ddsd@@3U_DDSURFACEDESC2@@A+36
	mov	ecx, DWORD PTR _x$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	mov	DWORD PTR _lpDst$[ebp], edx

; 4719 : 
; 4720 : 	int nWidth  = ddsdSrc.dwWidth;

	mov	eax, DWORD PTR _ddsdSrc$[ebp+12]
	mov	DWORD PTR _nWidth$[ebp], eax

; 4721 : 	int nHeight = ddsdSrc.dwHeight;

	mov	eax, DWORD PTR _ddsdSrc$[ebp+8]
	mov	DWORD PTR _nHeight$[ebp], eax

; 4722 : 	
; 4723 : 	//// ÄÃ·¯Å°
; 4724 : 	DWORD dwSrcColorKey = ddsdSrc.ddckCKSrcBlt.dwColorSpaceLowValue;

	mov	eax, DWORD PTR _ddsdSrc$[ebp+64]
	mov	DWORD PTR _dwSrcColorKey$[ebp], eax

; 4725 : 	WORD wSrc=0;

	xor	eax, eax
	mov	WORD PTR _wSrc$[ebp], ax

; 4726 : 
; 4727 : 	//// WORD ´ÜÀ§·Î ÁÖ¼Ò°¡ Áõ°¡ µÇ¹Ç·Î RShift ( /2)
; 4728 : 	DWORD dwSrcPitch = ddsdSrc.lPitch >> 1;

	mov	eax, DWORD PTR _ddsdSrc$[ebp+16]
	sar	eax, 1
	mov	DWORD PTR _dwSrcPitch$[ebp], eax

; 4729 : 	DWORD dwDstPitch = g_ddsd.lPitch >> 1;

	mov	eax, DWORD PTR ?g_ddsd@@3U_DDSURFACEDESC2@@A+16
	sar	eax, 1
	mov	DWORD PTR _dwDstPitch$[ebp], eax

; 4730 : 
; 4731 : 	//// ·çÇÁ³»¿¡¼­´Â ÃÖ´ëÇÑ ¿¬»êÀ» ÃÖ¼ÒÈ­ÇÑ´Ù	
; 4732 : 	for (int iy=0; iy < nHeight; iy++)

	mov	DWORD PTR _iy$2[ebp], 0
	jmp	SHORT $LN4@PutSpriteL
$LN2@PutSpriteL:
	mov	eax, DWORD PTR _iy$2[ebp]
	add	eax, 1
	mov	DWORD PTR _iy$2[ebp], eax
$LN4@PutSpriteL:
	mov	eax, DWORD PTR _iy$2[ebp]
	cmp	eax, DWORD PTR _nHeight$[ebp]
	jge	$LN3@PutSpriteL

; 4733 : 	{
; 4734 : 		for (int ix=0; ix < nWidth; ix++)

	mov	DWORD PTR _ix$1[ebp], 0
	jmp	SHORT $LN7@PutSpriteL
$LN5@PutSpriteL:
	mov	eax, DWORD PTR _ix$1[ebp]
	add	eax, 1
	mov	DWORD PTR _ix$1[ebp], eax
$LN7@PutSpriteL:
	mov	eax, DWORD PTR _ix$1[ebp]
	cmp	eax, DWORD PTR _nWidth$[ebp]
	jge	SHORT $LN6@PutSpriteL

; 4735 : 		{			
; 4736 : 			wSrc = *(lpSrc+ix);

	mov	eax, DWORD PTR _ix$1[ebp]
	mov	ecx, DWORD PTR _lpSrc$[ebp]
	mov	dx, WORD PTR [ecx+eax*2]
	mov	WORD PTR _wSrc$[ebp], dx

; 4737 : 			if (wSrc != dwSrcColorKey)

	movzx	eax, WORD PTR _wSrc$[ebp]
	cmp	eax, DWORD PTR _dwSrcColorKey$[ebp]
	je	SHORT $LN9@PutSpriteL

; 4738 : 			{
; 4739 : 				*(lpDst+ix) = wSrc;

	mov	eax, DWORD PTR _ix$1[ebp]
	mov	ecx, DWORD PTR _lpDst$[ebp]
	mov	dx, WORD PTR _wSrc$[ebp]
	mov	WORD PTR [ecx+eax*2], dx
$LN9@PutSpriteL:

; 4740 : 			}
; 4741 : 		}

	jmp	SHORT $LN5@PutSpriteL
$LN6@PutSpriteL:

; 4742 : 		lpSrc += dwSrcPitch;

	mov	eax, DWORD PTR _dwSrcPitch$[ebp]
	mov	ecx, DWORD PTR _lpSrc$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _lpSrc$[ebp], edx

; 4743 : 		lpDst += dwDstPitch;

	mov	eax, DWORD PTR _dwDstPitch$[ebp]
	mov	ecx, DWORD PTR _lpDst$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _lpDst$[ebp], edx

; 4744 : 	}

	jmp	$LN2@PutSpriteL
$LN3@PutSpriteL:

; 4745 : 
; 4746 : 	hRet = lpDDS->Unlock(NULL);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _lpDDS$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _lpDDS$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+128]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hRet$[ebp], eax

; 4747 : 	if (hRet != DD_OK) { DDERRCHK(hRet); return; }

	cmp	DWORD PTR _hRet$[ebp], 0
	je	SHORT $LN1@PutSpriteL
	mov	eax, DWORD PTR ?__LINE__Var@?0??__PutSpriteLock16@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA
	add	eax, 43					; 0000002bH
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _hRet$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
$LN1@PutSpriteL:

; 4748 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@PutSpriteL
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 460				; 000001ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN14@PutSpriteL:
	DD	1
	DD	$LN13@PutSpriteL
$LN13@PutSpriteL:
	DD	-144					; ffffff70H
	DD	124					; 0000007cH
	DD	$LN12@PutSpriteL
$LN12@PutSpriteL:
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	100					; 00000064H
	DB	83					; 00000053H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
?__PutSpriteLock16@@YAXPAUIDirectDrawSurface7@@HH@Z ENDP ; __PutSpriteLock16
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__PutImageLock@@YAXPAUIDirectDrawSurface7@@HH@Z
_TEXT	SEGMENT
tv76 = -416						; size = 4
_iy$1 = -216						; size = 4
_nHeight$ = -204					; size = 4
_nWidth$ = -192						; size = 4
_lpDst$ = -180						; size = 4
_lpSrc$ = -168						; size = 4
_dwMul$ = -156						; size = 4
_ddsdSrc$ = -144					; size = 124
_hRet$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_lpDDS$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
?__PutImageLock@@YAXPAUIDirectDrawSurface7@@HH@Z PROC	; __PutImageLock, COMDAT

; 4658 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 416				; 000001a0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-416]
	mov	ecx, 104				; 00000068H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 4659 : 	HRESULT hRet;
; 4660 : 	DDSURFACEDESC2 ddsdSrc;
; 4661 : 
; 4662 : 	memset(&ddsdSrc, 0, sizeof(ddsdSrc));

	push	124					; 0000007cH
	push	0
	lea	eax, DWORD PTR _ddsdSrc$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 4663 : 	ddsdSrc.dwSize = sizeof(ddsdSrc);    

	mov	DWORD PTR _ddsdSrc$[ebp], 124		; 0000007cH

; 4664 : 
; 4665 : 	hRet = lpDDS->Lock(NULL, &ddsdSrc, DDLOCK_READONLY|DDLOCK_WAIT, NULL);

	mov	esi, esp
	push	0
	push	17					; 00000011H
	lea	eax, DWORD PTR _ddsdSrc$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _lpDDS$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _lpDDS$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+100]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hRet$[ebp], eax

; 4666 : 	if (hRet != DD_OK) { DDERRCHK(hRet); return; }

	cmp	DWORD PTR _hRet$[ebp], 0
	je	SHORT $LN7@PutImageLo
	mov	eax, DWORD PTR ?__LINE__Var@?0??__PutImageLock@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA
	add	eax, 8
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _hRet$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
	jmp	$LN1@PutImageLo
$LN7@PutImageLo:

; 4667 : 
; 4668 : 	///// BPP¿¡ µû¶ó ¿¬»ê °ªÀ» ÃëÇÑ´Ù
; 4669 : 	DWORD dwMul = 1;

	mov	DWORD PTR _dwMul$[ebp], 1

; 4670 : 	switch(g_dwRGBBitCount)

	mov	eax, DWORD PTR ?g_dwRGBBitCount@@3KA	; g_dwRGBBitCount
	mov	DWORD PTR tv76[ebp], eax
	cmp	DWORD PTR tv76[ebp], 16			; 00000010H
	je	SHORT $LN8@PutImageLo
	cmp	DWORD PTR tv76[ebp], 32			; 00000020H
	je	SHORT $LN9@PutImageLo
	jmp	SHORT $LN2@PutImageLo
$LN8@PutImageLo:

; 4671 : 	{
; 4672 : 	case 16 : dwMul = 2; break;

	mov	DWORD PTR _dwMul$[ebp], 2
	jmp	SHORT $LN2@PutImageLo
$LN9@PutImageLo:

; 4673 : 	case 32 : dwMul = 4; break;

	mov	DWORD PTR _dwMul$[ebp], 4
$LN2@PutImageLo:

; 4674 : 	}
; 4675 : 
; 4676 : 	//// ÀÌ¹ÌÁö Ç¥¸é ÁÖ¼Ò
; 4677 : 	LPBYTE lpSrc = (LPBYTE) ddsdSrc.lpSurface;

	mov	eax, DWORD PTR _ddsdSrc$[ebp+36]
	mov	DWORD PTR _lpSrc$[ebp], eax

; 4678 : 	
; 4679 : 	//// 2Â÷ Ç¥¸é ÁÖ¼Ò ( Àü¿ª )	
; 4680 : 	LPBYTE lpDst = (LPBYTE) g_ddsd.lpSurface + y*g_ddsd.lPitch+(x * dwMul);

	mov	eax, DWORD PTR _y$[ebp]
	imul	eax, DWORD PTR ?g_ddsd@@3U_DDSURFACEDESC2@@A+16
	add	eax, DWORD PTR ?g_ddsd@@3U_DDSURFACEDESC2@@A+36
	mov	ecx, DWORD PTR _x$[ebp]
	imul	ecx, DWORD PTR _dwMul$[ebp]
	add	eax, ecx
	mov	DWORD PTR _lpDst$[ebp], eax

; 4681 : 
; 4682 : 	int nWidth  = ddsdSrc.dwWidth * dwMul;

	mov	eax, DWORD PTR _ddsdSrc$[ebp+12]
	imul	eax, DWORD PTR _dwMul$[ebp]
	mov	DWORD PTR _nWidth$[ebp], eax

; 4683 : 	int nHeight = ddsdSrc.dwHeight;

	mov	eax, DWORD PTR _ddsdSrc$[ebp+8]
	mov	DWORD PTR _nHeight$[ebp], eax

; 4684 : 
; 4685 : 	//// memcpy¿¡ ÀÇÇÑ ¸Þ¸ð¸® Àü¼Û
; 4686 : 	for (int iy=0; iy < nHeight; iy++)

	mov	DWORD PTR _iy$1[ebp], 0
	jmp	SHORT $LN6@PutImageLo
$LN4@PutImageLo:
	mov	eax, DWORD PTR _iy$1[ebp]
	add	eax, 1
	mov	DWORD PTR _iy$1[ebp], eax
$LN6@PutImageLo:
	mov	eax, DWORD PTR _iy$1[ebp]
	cmp	eax, DWORD PTR _nHeight$[ebp]
	jge	SHORT $LN5@PutImageLo

; 4687 : 	{
; 4688 : 		memcpy(lpDst, lpSrc, nWidth);

	mov	eax, DWORD PTR _nWidth$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpSrc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpDst$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 4689 : 		lpSrc += ddsdSrc.lPitch;

	mov	eax, DWORD PTR _lpSrc$[ebp]
	add	eax, DWORD PTR _ddsdSrc$[ebp+16]
	mov	DWORD PTR _lpSrc$[ebp], eax

; 4690 : 		lpDst += g_ddsd.lPitch;

	mov	eax, DWORD PTR _lpDst$[ebp]
	add	eax, DWORD PTR ?g_ddsd@@3U_DDSURFACEDESC2@@A+16
	mov	DWORD PTR _lpDst$[ebp], eax

; 4691 : 	}

	jmp	SHORT $LN4@PutImageLo
$LN5@PutImageLo:

; 4692 : 
; 4693 : 	hRet = lpDDS->Unlock(NULL);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _lpDDS$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _lpDDS$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+128]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hRet$[ebp], eax

; 4694 : 	if (hRet != DD_OK) { DDERRCHK(hRet); return; }

	cmp	DWORD PTR _hRet$[ebp], 0
	je	SHORT $LN1@PutImageLo
	mov	eax, DWORD PTR ?__LINE__Var@?0??__PutImageLock@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA
	add	eax, 36					; 00000024H
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _hRet$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
$LN1@PutImageLo:

; 4695 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@PutImageLo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 416				; 000001a0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN14@PutImageLo:
	DD	1
	DD	$LN13@PutImageLo
$LN13@PutImageLo:
	DD	-144					; ffffff70H
	DD	124					; 0000007cH
	DD	$LN12@PutImageLo
$LN12@PutImageLo:
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	100					; 00000064H
	DB	83					; 00000053H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
?__PutImageLock@@YAXPAUIDirectDrawSurface7@@HH@Z ENDP	; __PutImageLock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z
_TEXT	SEGMENT
$T1 = -501						; size = 1
_rcDest$ = -300						; size = 16
_CHAR$ = -276						; size = 16
_ddrval$ = -252						; size = 4
_ddbltfx$ = -240					; size = 100
_ddsd$ = -132						; size = 124
__$ArrayPad$ = -4					; size = 4
_lpDDS$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_Count$ = 20						; size = 4
_Number$ = 24						; size = 4
_cutx$ = 28						; size = 4
_cuty$ = 32						; size = 4
_Flip$ = 36						; size = 4
?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z PROC ; __PutAnimeSprite, COMDAT

; 4606 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 508				; 000001fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-508]
	mov	ecx, 127				; 0000007fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	BYTE PTR $T1[ebp], 0

; 4607 : 	//// Ç¥¸éÀÇ Å©±â Á¤º¸¸¦ ¾ò´Â´Ù ( ÀÓ½ÃÄÚµå )
; 4608 : 	DDSURFACEDESC2 ddsd;
; 4609 : 	DDBLTFX  ddbltfx;
; 4610 : 	HRESULT ddrval;
; 4611 : 	ddsd.dwSize = sizeof(ddsd);

	mov	DWORD PTR _ddsd$[ebp], 124		; 0000007cH

; 4612 : 	ddsd.dwFlags = DDSD_HEIGHT | DDSD_WIDTH;

	mov	DWORD PTR _ddsd$[ebp+4], 6

; 4613 : 	lpDDS->GetSurfaceDesc(&ddsd);

	mov	esi, esp
	lea	eax, DWORD PTR _ddsd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpDDS$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _lpDDS$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+88]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 4614 : 
; 4615 : 	ZeroMemory(&ddbltfx, sizeof(ddbltfx));

	push	100					; 00000064H
	push	0
	lea	eax, DWORD PTR _ddbltfx$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 4616 : 	ddbltfx.dwSize = sizeof(ddbltfx);

	mov	DWORD PTR _ddbltfx$[ebp], 100		; 00000064H

; 4617 : 	ddbltfx.dwDDFX = DDBLTFX_MIRRORLEFTRIGHT;

	mov	DWORD PTR _ddbltfx$[ebp+4], 2

; 4618 : 
; 4619 : 	RECT CHAR = { 0 + (cutx * Number), 0, cutx * (Number + 1), cuty };

	mov	eax, DWORD PTR _cutx$[ebp]
	imul	eax, DWORD PTR _Number$[ebp]
	mov	DWORD PTR _CHAR$[ebp], eax
	mov	DWORD PTR _CHAR$[ebp+4], 0
	mov	eax, DWORD PTR _Number$[ebp]
	add	eax, 1
	imul	eax, DWORD PTR _cutx$[ebp]
	mov	DWORD PTR _CHAR$[ebp+8], eax
	mov	eax, DWORD PTR _cuty$[ebp]
	mov	DWORD PTR _CHAR$[ebp+12], eax

; 4620 : 	RECT rcDest = { x, y, x + (ddsd.dwWidth / Count), y + ddsd.dwHeight };

	mov	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR _rcDest$[ebp], eax
	mov	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _rcDest$[ebp+4], eax
	mov	eax, DWORD PTR _ddsd$[ebp+12]
	xor	edx, edx
	div	DWORD PTR _Count$[ebp]
	add	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR _rcDest$[ebp+8], eax
	mov	eax, DWORD PTR _y$[ebp]
	add	eax, DWORD PTR _ddsd$[ebp+8]
	mov	DWORD PTR _rcDest$[ebp+12], eax

; 4621 : 	//ÁÂ¿ì¹ÝÀü
; 4622 : 	if (Flip == 1)

	cmp	DWORD PTR _Flip$[ebp], 1
	jne	SHORT $LN2@PutAnimeSp

; 4623 : 	{
; 4624 : 		/////
; 4625 : 		ddrval = g_pDDSBack->Blt(&rcDest, lpDDS, &CHAR, DDBLT_KEYSRC | DDBLT_WAIT | DDBLT_DDFX, &ddbltfx);

	mov	esi, esp
	lea	eax, DWORD PTR _ddbltfx$[ebp]
	push	eax
	push	16812032				; 01008800H
	lea	ecx, DWORD PTR _CHAR$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpDDS$[ebp]
	push	edx
	lea	eax, DWORD PTR _rcDest$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	push	eax
	mov	ecx, DWORD PTR [edx+20]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR $T1[ebp], 1
	mov	DWORD PTR _ddrval$[ebp], eax
	jmp	SHORT $LN3@PutAnimeSp
$LN2@PutAnimeSp:

; 4626 : 	}
; 4627 : 	else if (Flip == 0)

	cmp	DWORD PTR _Flip$[ebp], 0
	jne	SHORT $LN3@PutAnimeSp

; 4628 : 	{
; 4629 : 		ddrval = g_pDDSBack->Blt(&rcDest, lpDDS, &CHAR, DDBLT_KEYSRC | DDBLT_WAIT, NULL);

	mov	esi, esp
	push	0
	push	16809984				; 01008000H
	lea	eax, DWORD PTR _CHAR$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpDDS$[ebp]
	push	ecx
	lea	edx, DWORD PTR _rcDest$[ebp]
	push	edx
	mov	eax, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	push	edx
	mov	eax, DWORD PTR [ecx+20]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR $T1[ebp], 1
	mov	DWORD PTR _ddrval$[ebp], eax
$LN3@PutAnimeSp:

; 4630 : 	}
; 4631 : 	if (ddrval != DD_OK) DDERRCHK(ddrval);

	cmp	BYTE PTR $T1[ebp], 0
	jne	SHORT $LN7@PutAnimeSp
	push	OFFSET $LN8@PutAnimeSp
	call	__RTC_UninitUse
	add	esp, 4
$LN7@PutAnimeSp:
	cmp	DWORD PTR _ddrval$[ebp], 0
	je	SHORT $LN1@PutAnimeSp
	cmp	BYTE PTR $T1[ebp], 0
	jne	SHORT $LN9@PutAnimeSp
	push	OFFSET $LN8@PutAnimeSp
	call	__RTC_UninitUse
	add	esp, 4
$LN9@PutAnimeSp:
	mov	eax, DWORD PTR ?__LINE__Var@?0??__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z@4JA
	add	eax, 25					; 00000019H
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _ddrval$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
$LN1@PutAnimeSp:

; 4632 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@PutAnimeSp
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 508				; 000001fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN15@PutAnimeSp:
	DD	4
	DD	$LN14@PutAnimeSp
$LN14@PutAnimeSp:
	DD	-132					; ffffff7cH
	DD	124					; 0000007cH
	DD	$LN10@PutAnimeSp
	DD	-240					; ffffff10H
	DD	100					; 00000064H
	DD	$LN11@PutAnimeSp
	DD	-276					; fffffeecH
	DD	16					; 00000010H
	DD	$LN12@PutAnimeSp
	DD	-300					; fffffed4H
	DD	16					; 00000010H
	DD	$LN13@PutAnimeSp
$LN13@PutAnimeSp:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN12@PutAnimeSp:
	DB	67					; 00000043H
	DB	72					; 00000048H
	DB	65					; 00000041H
	DB	82					; 00000052H
	DB	0
$LN11@PutAnimeSp:
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	98					; 00000062H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	102					; 00000066H
	DB	120					; 00000078H
	DB	0
$LN10@PutAnimeSp:
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	100					; 00000064H
	DB	0
$LN8@PutAnimeSp:
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	114					; 00000072H
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ENDP ; __PutAnimeSprite
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__Putbar@@YAXPAUIDirectDrawSurface7@@HHHHM@Z
_TEXT	SEGMENT
tv140 = -376						; size = 8
tv136 = -368						; size = 4
_ddrval$ = -168						; size = 4
_rcDest$ = -156						; size = 16
_ddsd$ = -132						; size = 124
__$ArrayPad$ = -4					; size = 4
_lpDDS$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_Mhp$ = 20						; size = 4
_hp$ = 24						; size = 4
_HPrate$ = 28						; size = 4
?__Putbar@@YAXPAUIDirectDrawSurface7@@HHHHM@Z PROC	; __Putbar, COMDAT

; 4635 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 376				; 00000178H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-376]
	mov	ecx, 94					; 0000005eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 4636 : 	DDSURFACEDESC2 ddsd;
; 4637 : 	ddsd.dwSize = sizeof(ddsd);

	mov	DWORD PTR _ddsd$[ebp], 124		; 0000007cH

; 4638 : 	ddsd.dwFlags = DDSD_HEIGHT | DDSD_WIDTH;

	mov	DWORD PTR _ddsd$[ebp+4], 6

; 4639 : 	HPrate = ((float)hp / (float)Mhp);

	cvtsi2ss xmm0, DWORD PTR _hp$[ebp]
	cvtsi2ss xmm1, DWORD PTR _Mhp$[ebp]
	divss	xmm0, xmm1
	movss	DWORD PTR _HPrate$[ebp], xmm0

; 4640 : 	if (HPrate <= 0)

	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR _HPrate$[ebp]
	jb	SHORT $LN2@Putbar

; 4641 : 	{
; 4642 : 		HPrate = 0;

	xorps	xmm0, xmm0
	movss	DWORD PTR _HPrate$[ebp], xmm0
$LN2@Putbar:

; 4643 : 	}
; 4644 : 	lpDDS->GetSurfaceDesc(&ddsd);

	mov	esi, esp
	lea	eax, DWORD PTR _ddsd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpDDS$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _lpDDS$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+88]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 4645 : 
; 4646 : 	/////
; 4647 : 	RECT rcDest = { x, y, (float)x + ((float)ddsd.dwWidth * HPrate), y + ddsd.dwHeight };

	mov	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR _rcDest$[ebp], eax
	mov	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _rcDest$[ebp+4], eax
	cvtsi2ss xmm0, DWORD PTR _x$[ebp]
	mov	eax, DWORD PTR _ddsd$[ebp+12]
	mov	DWORD PTR tv136[ebp], eax
	cvtsi2sd xmm1, DWORD PTR tv136[ebp]
	mov	ecx, DWORD PTR tv136[ebp]
	shr	ecx, 31					; 0000001fH
	addsd	xmm1, QWORD PTR __xmm@41f00000000000000000000000000000[ecx*8]
	movsd	QWORD PTR tv140[ebp], xmm1
	cvtsd2ss xmm1, QWORD PTR tv140[ebp]
	mulss	xmm1, DWORD PTR _HPrate$[ebp]
	addss	xmm0, xmm1
	cvttss2si edx, xmm0
	mov	DWORD PTR _rcDest$[ebp+8], edx
	mov	eax, DWORD PTR _y$[ebp]
	add	eax, DWORD PTR _ddsd$[ebp+8]
	mov	DWORD PTR _rcDest$[ebp+12], eax

; 4648 : 	HRESULT ddrval = g_pDDSBack->Blt(&rcDest, lpDDS, NULL, DDBLT_KEYSRC | DDBLT_WAIT, NULL);

	mov	esi, esp
	push	0
	push	16809984				; 01008000H
	push	0
	mov	eax, DWORD PTR _lpDDS$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rcDest$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	push	ecx
	mov	edx, DWORD PTR [eax+20]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ddrval$[ebp], eax

; 4649 : 	if (ddrval != DD_OK) DDERRCHK(ddrval);

	cmp	DWORD PTR _ddrval$[ebp], 0
	je	SHORT $LN3@Putbar
	mov	eax, DWORD PTR ?__LINE__Var@?0??__Putbar@@YAXPAUIDirectDrawSurface7@@HHHHM@Z@4JA
	add	eax, 14					; 0000000eH
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _ddrval$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
$LN3@Putbar:

; 4650 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Putbar
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 376				; 00000178H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN8@Putbar:
	DD	2
	DD	$LN7@Putbar
$LN7@Putbar:
	DD	-132					; ffffff7cH
	DD	124					; 0000007cH
	DD	$LN5@Putbar
	DD	-156					; ffffff64H
	DD	16					; 00000010H
	DD	$LN6@Putbar
$LN6@Putbar:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN5@Putbar:
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	100					; 00000064H
	DB	0
?__Putbar@@YAXPAUIDirectDrawSurface7@@HHHHM@Z ENDP	; __Putbar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__PutSprite@@YAXPAUIDirectDrawSurface7@@HH@Z
_TEXT	SEGMENT
_ddrval$ = -168						; size = 4
_rcDest$ = -156						; size = 16
_ddsd$ = -132						; size = 124
__$ArrayPad$ = -4					; size = 4
_lpDDS$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
?__PutSprite@@YAXPAUIDirectDrawSurface7@@HH@Z PROC	; __PutSprite, COMDAT

; 4591 : {	

	push	ebp
	mov	ebp, esp
	sub	esp, 364				; 0000016cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-364]
	mov	ecx, 91					; 0000005bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 4592 : 	//// Ç¥¸éÀÇ Å©±â Á¤º¸¸¦ ¾ò´Â´Ù ( ÀÓ½ÃÄÚµå )
; 4593 : 	DDSURFACEDESC2 ddsd;
; 4594 :     ddsd.dwSize = sizeof(ddsd);

	mov	DWORD PTR _ddsd$[ebp], 124		; 0000007cH

; 4595 :     ddsd.dwFlags = DDSD_HEIGHT | DDSD_WIDTH;

	mov	DWORD PTR _ddsd$[ebp+4], 6

; 4596 : 	lpDDS->GetSurfaceDesc(&ddsd);

	mov	esi, esp
	lea	eax, DWORD PTR _ddsd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpDDS$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _lpDDS$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+88]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 4597 : 
; 4598 : 	/////
; 4599 : 	RECT rcDest = { x, y, x+ddsd.dwWidth, y+ddsd.dwHeight };	

	mov	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR _rcDest$[ebp], eax
	mov	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _rcDest$[ebp+4], eax
	mov	eax, DWORD PTR _x$[ebp]
	add	eax, DWORD PTR _ddsd$[ebp+12]
	mov	DWORD PTR _rcDest$[ebp+8], eax
	mov	eax, DWORD PTR _y$[ebp]
	add	eax, DWORD PTR _ddsd$[ebp+8]
	mov	DWORD PTR _rcDest$[ebp+12], eax

; 4600 : 	HRESULT ddrval = g_pDDSBack->Blt(&rcDest, lpDDS, NULL, DDBLT_KEYSRC|DDBLT_WAIT, NULL);

	mov	esi, esp
	push	0
	push	16809984				; 01008000H
	push	0
	mov	eax, DWORD PTR _lpDDS$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rcDest$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	push	ecx
	mov	edx, DWORD PTR [eax+20]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ddrval$[ebp], eax

; 4601 : 	if (ddrval != DD_OK) DDERRCHK(ddrval);

	cmp	DWORD PTR _ddrval$[ebp], 0
	je	SHORT $LN1@PutSprite
	mov	eax, DWORD PTR ?__LINE__Var@?0??__PutSprite@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA
	add	eax, 10					; 0000000aH
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _ddrval$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
$LN1@PutSprite:

; 4602 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@PutSprite
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 364				; 0000016cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@PutSprite:
	DD	2
	DD	$LN6@PutSprite
$LN6@PutSprite:
	DD	-132					; ffffff7cH
	DD	124					; 0000007cH
	DD	$LN4@PutSprite
	DD	-156					; ffffff64H
	DD	16					; 00000010H
	DD	$LN5@PutSprite
$LN5@PutSprite:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN4@PutSprite:
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	100					; 00000064H
	DB	0
?__PutSprite@@YAXPAUIDirectDrawSurface7@@HH@Z ENDP	; __PutSprite
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__PutImage@@YAXPAUIDirectDrawSurface7@@HH@Z
_TEXT	SEGMENT
_ddrval$ = -168						; size = 4
_rcDest$ = -156						; size = 16
_ddsd$ = -132						; size = 124
__$ArrayPad$ = -4					; size = 4
_lpDDS$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
?__PutImage@@YAXPAUIDirectDrawSurface7@@HH@Z PROC	; __PutImage, COMDAT

; 4575 : {	

	push	ebp
	mov	ebp, esp
	sub	esp, 364				; 0000016cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-364]
	mov	ecx, 91					; 0000005bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 4576 : 	//// Ç¥¸éÀÇ Å©±â Á¤º¸¸¦ ¾ò´Â´Ù ( ÀÓ½ÃÄÚµå )
; 4577 : 	DDSURFACEDESC2 ddsd;
; 4578 :     ddsd.dwSize = sizeof(ddsd);

	mov	DWORD PTR _ddsd$[ebp], 124		; 0000007cH

; 4579 :     ddsd.dwFlags = DDSD_HEIGHT | DDSD_WIDTH;

	mov	DWORD PTR _ddsd$[ebp+4], 6

; 4580 : 	lpDDS->GetSurfaceDesc(&ddsd);

	mov	esi, esp
	lea	eax, DWORD PTR _ddsd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpDDS$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _lpDDS$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+88]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 4581 : 
; 4582 : 	/////
; 4583 : 	RECT rcDest = { x, y, x+ddsd.dwWidth, y+ddsd.dwHeight };	

	mov	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR _rcDest$[ebp], eax
	mov	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _rcDest$[ebp+4], eax
	mov	eax, DWORD PTR _x$[ebp]
	add	eax, DWORD PTR _ddsd$[ebp+12]
	mov	DWORD PTR _rcDest$[ebp+8], eax
	mov	eax, DWORD PTR _y$[ebp]
	add	eax, DWORD PTR _ddsd$[ebp+8]
	mov	DWORD PTR _rcDest$[ebp+12], eax

; 4584 : 	HRESULT ddrval = g_pDDSBack->Blt(&rcDest, lpDDS, NULL, DDBLT_WAIT, NULL);

	mov	esi, esp
	push	0
	push	16777216				; 01000000H
	push	0
	mov	eax, DWORD PTR _lpDDS$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rcDest$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	push	ecx
	mov	edx, DWORD PTR [eax+20]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ddrval$[ebp], eax

; 4585 : 	if (ddrval != DD_OK) DDERRCHK(ddrval);

	cmp	DWORD PTR _ddrval$[ebp], 0
	je	SHORT $LN1@PutImage
	mov	eax, DWORD PTR ?__LINE__Var@?0??__PutImage@@YAXPAUIDirectDrawSurface7@@HH@Z@4JA
	add	eax, 10					; 0000000aH
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _ddrval$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
$LN1@PutImage:

; 4586 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@PutImage
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 364				; 0000016cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@PutImage:
	DD	2
	DD	$LN6@PutImage
$LN6@PutImage:
	DD	-132					; ffffff7cH
	DD	124					; 0000007cH
	DD	$LN4@PutImage
	DD	-156					; ffffff64H
	DD	16					; 00000010H
	DD	$LN5@PutImage
$LN5@PutImage:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN4@PutImage:
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	100					; 00000064H
	DB	0
?__PutImage@@YAXPAUIDirectDrawSurface7@@HH@Z ENDP	; __PutImage
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__MEM2DDS@@YAHPAUIDirectDrawSurface7@@PAEHH@Z
_TEXT	SEGMENT
tv64 = -380						; size = 4
_lpDDS$ = -180						; size = 4
_nWidthStep$ = -168					; size = 4
_hRet$ = -156						; size = 4
_ddsd$ = -144						; size = 124
_iy$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_lpDstDDS$ = 8						; size = 4
_lpSrcMem$ = 12						; size = 4
_nWidth$ = 16						; size = 4
_nHeight$ = 20						; size = 4
?__MEM2DDS@@YAHPAUIDirectDrawSurface7@@PAEHH@Z PROC	; __MEM2DDS, COMDAT

; 4534 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 380				; 0000017cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-380]
	mov	ecx, 95					; 0000005fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 4535 : 	int iy;
; 4536 : 	DDSURFACEDESC2 ddsd;
; 4537 : 	HRESULT hRet;
; 4538 : 		
; 4539 : 	int nWidthStep=0;

	mov	DWORD PTR _nWidthStep$[ebp], 0

; 4540 : 
; 4541 : 	//// ºñÆ®Ä«¿îÆ®¿¡ µû¶ó °è»êµÈ °¡·ÎÆøÀ» ±¸ÇÑ´Ù
; 4542 : 	switch (g_dwRGBBitCount)

	mov	eax, DWORD PTR ?g_dwRGBBitCount@@3KA	; g_dwRGBBitCount
	mov	DWORD PTR tv64[ebp], eax
	mov	ecx, DWORD PTR tv64[ebp]
	sub	ecx, 8
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 24			; 00000018H
	ja	SHORT $LN2@MEM2DDS
	mov	edx, DWORD PTR tv64[ebp]
	movzx	eax, BYTE PTR $LN14@MEM2DDS[edx]
	jmp	DWORD PTR $LN18@MEM2DDS[eax*4]
$LN7@MEM2DDS:

; 4543 : 	{
; 4544 : 	case  8 : nWidthStep = nWidth;      break; // 

	mov	eax, DWORD PTR _nWidth$[ebp]
	mov	DWORD PTR _nWidthStep$[ebp], eax
	jmp	SHORT $LN2@MEM2DDS
$LN8@MEM2DDS:

; 4545 : 	case 16 : nWidthStep = nWidth << 1; break; // nWidth * 2

	mov	eax, DWORD PTR _nWidth$[ebp]
	shl	eax, 1
	mov	DWORD PTR _nWidthStep$[ebp], eax
	jmp	SHORT $LN2@MEM2DDS
$LN9@MEM2DDS:

; 4546 : 	case 24 : nWidthStep = nWidth *  3; break; // nWidth * 3

	imul	eax, DWORD PTR _nWidth$[ebp], 3
	mov	DWORD PTR _nWidthStep$[ebp], eax
	jmp	SHORT $LN2@MEM2DDS
$LN10@MEM2DDS:

; 4547 : 	case 32 : nWidthStep = nWidth << 2; break; // nWidth * 4

	mov	eax, DWORD PTR _nWidth$[ebp]
	shl	eax, 2
	mov	DWORD PTR _nWidthStep$[ebp], eax
$LN2@MEM2DDS:

; 4548 : 	}
; 4549 : 
; 4550 : 	memset(&ddsd, 0, sizeof(ddsd));

	push	124					; 0000007cH
	push	0
	lea	eax, DWORD PTR _ddsd$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 4551 : 	ddsd.dwSize = sizeof(ddsd);

	mov	DWORD PTR _ddsd$[ebp], 124		; 0000007cH

; 4552 : 	
; 4553 : 	hRet = lpDstDDS->Lock(NULL, &ddsd, DDLOCK_WAIT, NULL);

	mov	esi, esp
	push	0
	push	1
	lea	eax, DWORD PTR _ddsd$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _lpDstDDS$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _lpDstDDS$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+100]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hRet$[ebp], eax

; 4554 : 	if (hRet != DD_OK) return DDERRCHK(hRet);

	cmp	DWORD PTR _hRet$[ebp], 0
	je	SHORT $LN11@MEM2DDS
	mov	eax, DWORD PTR ?__LINE__Var@?0??__MEM2DDS@@YAHPAUIDirectDrawSurface7@@PAEHH@Z@4JA
	add	eax, 20					; 00000014H
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _hRet$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
	jmp	$LN1@MEM2DDS
$LN11@MEM2DDS:

; 4555 : 	
; 4556 : 	LPBYTE lpDDS = (LPBYTE) ddsd.lpSurface;

	mov	eax, DWORD PTR _ddsd$[ebp+36]
	mov	DWORD PTR _lpDDS$[ebp], eax

; 4557 : 
; 4558 : 	//// ¸Þ¸ð¸® Àü¼Û ( º¹»ç )
; 4559 : 	for (iy=0; iy < nHeight; iy++)

	mov	DWORD PTR _iy$[ebp], 0
	jmp	SHORT $LN6@MEM2DDS
$LN4@MEM2DDS:
	mov	eax, DWORD PTR _iy$[ebp]
	add	eax, 1
	mov	DWORD PTR _iy$[ebp], eax
$LN6@MEM2DDS:
	mov	eax, DWORD PTR _iy$[ebp]
	cmp	eax, DWORD PTR _nHeight$[ebp]
	jge	SHORT $LN5@MEM2DDS

; 4560 : 	{
; 4561 : 		memcpy(lpDDS, lpSrcMem, nWidthStep);

	mov	eax, DWORD PTR _nWidthStep$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpSrcMem$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpDDS$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 4562 : 		lpDDS    += ddsd.lPitch;

	mov	eax, DWORD PTR _lpDDS$[ebp]
	add	eax, DWORD PTR _ddsd$[ebp+16]
	mov	DWORD PTR _lpDDS$[ebp], eax

; 4563 : 		lpSrcMem += nWidthStep;

	mov	eax, DWORD PTR _lpSrcMem$[ebp]
	add	eax, DWORD PTR _nWidthStep$[ebp]
	mov	DWORD PTR _lpSrcMem$[ebp], eax

; 4564 : 	}

	jmp	SHORT $LN4@MEM2DDS
$LN5@MEM2DDS:

; 4565 : 	
; 4566 : 	hRet = lpDstDDS->Unlock(NULL);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _lpDstDDS$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _lpDstDDS$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+128]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hRet$[ebp], eax

; 4567 : 	if (hRet != DD_OK) return DDERRCHK(hRet);

	cmp	DWORD PTR _hRet$[ebp], 0
	je	SHORT $LN12@MEM2DDS
	mov	eax, DWORD PTR ?__LINE__Var@?0??__MEM2DDS@@YAHPAUIDirectDrawSurface7@@PAEHH@Z@4JA
	add	eax, 33					; 00000021H
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _hRet$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN1@MEM2DDS
$LN12@MEM2DDS:

; 4568 : 
; 4569 : 	return TRUE;

	mov	eax, 1
$LN1@MEM2DDS:

; 4570 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@MEM2DDS
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 380				; 0000017cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN17@MEM2DDS:
	DD	1
	DD	$LN16@MEM2DDS
$LN16@MEM2DDS:
	DD	-144					; ffffff70H
	DD	124					; 0000007cH
	DD	$LN15@MEM2DDS
$LN15@MEM2DDS:
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	100					; 00000064H
	DB	0
	npad	3
$LN18@MEM2DDS:
	DD	$LN7@MEM2DDS
	DD	$LN8@MEM2DDS
	DD	$LN9@MEM2DDS
	DD	$LN10@MEM2DDS
	DD	$LN2@MEM2DDS
$LN14@MEM2DDS:
	DB	0
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	1
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	2
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	3
?__MEM2DDS@@YAHPAUIDirectDrawSurface7@@PAEHH@Z ENDP	; __MEM2DDS
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__DDLoadBin@@YAPAUIDirectDrawSurface7@@PBDH@Z
_TEXT	SEGMENT
_bRval$ = -72						; size = 4
_lpDDS$ = -60						; size = 4
_lpImg$ = -48						; size = 4
_file$ = -36						; size = 4
_nSize$ = -24						; size = 4
_szBin$ = -12						; size = 8
_strFile$ = 8						; size = 4
_bIsVRAM$ = 12						; size = 4
?__DDLoadBin@@YAPAUIDirectDrawSurface7@@PBDH@Z PROC	; __DDLoadBin, COMDAT

; 4502 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 4503 : 	SIZE szBin;
; 4504 : 	int nSize;
; 4505 : 
; 4506 : 	//// ÆÄÀÏ ÀÐ±â
; 4507 : 	//// 8 ¹ÙÀÌÆ® : °¡·Î, ¼¼·ÎÅ©±â
; 4508 : 	//// 4 ¹ÙÀÌÆ® : ÀÌ¹ÌÁö ÀüÃ¼ Å©±â
; 4509 : 	FILE* file = fopen(strFile, "rb");

	push	OFFSET ??_C@_02JDPG@rb@
	mov	eax, DWORD PTR _strFile$[ebp]
	push	eax
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _file$[ebp], eax

; 4510 : 	fread(&szBin, sizeof(SIZE), 1, file);

	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	push	1
	push	8
	lea	ecx, DWORD PTR _szBin$[ebp]
	push	ecx
	call	_fread
	add	esp, 16					; 00000010H

; 4511 : 	fread(&nSize, sizeof(int), 1, file);	

	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	push	1
	push	4
	lea	ecx, DWORD PTR _nSize$[ebp]
	push	ecx
	call	_fread
	add	esp, 16					; 00000010H

; 4512 : 	LPBYTE lpImg = (LPBYTE) malloc(nSize);

	mov	eax, DWORD PTR ?__LINE__Var@?0??__DDLoadBin@@YAPAUIDirectDrawSurface7@@PBDH@Z@4JA
	add	eax, 10					; 0000000aH
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	push	1
	mov	ecx, DWORD PTR _nSize$[ebp]
	push	ecx
	call	__malloc_dbg
	add	esp, 16					; 00000010H
	mov	DWORD PTR _lpImg$[ebp], eax

; 4513 : 	fread(lpImg, nSize, 1, file);

	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _nSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpImg$[ebp]
	push	edx
	call	_fread
	add	esp, 16					; 00000010H

; 4514 : 	fclose(file);

	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	call	_fclose
	add	esp, 4

; 4515 : 
; 4516 : 	///// ¿ÀÇÁ½ºÅ©¸° »ý¼º ( VRAM )
; 4517 : 	LPDIRECTDRAWSURFACE7 lpDDS = NULL;

	mov	DWORD PTR _lpDDS$[ebp], 0

; 4518 : 	lpDDS = __CreateSurface(szBin.cx, szBin.cy, bIsVRAM);

	mov	eax, DWORD PTR _bIsVRAM$[ebp]
	push	eax
	mov	ecx, DWORD PTR _szBin$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _szBin$[ebp]
	push	edx
	call	?__CreateSurface@@YAPAUIDirectDrawSurface7@@KKH@Z ; __CreateSurface
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _lpDDS$[ebp], eax

; 4519 : 	if (!lpDDS) { MSGERROR("_DDLoadBin"); return NULL; }

	cmp	DWORD PTR _lpDDS$[ebp], 0
	jne	SHORT $LN2@DDLoadBin
	mov	eax, DWORD PTR ?__LINE__Var@?0??__DDLoadBin@@YAPAUIDirectDrawSurface7@@PBDH@Z@4JA
	add	eax, 17					; 00000011H
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	push	OFFSET ??_C@_0L@EKKCFCMM@_DDLoadBin@
	call	?___Error@@YAHPAD0H@Z			; ___Error
	add	esp, 12					; 0000000cH
	xor	eax, eax
	jmp	SHORT $LN1@DDLoadBin
$LN2@DDLoadBin:

; 4520 : 
; 4521 : 	///// »ý¼ºµÈ ¿ÀÇÁ½ºÅ©¸°¿¡ ¸Þ¸ð¸® µ¥ÀÌÅ¸ Àü¼Û
; 4522 : 	BOOL bRval = __MEM2DDS(lpDDS, lpImg, szBin.cx, szBin.cy);

	mov	eax, DWORD PTR _szBin$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _szBin$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpImg$[ebp]
	push	edx
	mov	eax, DWORD PTR _lpDDS$[ebp]
	push	eax
	call	?__MEM2DDS@@YAHPAUIDirectDrawSurface7@@PAEHH@Z ; __MEM2DDS
	add	esp, 16					; 00000010H
	mov	DWORD PTR _bRval$[ebp], eax

; 4523 : 	if (!bRval) { MSGERROR("_DDLoadBin"); return NULL; }

	cmp	DWORD PTR _bRval$[ebp], 0
	jne	SHORT $LN3@DDLoadBin
	mov	eax, DWORD PTR ?__LINE__Var@?0??__DDLoadBin@@YAPAUIDirectDrawSurface7@@PBDH@Z@4JA
	add	eax, 21					; 00000015H
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	push	OFFSET ??_C@_0L@EKKCFCMM@_DDLoadBin@
	call	?___Error@@YAHPAD0H@Z			; ___Error
	add	esp, 12					; 0000000cH
	xor	eax, eax
	jmp	SHORT $LN1@DDLoadBin
$LN3@DDLoadBin:

; 4524 : 
; 4525 : 	free(lpImg);

	mov	eax, DWORD PTR _lpImg$[ebp]
	push	eax
	call	_free
	add	esp, 4

; 4526 : 
; 4527 : 	return lpDDS;

	mov	eax, DWORD PTR _lpDDS$[ebp]
$LN1@DDLoadBin:

; 4528 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@DDLoadBin
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN8@DDLoadBin:
	DD	2
	DD	$LN7@DDLoadBin
$LN7@DDLoadBin:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN5@DDLoadBin
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN6@DDLoadBin
$LN6@DDLoadBin:
	DB	110					; 0000006eH
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN5@DDLoadBin:
	DB	115					; 00000073H
	DB	122					; 0000007aH
	DB	66					; 00000042H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	0
?__DDLoadBin@@YAPAUIDirectDrawSurface7@@PBDH@Z ENDP	; __DDLoadBin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__CPYDDS@@YAXHHPAUtagRECT@@@Z
_TEXT	SEGMENT
_iy$1 = -44						; size = 4
_nWidth$ = -32						; size = 4
_lpDst$ = -20						; size = 4
_lpSrc$ = -8						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_rcSrc$ = 16						; size = 4
?__CPYDDS@@YAXHHPAUtagRECT@@@Z PROC			; __CPYDDS, COMDAT

; 5525 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 5526 : 	LPBYTE lpSrc = (LPBYTE)g_ddsd.lpSurface + rcSrc->top*g_ddsd.lPitch+(rcSrc->left * 2);

	mov	eax, DWORD PTR _rcSrc$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	imul	ecx, DWORD PTR ?g_ddsd@@3U_DDSURFACEDESC2@@A+16
	add	ecx, DWORD PTR ?g_ddsd@@3U_DDSURFACEDESC2@@A+36
	mov	edx, DWORD PTR _rcSrc$[ebp]
	mov	eax, DWORD PTR [edx]
	lea	ecx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _lpSrc$[ebp], ecx

; 5527 : 	LPBYTE lpDst = (LPBYTE)g_ddsd.lpSurface + y*g_ddsd.lPitch+(x * 2);

	mov	eax, DWORD PTR _y$[ebp]
	imul	eax, DWORD PTR ?g_ddsd@@3U_DDSURFACEDESC2@@A+16
	add	eax, DWORD PTR ?g_ddsd@@3U_DDSURFACEDESC2@@A+36
	mov	ecx, DWORD PTR _x$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	mov	DWORD PTR _lpDst$[ebp], edx

; 5528 : 
; 5529 : 	int nWidth = (rcSrc->right-rcSrc->left+1) * 2;

	mov	eax, DWORD PTR _rcSrc$[ebp]
	mov	ecx, DWORD PTR _rcSrc$[ebp]
	mov	edx, DWORD PTR [eax+8]
	sub	edx, DWORD PTR [ecx]
	lea	eax, DWORD PTR [edx+edx+2]
	mov	DWORD PTR _nWidth$[ebp], eax

; 5530 : 	for (int iy=rcSrc->top; iy < rcSrc->bottom+1; iy++)

	mov	eax, DWORD PTR _rcSrc$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _iy$1[ebp], ecx
	jmp	SHORT $LN4@CPYDDS
$LN2@CPYDDS:
	mov	eax, DWORD PTR _iy$1[ebp]
	add	eax, 1
	mov	DWORD PTR _iy$1[ebp], eax
$LN4@CPYDDS:
	mov	eax, DWORD PTR _rcSrc$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 1
	cmp	DWORD PTR _iy$1[ebp], ecx
	jge	SHORT $LN1@CPYDDS

; 5531 : 	{
; 5532 : 		memcpy(lpDst, lpSrc, nWidth);

	mov	eax, DWORD PTR _nWidth$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpSrc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpDst$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 5533 : 		lpSrc += g_ddsd.lPitch;

	mov	eax, DWORD PTR _lpSrc$[ebp]
	add	eax, DWORD PTR ?g_ddsd@@3U_DDSURFACEDESC2@@A+16
	mov	DWORD PTR _lpSrc$[ebp], eax

; 5534 : 		lpDst += g_ddsd.lPitch;

	mov	eax, DWORD PTR _lpDst$[ebp]
	add	eax, DWORD PTR ?g_ddsd@@3U_DDSURFACEDESC2@@A+16
	mov	DWORD PTR _lpDst$[ebp], eax

; 5535 : 	}

	jmp	SHORT $LN2@CPYDDS
$LN1@CPYDDS:

; 5536 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?__CPYDDS@@YAXHHPAUtagRECT@@@Z ENDP			; __CPYDDS
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__GetPixelRGB16@@YAGHHH@Z
_TEXT	SEGMENT
_wPixel$ = -8						; size = 2
_R$ = 8							; size = 4
_G$ = 12						; size = 4
_B$ = 16						; size = 4
?__GetPixelRGB16@@YAGHHH@Z PROC				; __GetPixelRGB16, COMDAT

; 5456 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 5457 : 	WORD wPixel=0;

	xor	eax, eax
	mov	WORD PTR _wPixel$[ebp], ax

; 5458 : 
; 5459 : 	if (g_dwPixelFormat == RGB565)

	cmp	DWORD PTR ?g_dwPixelFormat@@3KA, 565	; g_dwPixelFormat, 00000235H
	jne	SHORT $LN2@GetPixelRG

; 5460 : 	{
; 5461 : 		wPixel = (R<<11) | (G<<5) | B;   // 0000 0000 0001 1111		                                 

	mov	eax, DWORD PTR _R$[ebp]
	shl	eax, 11					; 0000000bH
	mov	ecx, DWORD PTR _G$[ebp]
	shl	ecx, 5
	or	eax, ecx
	or	eax, DWORD PTR _B$[ebp]
	mov	WORD PTR _wPixel$[ebp], ax

; 5462 : 		return wPixel;					 // 0000 0111 1110 0000   5

	mov	ax, WORD PTR _wPixel$[ebp]
	jmp	SHORT $LN1@GetPixelRG
	jmp	SHORT $LN1@GetPixelRG
$LN2@GetPixelRG:

; 5463 : 	}                                    // 1111 1000 0000 0000  11
; 5464 : 	else if (g_dwPixelFormat == RGB555)

	cmp	DWORD PTR ?g_dwPixelFormat@@3KA, 555	; g_dwPixelFormat, 0000022bH
	jne	SHORT $LN4@GetPixelRG

; 5465 : 	{
; 5466 : 		wPixel = (R<<10) | (G<<5) | B;

	mov	eax, DWORD PTR _R$[ebp]
	shl	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _G$[ebp]
	shl	ecx, 5
	or	eax, ecx
	or	eax, DWORD PTR _B$[ebp]
	mov	WORD PTR _wPixel$[ebp], ax

; 5467 : 		return wPixel;

	mov	ax, WORD PTR _wPixel$[ebp]
	jmp	SHORT $LN1@GetPixelRG

; 5468 : 	}
; 5469 : 	else // BGR565

	jmp	SHORT $LN1@GetPixelRG
$LN4@GetPixelRG:

; 5470 : 	{
; 5471 : 		wPixel = (B<<11) | (G<<5) | R;

	mov	eax, DWORD PTR _B$[ebp]
	shl	eax, 11					; 0000000bH
	mov	ecx, DWORD PTR _G$[ebp]
	shl	ecx, 5
	or	eax, ecx
	or	eax, DWORD PTR _R$[ebp]
	mov	WORD PTR _wPixel$[ebp], ax

; 5472 : 		return wPixel;

	mov	ax, WORD PTR _wPixel$[ebp]
$LN1@GetPixelRG:

; 5473 : 	}
; 5474 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?__GetPixelRGB16@@YAGHHH@Z ENDP				; __GetPixelRGB16
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__CheckRGBBit@@YAKPAUIDirectDrawSurface7@@@Z
_TEXT	SEGMENT
tv73 = -356						; size = 4
_hRet$ = -156						; size = 4
_dwPixelFormat$ = -144					; size = 4
_ddsd$ = -132						; size = 124
__$ArrayPad$ = -4					; size = 4
_lpDDS$ = 8						; size = 4
?__CheckRGBBit@@YAKPAUIDirectDrawSurface7@@@Z PROC	; __CheckRGBBit, COMDAT

; 5541 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 356				; 00000164H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-356]
	mov	ecx, 89					; 00000059H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 5542 : 	DDSURFACEDESC2 ddsd;
; 5543 : 	DWORD dwPixelFormat = 0;

	mov	DWORD PTR _dwPixelFormat$[ebp], 0

; 5544 : 
; 5545 : 	::ZeroMemory(&ddsd, sizeof(ddsd));

	push	124					; 0000007cH
	push	0
	lea	eax, DWORD PTR _ddsd$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 5546 : 	ddsd.dwSize  = sizeof(ddsd);

	mov	DWORD PTR _ddsd$[ebp], 124		; 0000007cH

; 5547 :     ddsd.dwFlags = DDSD_PIXELFORMAT;

	mov	DWORD PTR _ddsd$[ebp+4], 4096		; 00001000H

; 5548 :     HRESULT hRet = lpDDS->GetSurfaceDesc(&ddsd);

	mov	esi, esp
	lea	eax, DWORD PTR _ddsd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _lpDDS$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _lpDDS$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+88]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hRet$[ebp], eax

; 5549 : 	if (hRet != DD_OK) { DDERRCHK(hRet); return dwPixelFormat; }

	cmp	DWORD PTR _hRet$[ebp], 0
	je	SHORT $LN4@CheckRGBBi
	mov	eax, DWORD PTR ?__LINE__Var@?0??__CheckRGBBit@@YAKPAUIDirectDrawSurface7@@@Z@4JA
	add	eax, 8
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _hRet$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
	mov	eax, DWORD PTR _dwPixelFormat$[ebp]
	jmp	$LN1@CheckRGBBi
$LN4@CheckRGBBi:

; 5550 : 		
; 5551 : 	g_dwRGBBitCount = ddsd.ddpfPixelFormat.dwRGBBitCount;

	mov	eax, DWORD PTR _ddsd$[ebp+84]
	mov	DWORD PTR ?g_dwRGBBitCount@@3KA, eax	; g_dwRGBBitCount

; 5552 : 	switch(ddsd.ddpfPixelFormat.dwRBitMask)

	mov	eax, DWORD PTR _ddsd$[ebp+88]
	mov	DWORD PTR tv73[ebp], eax
	cmp	DWORD PTR tv73[ebp], 31744		; 00007c00H
	ja	SHORT $LN11@CheckRGBBi
	cmp	DWORD PTR tv73[ebp], 31744		; 00007c00H
	je	SHORT $LN6@CheckRGBBi
	cmp	DWORD PTR tv73[ebp], 31			; 0000001fH
	je	SHORT $LN7@CheckRGBBi
	cmp	DWORD PTR tv73[ebp], 255		; 000000ffH
	je	SHORT $LN9@CheckRGBBi
	jmp	SHORT $LN2@CheckRGBBi
$LN11@CheckRGBBi:
	cmp	DWORD PTR tv73[ebp], 63488		; 0000f800H
	je	SHORT $LN5@CheckRGBBi
	cmp	DWORD PTR tv73[ebp], 16711680		; 00ff0000H
	je	SHORT $LN8@CheckRGBBi
	jmp	SHORT $LN2@CheckRGBBi
$LN5@CheckRGBBi:

; 5553 : 	{
; 5554 : 	case 0xF800   : dwPixelFormat = RGB565; break;    // 11111000 00000000

	mov	DWORD PTR _dwPixelFormat$[ebp], 565	; 00000235H
	jmp	SHORT $LN2@CheckRGBBi
$LN6@CheckRGBBi:

; 5555 : 	case 0x7C00   : dwPixelFormat = RGB555; break;    // 01111100 00000000

	mov	DWORD PTR _dwPixelFormat$[ebp], 555	; 0000022bH
	jmp	SHORT $LN2@CheckRGBBi
$LN7@CheckRGBBi:

; 5556 : 	case 0x001F   : dwPixelFormat = BGR565; break;    // 00000000 00011111

	mov	DWORD PTR _dwPixelFormat$[ebp], -565	; fffffdcbH
	jmp	SHORT $LN2@CheckRGBBi
$LN8@CheckRGBBi:

; 5557 : 	case 0xFF0000 : dwPixelFormat = RGB888; break;    // 11111111 00000000 00000000

	mov	DWORD PTR _dwPixelFormat$[ebp], 888	; 00000378H
	jmp	SHORT $LN2@CheckRGBBi
$LN9@CheckRGBBi:

; 5558 : 	case 0x0000FF : dwPixelFormat = BGR888; break;    // 00000000 00000000 11111111

	mov	DWORD PTR _dwPixelFormat$[ebp], -888	; fffffc88H
$LN2@CheckRGBBi:

; 5559 : 	}
; 5560 : 
; 5561 : 	return dwPixelFormat;

	mov	eax, DWORD PTR _dwPixelFormat$[ebp]
$LN1@CheckRGBBi:

; 5562 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@CheckRGBBi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 356				; 00000164H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN14@CheckRGBBi:
	DD	1
	DD	$LN13@CheckRGBBi
$LN13@CheckRGBBi:
	DD	-132					; ffffff7cH
	DD	124					; 0000007cH
	DD	$LN12@CheckRGBBi
$LN12@CheckRGBBi:
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	100					; 00000064H
	DB	0
?__CheckRGBBit@@YAKPAUIDirectDrawSurface7@@@Z ENDP	; __CheckRGBBit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__DrawRect16@@YAXHHHHG@Z
_TEXT	SEGMENT
_x1$ = 8						; size = 4
_y1$ = 12						; size = 4
_x2$ = 16						; size = 4
_y2$ = 20						; size = 4
_wColor$ = 24						; size = 2
?__DrawRect16@@YAXHHHHG@Z PROC				; __DrawRect16, COMDAT

; 5508 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 5509 :     ///// °¡·Î
; 5510 : 	__DrawHLine16(x1, y1, x2, wColor);

	movzx	eax, WORD PTR _wColor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y1$[ebp]
	push	edx
	mov	eax, DWORD PTR _x1$[ebp]
	push	eax
	call	?__DrawHLine16@@YAXHHHG@Z		; __DrawHLine16
	add	esp, 16					; 00000010H

; 5511 : 	__DrawHLine16(x1, y2, x2, wColor);

	movzx	eax, WORD PTR _wColor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y2$[ebp]
	push	edx
	mov	eax, DWORD PTR _x1$[ebp]
	push	eax
	call	?__DrawHLine16@@YAXHHHG@Z		; __DrawHLine16
	add	esp, 16					; 00000010H

; 5512 : 
; 5513 : 	///// ¼¼·Î
; 5514 : 	__DrawVLine16(x1, y1+1, y2-1, wColor);

	movzx	eax, WORD PTR _wColor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y2$[ebp]
	sub	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _y1$[ebp]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _x1$[ebp]
	push	eax
	call	?__DrawVLine16@@YAXHHHG@Z		; __DrawVLine16
	add	esp, 16					; 00000010H

; 5515 : 	__DrawVLine16(x2, y1+1, y2-1, wColor);

	movzx	eax, WORD PTR _wColor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y2$[ebp]
	sub	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _y1$[ebp]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _x2$[ebp]
	push	eax
	call	?__DrawVLine16@@YAXHHHG@Z		; __DrawVLine16
	add	esp, 16					; 00000010H

; 5516 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?__DrawRect16@@YAXHHHHG@Z ENDP				; __DrawRect16
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__DrawHLine16@@YAXHHHG@Z
_TEXT	SEGMENT
_ix$1 = -32						; size = 4
_lpDst$ = -20						; size = 4
_lpDDS$ = -8						; size = 4
_x1$ = 8						; size = 4
_y$ = 12						; size = 4
_x2$ = 16						; size = 4
_wColor$ = 20						; size = 2
?__DrawHLine16@@YAXHHHG@Z PROC				; __DrawHLine16, COMDAT

; 5495 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 5496 : 	LPBYTE lpDDS = (LPBYTE) g_ddsd.lpSurface;

	mov	eax, DWORD PTR ?g_ddsd@@3U_DDSURFACEDESC2@@A+36
	mov	DWORD PTR _lpDDS$[ebp], eax

; 5497 : 	WORD* lpDst = (WORD*) (lpDDS + y*g_ddsd.lPitch+(x1 * 2));

	mov	eax, DWORD PTR _y$[ebp]
	imul	eax, DWORD PTR ?g_ddsd@@3U_DDSURFACEDESC2@@A+16
	add	eax, DWORD PTR _lpDDS$[ebp]
	mov	ecx, DWORD PTR _x1$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	mov	DWORD PTR _lpDst$[ebp], edx

; 5498 : 
; 5499 : 	for (int ix=x1; ix <= x2; ix++)

	mov	eax, DWORD PTR _x1$[ebp]
	mov	DWORD PTR _ix$1[ebp], eax
	jmp	SHORT $LN4@DrawHLine1
$LN2@DrawHLine1:
	mov	eax, DWORD PTR _ix$1[ebp]
	add	eax, 1
	mov	DWORD PTR _ix$1[ebp], eax
$LN4@DrawHLine1:
	mov	eax, DWORD PTR _ix$1[ebp]
	cmp	eax, DWORD PTR _x2$[ebp]
	jg	SHORT $LN1@DrawHLine1

; 5500 : 	{
; 5501 : 		*lpDst = wColor;

	mov	eax, DWORD PTR _lpDst$[ebp]
	mov	cx, WORD PTR _wColor$[ebp]
	mov	WORD PTR [eax], cx

; 5502 : 		lpDst++;

	mov	eax, DWORD PTR _lpDst$[ebp]
	add	eax, 2
	mov	DWORD PTR _lpDst$[ebp], eax

; 5503 : 	}

	jmp	SHORT $LN2@DrawHLine1
$LN1@DrawHLine1:

; 5504 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?__DrawHLine16@@YAXHHHG@Z ENDP				; __DrawHLine16
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__DrawVLine16@@YAXHHHG@Z
_TEXT	SEGMENT
_iy$1 = -44						; size = 4
_nPitch$ = -32						; size = 4
_lpDst$ = -20						; size = 4
_lpDDS$ = -8						; size = 4
_x$ = 8							; size = 4
_y1$ = 12						; size = 4
_y2$ = 16						; size = 4
_wColor$ = 20						; size = 2
?__DrawVLine16@@YAXHHHG@Z PROC				; __DrawVLine16, COMDAT

; 5481 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 5482 : 	LPBYTE lpDDS = (LPBYTE) g_ddsd.lpSurface;	

	mov	eax, DWORD PTR ?g_ddsd@@3U_DDSURFACEDESC2@@A+36
	mov	DWORD PTR _lpDDS$[ebp], eax

; 5483 : 	WORD* lpDst = (WORD*) (lpDDS + y1*g_ddsd.lPitch+(x * 2));	

	mov	eax, DWORD PTR _y1$[ebp]
	imul	eax, DWORD PTR ?g_ddsd@@3U_DDSURFACEDESC2@@A+16
	add	eax, DWORD PTR _lpDDS$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	mov	DWORD PTR _lpDst$[ebp], edx

; 5484 : 	
; 5485 : 	int nPitch = g_ddsd.lPitch>>1; // g_ddsd.lPitch/2

	mov	eax, DWORD PTR ?g_ddsd@@3U_DDSURFACEDESC2@@A+16
	sar	eax, 1
	mov	DWORD PTR _nPitch$[ebp], eax

; 5486 : 	for (int iy=y1; iy <= y2; iy++)

	mov	eax, DWORD PTR _y1$[ebp]
	mov	DWORD PTR _iy$1[ebp], eax
	jmp	SHORT $LN4@DrawVLine1
$LN2@DrawVLine1:
	mov	eax, DWORD PTR _iy$1[ebp]
	add	eax, 1
	mov	DWORD PTR _iy$1[ebp], eax
$LN4@DrawVLine1:
	mov	eax, DWORD PTR _iy$1[ebp]
	cmp	eax, DWORD PTR _y2$[ebp]
	jg	SHORT $LN1@DrawVLine1

; 5487 : 	{
; 5488 : 		*lpDst = wColor;

	mov	eax, DWORD PTR _lpDst$[ebp]
	mov	cx, WORD PTR _wColor$[ebp]
	mov	WORD PTR [eax], cx

; 5489 : 		lpDst += nPitch;

	mov	eax, DWORD PTR _nPitch$[ebp]
	mov	ecx, DWORD PTR _lpDst$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _lpDst$[ebp], edx

; 5490 : 	}

	jmp	SHORT $LN2@DrawVLine1
$LN1@DrawVLine1:

; 5491 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?__DrawVLine16@@YAXHHHG@Z ENDP				; __DrawVLine16
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__GetPixel16@@YAGHH@Z
_TEXT	SEGMENT
_pPixel$ = -20						; size = 4
_lpDDS$ = -8						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?__GetPixel16@@YAGHH@Z PROC				; __GetPixel16, COMDAT

; 5446 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 5447 : 	LPBYTE lpDDS = (LPBYTE) g_ddsd.lpSurface;

	mov	eax, DWORD PTR ?g_ddsd@@3U_DDSURFACEDESC2@@A+36
	mov	DWORD PTR _lpDDS$[ebp], eax

; 5448 : 	WORD* pPixel = (WORD*) (lpDDS + y*g_ddsd.lPitch+(x * 2));

	mov	eax, DWORD PTR _y$[ebp]
	imul	eax, DWORD PTR ?g_ddsd@@3U_DDSURFACEDESC2@@A+16
	add	eax, DWORD PTR _lpDDS$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	mov	DWORD PTR _pPixel$[ebp], edx

; 5449 : 	
; 5450 : 	return *pPixel;

	mov	eax, DWORD PTR _pPixel$[ebp]
	mov	ax, WORD PTR [eax]

; 5451 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?__GetPixel16@@YAGHH@Z ENDP				; __GetPixel16
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__PutPixel8@@YAXHHE@Z
_TEXT	SEGMENT
_lpDDS$ = -8						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_bColor$ = 16						; size = 1
?__PutPixel8@@YAXHHE@Z PROC				; __PutPixel8, COMDAT

; 5423 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 5424 : 	LPBYTE lpDDS = (LPBYTE) g_ddsd.lpSurface;

	mov	eax, DWORD PTR ?g_ddsd@@3U_DDSURFACEDESC2@@A+36
	mov	DWORD PTR _lpDDS$[ebp], eax

; 5425 : 	lpDDS[y * g_ddsd.lPitch + x] = bColor;

	mov	eax, DWORD PTR _y$[ebp]
	imul	eax, DWORD PTR ?g_ddsd@@3U_DDSURFACEDESC2@@A+16
	add	eax, DWORD PTR _x$[ebp]
	mov	ecx, DWORD PTR _lpDDS$[ebp]
	mov	dl, BYTE PTR _bColor$[ebp]
	mov	BYTE PTR [ecx+eax], dl

; 5426 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?__PutPixel8@@YAXHHE@Z ENDP				; __PutPixel8
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__PutPixel16@@YAXHHG@Z
_TEXT	SEGMENT
_lpDst$ = -20						; size = 4
_lpDDS$ = -8						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_wColor$ = 16						; size = 2
?__PutPixel16@@YAXHHG@Z PROC				; __PutPixel16, COMDAT

; 5429 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 5430 : 	LPBYTE lpDDS = (LPBYTE) g_ddsd.lpSurface;

	mov	eax, DWORD PTR ?g_ddsd@@3U_DDSURFACEDESC2@@A+36
	mov	DWORD PTR _lpDDS$[ebp], eax

; 5431 : 	WORD* lpDst = (WORD*) (lpDDS + y*g_ddsd.lPitch+(x * 2));

	mov	eax, DWORD PTR _y$[ebp]
	imul	eax, DWORD PTR ?g_ddsd@@3U_DDSURFACEDESC2@@A+16
	add	eax, DWORD PTR _lpDDS$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	lea	edx, DWORD PTR [eax+ecx*2]
	mov	DWORD PTR _lpDst$[ebp], edx

; 5432 : 
; 5433 : 	*lpDst = wColor;

	mov	eax, DWORD PTR _lpDst$[ebp]
	mov	cx, WORD PTR _wColor$[ebp]
	mov	WORD PTR [eax], cx

; 5434 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?__PutPixel16@@YAXHHG@Z ENDP				; __PutPixel16
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__PutPixel32@@YAXHHK@Z
_TEXT	SEGMENT
_lpDst$ = -20						; size = 4
_lpDDS$ = -8						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_dwColor$ = 16						; size = 4
?__PutPixel32@@YAXHHK@Z PROC				; __PutPixel32, COMDAT

; 5437 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 5438 : 	LPBYTE lpDDS = (LPBYTE) g_ddsd.lpSurface;

	mov	eax, DWORD PTR ?g_ddsd@@3U_DDSURFACEDESC2@@A+36
	mov	DWORD PTR _lpDDS$[ebp], eax

; 5439 : 	
; 5440 : 	DWORD* lpDst = (DWORD*) (lpDDS + y*g_ddsd.lPitch+(x * 4));	

	mov	eax, DWORD PTR _y$[ebp]
	imul	eax, DWORD PTR ?g_ddsd@@3U_DDSURFACEDESC2@@A+16
	add	eax, DWORD PTR _lpDDS$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	lea	edx, DWORD PTR [eax+ecx*4]
	mov	DWORD PTR _lpDst$[ebp], edx

; 5441 : 
; 5442 : 	*lpDst = dwColor;	

	mov	eax, DWORD PTR _lpDst$[ebp]
	mov	ecx, DWORD PTR _dwColor$[ebp]
	mov	DWORD PTR [eax], ecx

; 5443 : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?__PutPixel32@@YAXHHK@Z ENDP				; __PutPixel32
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__Unlock@@YAHPAUIDirectDrawSurface7@@@Z
_TEXT	SEGMENT
_hRet$ = -8						; size = 4
_pDDSDest$ = 8						; size = 4
?__Unlock@@YAHPAUIDirectDrawSurface7@@@Z PROC		; __Unlock, COMDAT

; 5412 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 5413 : 	HRESULT hRet = pDDSDest->Unlock(NULL);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _pDDSDest$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pDDSDest$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+128]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hRet$[ebp], eax

; 5414 : 	if (hRet != DD_OK) { return DDERRCHK(hRet); }

	cmp	DWORD PTR _hRet$[ebp], 0
	je	SHORT $LN2@Unlock
	mov	eax, DWORD PTR ?__LINE__Var@?0??__Unlock@@YAHPAUIDirectDrawSurface7@@@Z@4JA
	add	eax, 2
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _hRet$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN1@Unlock
$LN2@Unlock:

; 5415 : 
; 5416 : 	return TRUE;

	mov	eax, 1
$LN1@Unlock:

; 5417 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?__Unlock@@YAHPAUIDirectDrawSurface7@@@Z ENDP		; __Unlock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__Lock@@YAHPAUIDirectDrawSurface7@@@Z
_TEXT	SEGMENT
_hRet$ = -8						; size = 4
_pDDSDest$ = 8						; size = 4
?__Lock@@YAHPAUIDirectDrawSurface7@@@Z PROC		; __Lock, COMDAT

; 5402 : {	

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 5403 :     ::ZeroMemory(&g_ddsd, sizeof(DDSURFACEDESC2));

	push	124					; 0000007cH
	push	0
	push	OFFSET ?g_ddsd@@3U_DDSURFACEDESC2@@A	; g_ddsd
	call	_memset
	add	esp, 12					; 0000000cH

; 5404 : 	g_ddsd.dwSize = sizeof(DDSURFACEDESC2);

	mov	DWORD PTR ?g_ddsd@@3U_DDSURFACEDESC2@@A, 124 ; 0000007cH

; 5405 : 	HRESULT hRet = pDDSDest->Lock(NULL, &g_ddsd, DDLOCK_WAIT, NULL);	

	mov	esi, esp
	push	0
	push	1
	push	OFFSET ?g_ddsd@@3U_DDSURFACEDESC2@@A	; g_ddsd
	push	0
	mov	eax, DWORD PTR _pDDSDest$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pDDSDest$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+100]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hRet$[ebp], eax

; 5406 :     if (hRet != DD_OK) { return DDERRCHK(hRet); }

	cmp	DWORD PTR _hRet$[ebp], 0
	je	SHORT $LN2@Lock
	mov	eax, DWORD PTR ?__LINE__Var@?0??__Lock@@YAHPAUIDirectDrawSurface7@@@Z@4JA
	add	eax, 4
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _hRet$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN1@Lock
$LN2@Lock:

; 5407 : 	
; 5408 : 	return TRUE;

	mov	eax, 1
$LN1@Lock:

; 5409 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?__Lock@@YAHPAUIDirectDrawSurface7@@@Z ENDP		; __Lock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?_FillRectEx@@YAXPAUIDirectDrawSurface7@@PAUtagRECT@@K@Z
_TEXT	SEGMENT
_ddrval$ = -116						; size = 4
_ddbltfx$ = -104					; size = 100
_lpDDSDest$ = 8						; size = 4
_lpRect$ = 12						; size = 4
_dwColor$ = 16						; size = 4
?_FillRectEx@@YAXPAUIDirectDrawSurface7@@PAUtagRECT@@K@Z PROC ; _FillRectEx, COMDAT

; 5923 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-312]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 5924 : 	DDBLTFX ddbltfx;	
; 5925 : 	
; 5926 : 	ZeroMemory(&ddbltfx, sizeof(ddbltfx));

	push	100					; 00000064H
	push	0
	lea	eax, DWORD PTR _ddbltfx$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 5927 : 	ddbltfx.dwSize = sizeof(ddbltfx);

	mov	DWORD PTR _ddbltfx$[ebp], 100		; 00000064H

; 5928 : 	ddbltfx.dwFillColor = dwColor;

	mov	eax, DWORD PTR _dwColor$[ebp]
	mov	DWORD PTR _ddbltfx$[ebp+80], eax

; 5929 : 
; 5930 : 	HRESULT ddrval = lpDDSDest->Blt(lpRect, NULL, NULL, DDBLT_WAIT | DDBLT_COLORFILL, &ddbltfx);

	mov	esi, esp
	lea	eax, DWORD PTR _ddbltfx$[ebp]
	push	eax
	push	16778240				; 01000400H
	push	0
	push	0
	mov	ecx, DWORD PTR _lpRect$[ebp]
	push	ecx
	mov	edx, DWORD PTR _lpDDSDest$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _lpDDSDest$[ebp]
	push	ecx
	mov	edx, DWORD PTR [eax+20]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ddrval$[ebp], eax

; 5931 : 	if (ddrval != DD_OK) DDERRCHK(ddrval);

	cmp	DWORD PTR _ddrval$[ebp], 0
	je	SHORT $LN1@FillRectEx
	mov	eax, DWORD PTR ?__LINE__Var@?0??_FillRectEx@@YAXPAUIDirectDrawSurface7@@PAUtagRECT@@K@Z@4JA
	add	eax, 8
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _ddrval$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
$LN1@FillRectEx:

; 5932 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@FillRectEx
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 312				; 00000138H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@FillRectEx:
	DD	1
	DD	$LN5@FillRectEx
$LN5@FillRectEx:
	DD	-104					; ffffff98H
	DD	100					; 00000064H
	DD	$LN4@FillRectEx
$LN4@FillRectEx:
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	98					; 00000062H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	102					; 00000066H
	DB	120					; 00000078H
	DB	0
?_FillRectEx@@YAXPAUIDirectDrawSurface7@@PAUtagRECT@@K@Z ENDP ; _FillRectEx
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__ReleaseDC@@YAXPAUIDirectDrawSurface7@@@Z
_TEXT	SEGMENT
_lpDDSDest$ = 8						; size = 4
?__ReleaseDC@@YAXPAUIDirectDrawSurface7@@@Z PROC	; __ReleaseDC, COMDAT

; 5835 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 5836 :     lpDDSDest->ReleaseDC(gHdc);

	mov	esi, esp
	mov	eax, DWORD PTR ?gHdc@@3PAUHDC__@@A	; gHdc
	push	eax
	mov	ecx, DWORD PTR _lpDDSDest$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _lpDDSDest$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+104]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 5837 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?__ReleaseDC@@YAXPAUIDirectDrawSurface7@@@Z ENDP	; __ReleaseDC
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__GetDC@@YAXPAUIDirectDrawSurface7@@@Z
_TEXT	SEGMENT
_lpDDSDest$ = 8						; size = 4
?__GetDC@@YAXPAUIDirectDrawSurface7@@@Z PROC		; __GetDC, COMDAT

; 5830 : {    

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 5831 :     lpDDSDest->GetDC(&gHdc);

	mov	esi, esp
	push	OFFSET ?gHdc@@3PAUHDC__@@A		; gHdc
	mov	eax, DWORD PTR _lpDDSDest$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _lpDDSDest$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+68]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 5832 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?__GetDC@@YAXPAUIDirectDrawSurface7@@@Z ENDP		; __GetDC
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__PutTextf@@YAXHHKPADZZ
_TEXT	SEGMENT
_pOldFont$ = -544					; size = 4
_buf$ = -532						; size = 512
_argptr$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_Color$ = 16						; size = 4
_format$ = 20						; size = 4
?__PutTextf@@YAXHHKPADZZ PROC				; __PutTextf, COMDAT

; 5874 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 944				; 000003b0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-944]
	mov	ecx, 236				; 000000ecH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 5875 : 	va_list argptr;
; 5876 : 	char    buf[512];
; 5877 : 
; 5878 : 	va_start(argptr, format);	

	lea	eax, DWORD PTR _format$[ebp+4]
	mov	DWORD PTR _argptr$[ebp], eax

; 5879 :     vsprintf(buf, format, argptr);

	mov	eax, DWORD PTR _argptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_vsprintf
	add	esp, 12					; 0000000cH

; 5880 : 	va_end(argptr);

	mov	DWORD PTR _argptr$[ebp], 0

; 5881 : 
; 5882 :     SetBkMode(gHdc, TRANSPARENT);	

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR ?gHdc@@3PAUHDC__@@A	; gHdc
	push	eax
	call	DWORD PTR __imp__SetBkMode@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 5883 :     HFONT* pOldFont = (HFONT*) SelectObject(gHdc, gFont);

	mov	esi, esp
	mov	eax, DWORD PTR ?gFont@@3PAUHFONT__@@A	; gFont
	push	eax
	mov	ecx, DWORD PTR ?gHdc@@3PAUHDC__@@A	; gHdc
	push	ecx
	call	DWORD PTR __imp__SelectObject@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pOldFont$[ebp], eax

; 5884 : 	
; 5885 : 	///// ±×¸²ÀÚ
; 5886 : 	SetTextColor(gHdc, RGB(0,0,0));

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR ?gHdc@@3PAUHDC__@@A	; gHdc
	push	eax
	call	DWORD PTR __imp__SetTextColor@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 5887 : 	TextOut(gHdc, x+1, y+1, buf, strlen(buf));

	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _x$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR ?gHdc@@3PAUHDC__@@A	; gHdc
	push	ecx
	call	DWORD PTR __imp__TextOutA@20
	cmp	esi, esp
	call	__RTC_CheckEsp

; 5888 : 	
; 5889 : 	///// ÆùÆ®
; 5890 : 	SetTextColor(gHdc, Color);

	mov	esi, esp
	mov	eax, DWORD PTR _Color$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gHdc@@3PAUHDC__@@A	; gHdc
	push	ecx
	call	DWORD PTR __imp__SetTextColor@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 5891 : 	TextOut(gHdc, x, y, buf, strlen(buf));

	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	push	edx
	mov	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gHdc@@3PAUHDC__@@A	; gHdc
	push	ecx
	call	DWORD PTR __imp__TextOutA@20
	cmp	esi, esp
	call	__RTC_CheckEsp

; 5892 :     SelectObject(gHdc, pOldFont);

	mov	esi, esp
	mov	eax, DWORD PTR _pOldFont$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gHdc@@3PAUHDC__@@A	; gHdc
	push	ecx
	call	DWORD PTR __imp__SelectObject@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 5893 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@PutTextf
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 944				; 000003b0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@PutTextf:
	DD	1
	DD	$LN4@PutTextf
$LN4@PutTextf:
	DD	-532					; fffffdecH
	DD	512					; 00000200H
	DD	$LN3@PutTextf
$LN3@PutTextf:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
?__PutTextf@@YAXHHKPADZZ ENDP				; __PutTextf
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__PutText@@YAXHHKPBD@Z
_TEXT	SEGMENT
_pOldFont$ = -8						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_Color$ = 16						; size = 4
_pString$ = 20						; size = 4
?__PutText@@YAXHHKPBD@Z PROC				; __PutText, COMDAT

; 5865 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 5866 : 	SetBkMode(gHdc, TRANSPARENT);

	mov	esi, esp
	push	1
	mov	eax, DWORD PTR ?gHdc@@3PAUHDC__@@A	; gHdc
	push	eax
	call	DWORD PTR __imp__SetBkMode@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 5867 : 	HFONT* pOldFont = (HFONT*) SelectObject(gHdc, gFont);

	mov	esi, esp
	mov	eax, DWORD PTR ?gFont@@3PAUHFONT__@@A	; gFont
	push	eax
	mov	ecx, DWORD PTR ?gHdc@@3PAUHDC__@@A	; gHdc
	push	ecx
	call	DWORD PTR __imp__SelectObject@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pOldFont$[ebp], eax

; 5868 : 	SetTextColor(gHdc, Color);

	mov	esi, esp
	mov	eax, DWORD PTR _Color$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gHdc@@3PAUHDC__@@A	; gHdc
	push	ecx
	call	DWORD PTR __imp__SetTextColor@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 5869 : 	TextOut(gHdc, x, y, pString, strlen(pString));

	mov	eax, DWORD PTR _pString$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _pString$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	push	edx
	mov	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gHdc@@3PAUHDC__@@A	; gHdc
	push	ecx
	call	DWORD PTR __imp__TextOutA@20
	cmp	esi, esp
	call	__RTC_CheckEsp

; 5870 :     SelectObject(gHdc, pOldFont);

	mov	esi, esp
	mov	eax, DWORD PTR _pOldFont$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?gHdc@@3PAUHDC__@@A	; gHdc
	push	ecx
	call	DWORD PTR __imp__SelectObject@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 5871 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?__PutText@@YAXHHKPBD@Z ENDP				; __PutText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__DestroyFont@@YAXXZ
_TEXT	SEGMENT
?__DestroyFont@@YAXXZ PROC				; __DestroyFont, COMDAT

; 5856 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 5857 : 	if (gFont) 

	cmp	DWORD PTR ?gFont@@3PAUHFONT__@@A, 0	; gFont
	je	SHORT $LN1@DestroyFon

; 5858 : 	{
; 5859 : 		DeleteObject(gFont);

	mov	esi, esp
	mov	eax, DWORD PTR ?gFont@@3PAUHFONT__@@A	; gFont
	push	eax
	call	DWORD PTR __imp__DeleteObject@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 5860 : 		gFont = NULL;

	mov	DWORD PTR ?gFont@@3PAUHFONT__@@A, 0	; gFont
$LN1@DestroyFon:

; 5861 : 	}
; 5862 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?__DestroyFont@@YAXXZ ENDP				; __DestroyFont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__CreateFont@@YAXPBDHH@Z
_TEXT	SEGMENT
_FontName$ = 8						; size = 4
_nWidth$ = 12						; size = 4
_nWeight$ = 16						; size = 4
?__CreateFont@@YAXPBDHH@Z PROC				; __CreateFont, COMDAT

; 5840 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 5841 :     gFont = CreateFont(nWidth, 0,

	mov	esi, esp
	mov	eax, DWORD PTR _FontName$[ebp]
	push	eax
	push	2
	push	3
	push	0
	push	0
	push	0
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _nWeight$[ebp]
	push	ecx
	push	0
	push	0
	push	0
	mov	edx, DWORD PTR _nWidth$[ebp]
	push	edx
	call	DWORD PTR __imp__CreateFontA@56
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR ?gFont@@3PAUHFONT__@@A, eax	; gFont

; 5842 : 					    0, 0,
; 5843 : 					    nWeight,
; 5844 : 					    FALSE,
; 5845 : 					    FALSE,
; 5846 : 					    FALSE,
; 5847 : 					    ANSI_CHARSET,
; 5848 : 					    OUT_DEFAULT_PRECIS,
; 5849 : 					    CLIP_DEFAULT_PRECIS,
; 5850 : 					    NONANTIALIASED_QUALITY,
; 5851 : 					    VARIABLE_PITCH,
; 5852 :                         FontName);
; 5853 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?__CreateFont@@YAXPBDHH@Z ENDP				; __CreateFont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__DDCSetClipperList@@YAHPAUIDirectDrawSurface7@@PAUtagRECT@@H@Z
_TEXT	SEGMENT
_ddrval$ = -20						; size = 4
_pRd$ = -8						; size = 4
_lpDDS$ = 8						; size = 4
_rcClipList$ = 12					; size = 4
_nCount$ = 16						; size = 4
?__DDCSetClipperList@@YAHPAUIDirectDrawSurface7@@PAUtagRECT@@H@Z PROC ; __DDCSetClipperList, COMDAT

; 5714 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 5715 : 	LPRGNDATA pRd;
; 5716 : 	HRESULT ddrval;
; 5717 : 
; 5718 : 	if (!g_pDDClipper) 

	cmp	DWORD PTR ?g_pDDClipper@@3PAUIDirectDrawClipper@@A, 0 ; g_pDDClipper
	jne	SHORT $LN2@DDCSetClip

; 5719 : 	{
; 5720 :         ddrval = DirectDrawCreateClipper(0, &g_pDDClipper, NULL);		

	push	0
	push	OFFSET ?g_pDDClipper@@3PAUIDirectDrawClipper@@A ; g_pDDClipper
	push	0
	call	_DirectDrawCreateClipper@12
	mov	DWORD PTR _ddrval$[ebp], eax

; 5721 : 		if (ddrval != DD_OK) return DDERRCHK(ddrval);

	cmp	DWORD PTR _ddrval$[ebp], 0
	je	SHORT $LN2@DDCSetClip
	mov	eax, DWORD PTR ?__LINE__Var@?0??__DDCSetClipperList@@YAHPAUIDirectDrawSurface7@@PAUtagRECT@@H@Z@4JA
	add	eax, 7
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _ddrval$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
	jmp	$LN1@DDCSetClip
$LN2@DDCSetClip:

; 5722 : 	}
; 5723 : 
; 5724 : 	///// RGNDATAÅ©±â+ ¹öÆÛÅ©±â ¸¸Å­ ÇÒ´ç
; 5725 : 	pRd = (LPRGNDATA) malloc(sizeof(RGNDATAHEADER)+sizeof(RECT)*nCount);	

	mov	eax, DWORD PTR ?__LINE__Var@?0??__DDCSetClipperList@@YAHPAUIDirectDrawSurface7@@PAUtagRECT@@H@Z@4JA
	add	eax, 11					; 0000000bH
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	push	1
	mov	ecx, DWORD PTR _nCount$[ebp]
	shl	ecx, 4
	add	ecx, 32					; 00000020H
	push	ecx
	call	__malloc_dbg
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRd$[ebp], eax

; 5726 : 
; 5727 : 	/////
; 5728 : 	pRd->rdh.dwSize = sizeof(RGNDATAHEADER);	

	mov	eax, DWORD PTR _pRd$[ebp]
	mov	DWORD PTR [eax], 32			; 00000020H

; 5729 : 	pRd->rdh.iType = RDH_RECTANGLES;							    // »ç°¢¿µ¿ªÀÓÀ» ÀÇ¹Ì

	mov	eax, DWORD PTR _pRd$[ebp]
	mov	DWORD PTR [eax+4], 1

; 5730 : 	pRd->rdh.nCount = nCount;										// 1°³ÀÇ ¿µ¿ªµ¥ÀÌÅÍ

	mov	eax, DWORD PTR _pRd$[ebp]
	mov	ecx, DWORD PTR _nCount$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 5731 : 	pRd->rdh.nRgnSize = sizeof(RECT) * nCount;						// ¹öÆÛµ¥ÀÌÅÍÀÇ Å©±â	

	mov	eax, DWORD PTR _nCount$[ebp]
	shl	eax, 4
	mov	ecx, DWORD PTR _pRd$[ebp]
	mov	DWORD PTR [ecx+12], eax

; 5732 : 	SetRect(&(pRd->rdh.rcBound), -8000, -8000, 8000, 8000);			// ¹Ù¿î´õ¸® ¿µ¿ª		

	mov	esi, esp
	push	8000					; 00001f40H
	push	8000					; 00001f40H
	push	-8000					; ffffe0c0H
	push	-8000					; ffffe0c0H
	mov	eax, DWORD PTR _pRd$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	call	DWORD PTR __imp__SetRect@20
	cmp	esi, esp
	call	__RTC_CheckEsp

; 5733 : 	memcpy(pRd->Buffer, rcClipList, sizeof(RECT)*nCount);			// ¿øÇÏ´Â Å¬¸³¿µ¿ª

	mov	eax, DWORD PTR _nCount$[ebp]
	shl	eax, 4
	push	eax
	mov	ecx, DWORD PTR _rcClipList$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pRd$[ebp]
	add	edx, 32					; 00000020H
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 5734 : 
; 5735 : 	///// Å¬¸³¸®½ºÆ® ¼³Á¤
; 5736 : 	ddrval = g_pDDClipper->SetClipList(pRd, 0);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _pRd$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?g_pDDClipper@@3PAUIDirectDrawClipper@@A ; g_pDDClipper
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?g_pDDClipper@@3PAUIDirectDrawClipper@@A ; g_pDDClipper
	push	eax
	mov	ecx, DWORD PTR [edx+28]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ddrval$[ebp], eax

; 5737 : 	free(pRd);

	mov	eax, DWORD PTR _pRd$[ebp]
	push	eax
	call	_free
	add	esp, 4

; 5738 :     if (ddrval != DD_OK) { return DDERRCHK(ddrval); }	

	cmp	DWORD PTR _ddrval$[ebp], 0
	je	SHORT $LN4@DDCSetClip
	mov	eax, DWORD PTR ?__LINE__Var@?0??__DDCSetClipperList@@YAHPAUIDirectDrawSurface7@@PAUtagRECT@@H@Z@4JA
	add	eax, 24					; 00000018H
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _ddrval$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN1@DDCSetClip
$LN4@DDCSetClip:

; 5739 : 	ddrval = lpDDS->SetClipper(g_pDDClipper);

	mov	esi, esp
	mov	eax, DWORD PTR ?g_pDDClipper@@3PAUIDirectDrawClipper@@A ; g_pDDClipper
	push	eax
	mov	ecx, DWORD PTR _lpDDS$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _lpDDS$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+112]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ddrval$[ebp], eax

; 5740 :     if (ddrval != DD_OK) { return DDERRCHK(ddrval); }

	cmp	DWORD PTR _ddrval$[ebp], 0
	je	SHORT $LN5@DDCSetClip
	mov	eax, DWORD PTR ?__LINE__Var@?0??__DDCSetClipperList@@YAHPAUIDirectDrawSurface7@@PAUtagRECT@@H@Z@4JA
	add	eax, 26					; 0000001aH
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _ddrval$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN1@DDCSetClip
$LN5@DDCSetClip:

; 5741 : 
; 5742 : 	return TRUE;

	mov	eax, 1
$LN1@DDCSetClip:

; 5743 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?__DDCSetClipperList@@YAHPAUIDirectDrawSurface7@@PAUtagRECT@@H@Z ENDP ; __DDCSetClipperList
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__DDCSetClipper@@YAHPAUIDirectDrawSurface7@@HHHH@Z
_TEXT	SEGMENT
_ddrval$ = -20						; size = 4
_pRd$ = -8						; size = 4
_lpDDS$ = 8						; size = 4
_x1$ = 12						; size = 4
_y1$ = 16						; size = 4
_x2$ = 20						; size = 4
_y2$ = 24						; size = 4
?__DDCSetClipper@@YAHPAUIDirectDrawSurface7@@HHHH@Z PROC ; __DDCSetClipper, COMDAT

; 5681 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 5682 : 	LPRGNDATA pRd;
; 5683 : 	HRESULT ddrval;
; 5684 : 
; 5685 : 	if (!g_pDDClipper) 

	cmp	DWORD PTR ?g_pDDClipper@@3PAUIDirectDrawClipper@@A, 0 ; g_pDDClipper
	jne	SHORT $LN2@DDCSetClip

; 5686 : 	{
; 5687 :         ddrval = DirectDrawCreateClipper(0, &g_pDDClipper, NULL);		

	push	0
	push	OFFSET ?g_pDDClipper@@3PAUIDirectDrawClipper@@A ; g_pDDClipper
	push	0
	call	_DirectDrawCreateClipper@12
	mov	DWORD PTR _ddrval$[ebp], eax

; 5688 : 		if (ddrval != DD_OK) return DDERRCHK(ddrval);

	cmp	DWORD PTR _ddrval$[ebp], 0
	je	SHORT $LN2@DDCSetClip
	mov	eax, DWORD PTR ?__LINE__Var@?0??__DDCSetClipper@@YAHPAUIDirectDrawSurface7@@HHHH@Z@4JA
	add	eax, 7
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _ddrval$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
	jmp	$LN1@DDCSetClip
$LN2@DDCSetClip:

; 5689 : 	}
; 5690 : 
; 5691 : 	///// RGNDATAÅ©±â+ ¹öÆÛÅ©±â ¸¸Å­ ÇÒ´ç
; 5692 : 	pRd = (LPRGNDATA) malloc(sizeof(RGNDATAHEADER)+sizeof(RECT));		

	mov	eax, DWORD PTR ?__LINE__Var@?0??__DDCSetClipper@@YAHPAUIDirectDrawSurface7@@HHHH@Z@4JA
	add	eax, 11					; 0000000bH
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	push	1
	push	48					; 00000030H
	call	__malloc_dbg
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pRd$[ebp], eax

; 5693 : 	
; 5694 : 	/////
; 5695 : 	pRd->rdh.dwSize = sizeof(pRd->rdh);	

	mov	eax, DWORD PTR _pRd$[ebp]
	mov	DWORD PTR [eax], 32			; 00000020H

; 5696 : 	pRd->rdh.iType = RDH_RECTANGLES;							    // »ç°¢¿µ¿ªÀÓÀ» ÀÇ¹Ì

	mov	eax, DWORD PTR _pRd$[ebp]
	mov	DWORD PTR [eax+4], 1

; 5697 : 	pRd->rdh.nCount = 1;										    // 1°³ÀÇ ¿µ¿ªµ¥ÀÌÅÍ

	mov	eax, DWORD PTR _pRd$[ebp]
	mov	DWORD PTR [eax+8], 1

; 5698 : 	pRd->rdh.nRgnSize = sizeof(RECT);								// ¹öÆÛµ¥ÀÌÅÍÀÇ Å©±â

	mov	eax, DWORD PTR _pRd$[ebp]
	mov	DWORD PTR [eax+12], 16			; 00000010H

; 5699 : 	SetRect(&(pRd->rdh.rcBound), -8000, -8000, 8000, 8000);		    // ¹Ù¿î´õ¸® ¿µ¿ª

	mov	esi, esp
	push	8000					; 00001f40H
	push	8000					; 00001f40H
	push	-8000					; ffffe0c0H
	push	-8000					; ffffe0c0H
	mov	eax, DWORD PTR _pRd$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	call	DWORD PTR __imp__SetRect@20
	cmp	esi, esp
	call	__RTC_CheckEsp

; 5700 : 	SetRect((RECT*)(pRd->Buffer), x1, y1, x2, y2);					// ¿øÇÏ´Â Å¬¸³¿µ¿ª	

	mov	esi, esp
	mov	eax, DWORD PTR _y2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y1$[ebp]
	push	edx
	mov	eax, DWORD PTR _x1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pRd$[ebp]
	add	ecx, 32					; 00000020H
	push	ecx
	call	DWORD PTR __imp__SetRect@20
	cmp	esi, esp
	call	__RTC_CheckEsp

; 5701 : 
; 5702 : 	///// Å¬¸³¸®½ºÆ® ¼³Á¤
; 5703 : 	ddrval = g_pDDClipper->SetClipList(pRd, 0);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _pRd$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?g_pDDClipper@@3PAUIDirectDrawClipper@@A ; g_pDDClipper
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?g_pDDClipper@@3PAUIDirectDrawClipper@@A ; g_pDDClipper
	push	eax
	mov	ecx, DWORD PTR [edx+28]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ddrval$[ebp], eax

; 5704 : 	free(pRd);

	mov	eax, DWORD PTR _pRd$[ebp]
	push	eax
	call	_free
	add	esp, 4

; 5705 :     if (ddrval != DD_OK) { return DDERRCHK(ddrval); }

	cmp	DWORD PTR _ddrval$[ebp], 0
	je	SHORT $LN4@DDCSetClip
	mov	eax, DWORD PTR ?__LINE__Var@?0??__DDCSetClipper@@YAHPAUIDirectDrawSurface7@@HHHH@Z@4JA
	add	eax, 24					; 00000018H
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _ddrval$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN1@DDCSetClip
$LN4@DDCSetClip:

; 5706 : 	
; 5707 : 	ddrval = lpDDS->SetClipper(g_pDDClipper);

	mov	esi, esp
	mov	eax, DWORD PTR ?g_pDDClipper@@3PAUIDirectDrawClipper@@A ; g_pDDClipper
	push	eax
	mov	ecx, DWORD PTR _lpDDS$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _lpDDS$[ebp]
	push	eax
	mov	ecx, DWORD PTR [edx+112]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ddrval$[ebp], eax

; 5708 :     if (ddrval != DD_OK) { return DDERRCHK(ddrval); }

	cmp	DWORD PTR _ddrval$[ebp], 0
	je	SHORT $LN5@DDCSetClip
	mov	eax, DWORD PTR ?__LINE__Var@?0??__DDCSetClipper@@YAHPAUIDirectDrawSurface7@@HHHH@Z@4JA
	add	eax, 27					; 0000001bH
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _ddrval$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN1@DDCSetClip
$LN5@DDCSetClip:

; 5709 : 
; 5710 : 	return TRUE;

	mov	eax, 1
$LN1@DDCSetClip:

; 5711 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?__DDCSetClipper@@YAHPAUIDirectDrawSurface7@@HHHH@Z ENDP ; __DDCSetClipper
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__DDCSetClipperWin@@YAHXZ
_TEXT	SEGMENT
_ddrval$ = -8						; size = 4
?__DDCSetClipperWin@@YAHXZ PROC				; __DDCSetClipperWin, COMDAT

; 5659 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 5660 : 	HRESULT ddrval;
; 5661 : 
; 5662 : 	//// Å¬¸³ÆÛ°´Ã¼ »ý¼º
; 5663 : 	if (!g_pDDClipper) 

	cmp	DWORD PTR ?g_pDDClipper@@3PAUIDirectDrawClipper@@A, 0 ; g_pDDClipper
	jne	SHORT $LN2@DDCSetClip

; 5664 : 	{
; 5665 :         ddrval = DirectDrawCreateClipper(0, &g_pDDClipper, NULL);		

	push	0
	push	OFFSET ?g_pDDClipper@@3PAUIDirectDrawClipper@@A ; g_pDDClipper
	push	0
	call	_DirectDrawCreateClipper@12
	mov	DWORD PTR _ddrval$[ebp], eax

; 5666 : 		if (ddrval != DD_OK) return DDERRCHK(ddrval);

	cmp	DWORD PTR _ddrval$[ebp], 0
	je	SHORT $LN2@DDCSetClip
	mov	eax, DWORD PTR ?__LINE__Var@?0??__DDCSetClipperWin@@YAHXZ@4JA
	add	eax, 7
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _ddrval$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
	jmp	$LN1@DDCSetClip
$LN2@DDCSetClip:

; 5667 : 	}
; 5668 : 
; 5669 : 	//// ¿øµµ¿ì ÇÚµé¿¡ Å¬¸³ÆÛ °´Ã¼¸¦ Àû¿ë, Ã¹¹øÂ°ÀÎÀÚ´Â 0
; 5670 : 	ddrval = g_pDDClipper->SetHWnd(0, hWnd);

	mov	esi, esp
	mov	eax, DWORD PTR ?hWnd@@3PAUHWND__@@A	; hWnd
	push	eax
	push	0
	mov	ecx, DWORD PTR ?g_pDDClipper@@3PAUIDirectDrawClipper@@A ; g_pDDClipper
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?g_pDDClipper@@3PAUIDirectDrawClipper@@A ; g_pDDClipper
	push	eax
	mov	ecx, DWORD PTR [edx+32]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ddrval$[ebp], eax

; 5671 : 	if (ddrval != DD_OK) { return DDERRCHK(ddrval); }

	cmp	DWORD PTR _ddrval$[ebp], 0
	je	SHORT $LN4@DDCSetClip
	mov	eax, DWORD PTR ?__LINE__Var@?0??__DDCSetClipperWin@@YAHXZ@4JA
	add	eax, 12					; 0000000cH
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _ddrval$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN1@DDCSetClip
$LN4@DDCSetClip:

; 5672 : 
; 5673 : 	//// Å¬¸³ÆÛ°´Ã¼¸¦ 1Â÷Ç¥¸é¿¡ Àû¿ë
; 5674 : 	ddrval = g_pDDSPrimary->SetClipper(g_pDDClipper);

	mov	esi, esp
	mov	eax, DWORD PTR ?g_pDDClipper@@3PAUIDirectDrawClipper@@A ; g_pDDClipper
	push	eax
	mov	ecx, DWORD PTR ?g_pDDSPrimary@@3PAUIDirectDrawSurface7@@A ; g_pDDSPrimary
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?g_pDDSPrimary@@3PAUIDirectDrawSurface7@@A ; g_pDDSPrimary
	push	eax
	mov	ecx, DWORD PTR [edx+112]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ddrval$[ebp], eax

; 5675 : 	if (ddrval != DD_OK) { return DDERRCHK(ddrval); }

	cmp	DWORD PTR _ddrval$[ebp], 0
	je	SHORT $LN5@DDCSetClip
	mov	eax, DWORD PTR ?__LINE__Var@?0??__DDCSetClipperWin@@YAHXZ@4JA
	add	eax, 16					; 00000010H
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _ddrval$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN1@DDCSetClip
$LN5@DDCSetClip:

; 5676 : 
; 5677 : 	return TRUE;

	mov	eax, 1
$LN1@DDCSetClip:

; 5678 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?__DDCSetClipperWin@@YAHXZ ENDP				; __DDCSetClipperWin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__CreateSurface@@YAPAUIDirectDrawSurface7@@KKH@Z
_TEXT	SEGMENT
_lpDDS$ = -156						; size = 4
_ddsd$ = -144						; size = 124
_ddrval$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_dwWidth$ = 8						; size = 4
_dwHeight$ = 12						; size = 4
_bIsVram$ = 16						; size = 4
?__CreateSurface@@YAPAUIDirectDrawSurface7@@KKH@Z PROC	; __CreateSurface, COMDAT

; 5745 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 352				; 00000160H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-352]
	mov	ecx, 88					; 00000058H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 5746 : 	HRESULT ddrval;
; 5747 : 	DDSURFACEDESC2 ddsd;
; 5748 : 
; 5749 : 	///// ¿ÀÇÁ½ºÅ©¸°À» »ý¼º
; 5750 : 	memset(&ddsd, 0, sizeof(ddsd));

	push	124					; 0000007cH
	push	0
	lea	eax, DWORD PTR _ddsd$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 5751 : 	ddsd.dwSize  = sizeof(ddsd);

	mov	DWORD PTR _ddsd$[ebp], 124		; 0000007cH

; 5752 : 	ddsd.dwFlags = DDSD_CAPS | DDSD_HEIGHT | DDSD_WIDTH;

	mov	DWORD PTR _ddsd$[ebp+4], 7

; 5753 : 	if (bIsVram)

	cmp	DWORD PTR _bIsVram$[ebp], 0
	je	SHORT $LN2@CreateSurf

; 5754 : 		ddsd.ddsCaps.dwCaps = DDSCAPS_OFFSCREENPLAIN|DDSCAPS_VIDEOMEMORY;

	mov	DWORD PTR _ddsd$[ebp+104], 16448	; 00004040H

; 5755 : 	else

	jmp	SHORT $LN3@CreateSurf
$LN2@CreateSurf:

; 5756 : 		ddsd.ddsCaps.dwCaps = DDSCAPS_OFFSCREENPLAIN|DDSCAPS_SYSTEMMEMORY;

	mov	DWORD PTR _ddsd$[ebp+104], 2112		; 00000840H
$LN3@CreateSurf:

; 5757 : 
; 5758 : 	ddsd.dwHeight = dwHeight;

	mov	eax, DWORD PTR _dwHeight$[ebp]
	mov	DWORD PTR _ddsd$[ebp+8], eax

; 5759 : 	ddsd.dwWidth  = dwWidth;

	mov	eax, DWORD PTR _dwWidth$[ebp]
	mov	DWORD PTR _ddsd$[ebp+12], eax

; 5760 : 
; 5761 :     /////
; 5762 :     LPDIRECTDRAWSURFACE7 lpDDS = NULL;

	mov	DWORD PTR _lpDDS$[ebp], 0

; 5763 :     ddrval = g_pDD->CreateSurface(&ddsd, &lpDDS, NULL);

	mov	esi, esp
	push	0
	lea	eax, DWORD PTR _lpDDS$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ddsd$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	ecx
	mov	edx, DWORD PTR [eax+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ddrval$[ebp], eax

; 5764 :     if (ddrval == DDERR_OUTOFVIDEOMEMORY)

	cmp	DWORD PTR _ddrval$[ebp], -2005532292	; 8876017cH
	jne	SHORT $LN4@CreateSurf

; 5765 :     {
; 5766 :         ddsd.ddsCaps.dwCaps = DDSCAPS_OFFSCREENPLAIN | DDSCAPS_SYSTEMMEMORY;

	mov	DWORD PTR _ddsd$[ebp+104], 2112		; 00000840H

; 5767 :         ddrval = g_pDD->CreateSurface(&ddsd, &lpDDS, NULL);

	mov	esi, esp
	push	0
	lea	eax, DWORD PTR _lpDDS$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ddsd$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	ecx
	mov	edx, DWORD PTR [eax+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ddrval$[ebp], eax
$LN4@CreateSurf:

; 5768 :     }
; 5769 :     if (ddrval != DD_OK) { DDERRCHK(ddrval); return NULL; }

	cmp	DWORD PTR _ddrval$[ebp], 0
	je	SHORT $LN5@CreateSurf
	mov	eax, DWORD PTR ?__LINE__Var@?0??__CreateSurface@@YAPAUIDirectDrawSurface7@@KKH@Z@4JA
	add	eax, 24					; 00000018H
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _ddrval$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
	xor	eax, eax
	jmp	SHORT $LN1@CreateSurf
$LN5@CreateSurf:

; 5770 : 
; 5771 :     return lpDDS;

	mov	eax, DWORD PTR _lpDDS$[ebp]
$LN1@CreateSurf:

; 5772 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@CreateSurf
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 352				; 00000160H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN10@CreateSurf:
	DD	2
	DD	$LN9@CreateSurf
$LN9@CreateSurf:
	DD	-144					; ffffff70H
	DD	124					; 0000007cH
	DD	$LN7@CreateSurf
	DD	-156					; ffffff64H
	DD	4
	DD	$LN8@CreateSurf
$LN8@CreateSurf:
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	68					; 00000044H
	DB	83					; 00000053H
	DB	0
$LN7@CreateSurf:
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	100					; 00000064H
	DB	0
?__CreateSurface@@YAPAUIDirectDrawSurface7@@KKH@Z ENDP	; __CreateSurface
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__ReleaseAllObjects@@YAXXZ
_TEXT	SEGMENT
?__ReleaseAllObjects@@YAXXZ PROC			; __ReleaseAllObjects, COMDAT

; 5787 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 5788 :     if (g_pDD != NULL)

	cmp	DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A, 0 ; g_pDD
	je	$LN1@ReleaseAll

; 5789 :     {
; 5790 : 		if (g_pDDSSBuffer2 != NULL)

	cmp	DWORD PTR ?g_pDDSSBuffer2@@3PAUIDirectDrawSurface7@@A, 0 ; g_pDDSSBuffer2
	je	SHORT $LN3@ReleaseAll

; 5791 : 		{
; 5792 : 			g_pDDSSBuffer2->Release();

	mov	eax, DWORD PTR ?g_pDDSSBuffer2@@3PAUIDirectDrawSurface7@@A ; g_pDDSSBuffer2
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?g_pDDSSBuffer2@@3PAUIDirectDrawSurface7@@A ; g_pDDSSBuffer2
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 5793 : 			g_pDDSSBuffer2 = NULL;

	mov	DWORD PTR ?g_pDDSSBuffer2@@3PAUIDirectDrawSurface7@@A, 0 ; g_pDDSSBuffer2
$LN3@ReleaseAll:

; 5794 : 		}		
; 5795 : 		if (g_pDDSSBuffer != NULL)

	cmp	DWORD PTR ?g_pDDSSBuffer@@3PAUIDirectDrawSurface7@@A, 0 ; g_pDDSSBuffer
	je	SHORT $LN4@ReleaseAll

; 5796 : 		{
; 5797 : 			g_pDDSSBuffer->Release();

	mov	eax, DWORD PTR ?g_pDDSSBuffer@@3PAUIDirectDrawSurface7@@A ; g_pDDSSBuffer
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?g_pDDSSBuffer@@3PAUIDirectDrawSurface7@@A ; g_pDDSSBuffer
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 5798 : 			g_pDDSSBuffer = NULL;

	mov	DWORD PTR ?g_pDDSSBuffer@@3PAUIDirectDrawSurface7@@A, 0 ; g_pDDSSBuffer
$LN4@ReleaseAll:

; 5799 : 		}		
; 5800 : 		if (g_pDDSVBuffer != NULL)

	cmp	DWORD PTR ?g_pDDSVBuffer@@3PAUIDirectDrawSurface7@@A, 0 ; g_pDDSVBuffer
	je	SHORT $LN5@ReleaseAll

; 5801 : 		{
; 5802 : 			g_pDDSVBuffer->Release();

	mov	eax, DWORD PTR ?g_pDDSVBuffer@@3PAUIDirectDrawSurface7@@A ; g_pDDSVBuffer
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?g_pDDSVBuffer@@3PAUIDirectDrawSurface7@@A ; g_pDDSVBuffer
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 5803 : 			g_pDDSVBuffer = NULL;

	mov	DWORD PTR ?g_pDDSVBuffer@@3PAUIDirectDrawSurface7@@A, 0 ; g_pDDSVBuffer
$LN5@ReleaseAll:

; 5804 : 		}
; 5805 :         if (g_pDDPal != NULL)

	cmp	DWORD PTR ?g_pDDPal@@3PAUIDirectDrawPalette@@A, 0 ; g_pDDPal
	je	SHORT $LN6@ReleaseAll

; 5806 :         {
; 5807 :             g_pDDPal->Release();

	mov	eax, DWORD PTR ?g_pDDPal@@3PAUIDirectDrawPalette@@A ; g_pDDPal
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?g_pDDPal@@3PAUIDirectDrawPalette@@A ; g_pDDPal
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 5808 :             g_pDDPal = NULL;

	mov	DWORD PTR ?g_pDDPal@@3PAUIDirectDrawPalette@@A, 0 ; g_pDDPal
$LN6@ReleaseAll:

; 5809 :         }
; 5810 : 
; 5811 :         if (g_pDDSOne != NULL)

	cmp	DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A, 0 ; g_pDDSOne
	je	SHORT $LN7@ReleaseAll

; 5812 :         {
; 5813 :             g_pDDSOne->Release();

	mov	eax, DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A ; g_pDDSOne
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A ; g_pDDSOne
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 5814 :             g_pDDSOne = NULL;

	mov	DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A, 0 ; g_pDDSOne
$LN7@ReleaseAll:

; 5815 :         }
; 5816 : 
; 5817 :         if (g_pDDSPrimary != NULL)

	cmp	DWORD PTR ?g_pDDSPrimary@@3PAUIDirectDrawSurface7@@A, 0 ; g_pDDSPrimary
	je	SHORT $LN8@ReleaseAll

; 5818 :         {
; 5819 :             g_pDDSPrimary->Release();

	mov	eax, DWORD PTR ?g_pDDSPrimary@@3PAUIDirectDrawSurface7@@A ; g_pDDSPrimary
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?g_pDDSPrimary@@3PAUIDirectDrawSurface7@@A ; g_pDDSPrimary
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 5820 :             g_pDDSPrimary = NULL;

	mov	DWORD PTR ?g_pDDSPrimary@@3PAUIDirectDrawSurface7@@A, 0 ; g_pDDSPrimary
$LN8@ReleaseAll:

; 5821 :         }
; 5822 :         g_pDD->Release();

	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 5823 :         g_pDD = NULL;

	mov	DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A, 0 ; g_pDD
$LN1@ReleaseAll:

; 5824 :     }
; 5825 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?__ReleaseAllObjects@@YAXXZ ENDP			; __ReleaseAllObjects
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__DDSWBlt@@YAJXZ
_TEXT	SEGMENT
_pt$ = -40						; size = 8
_rcDest$ = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
?__DDSWBlt@@YAJXZ PROC					; __DDSWBlt, COMDAT

; 5775 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 5776 :     RECT  rcDest;
; 5777 : 	POINT pt = {0, 0};	

	mov	DWORD PTR _pt$[ebp], 0
	mov	DWORD PTR _pt$[ebp+4], 0

; 5778 : 
; 5779 : 	/////
; 5780 : 	::GetClientRect(hWnd, &rcDest);

	mov	esi, esp
	lea	eax, DWORD PTR _rcDest$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?hWnd@@3PAUHWND__@@A	; hWnd
	push	ecx
	call	DWORD PTR __imp__GetClientRect@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 5781 : 	::ClientToScreen(hWnd, &pt);

	mov	esi, esp
	lea	eax, DWORD PTR _pt$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?hWnd@@3PAUHWND__@@A	; hWnd
	push	ecx
	call	DWORD PTR __imp__ClientToScreen@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 5782 : 	::OffsetRect(&rcDest, pt.x, pt.y);

	mov	esi, esp
	mov	eax, DWORD PTR _pt$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _pt$[ebp]
	push	ecx
	lea	edx, DWORD PTR _rcDest$[ebp]
	push	edx
	call	DWORD PTR __imp__OffsetRect@12
	cmp	esi, esp
	call	__RTC_CheckEsp

; 5783 : 
; 5784 : 	return g_pDDSPrimary->Blt(&rcDest, g_pDDSBack, NULL, DDBLT_WAIT, NULL);

	mov	esi, esp
	push	0
	push	16777216				; 01000000H
	push	0
	mov	eax, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	push	eax
	lea	ecx, DWORD PTR _rcDest$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSPrimary@@3PAUIDirectDrawSurface7@@A ; g_pDDSPrimary
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR ?g_pDDSPrimary@@3PAUIDirectDrawSurface7@@A ; g_pDDSPrimary
	push	ecx
	mov	edx, DWORD PTR [eax+20]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 5785 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@DDSWBlt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@DDSWBlt:
	DD	2
	DD	$LN5@DDSWBlt
$LN5@DDSWBlt:
	DD	-24					; ffffffe8H
	DD	16					; 00000010H
	DD	$LN3@DDSWBlt
	DD	-40					; ffffffd8H
	DD	8
	DD	$LN4@DDSWBlt
$LN4@DDSWBlt:
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	0
$LN3@DDSWBlt:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
?__DDSWBlt@@YAJXZ ENDP					; __DDSWBlt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__DDInitWin@@YAHH@Z
_TEXT	SEGMENT
_lpDD$ = -180						; size = 4
_nBitPixel$ = -168					; size = 4
_hdc$ = -156						; size = 4
_ddrval$ = -144						; size = 4
_ddsd$ = -132						; size = 124
__$ArrayPad$ = -4					; size = 4
_bIsVRAM$ = 8						; size = 4
?__DDInitWin@@YAHH@Z PROC				; __DDInitWin, COMDAT

; 5612 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 376				; 00000178H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-376]
	mov	ecx, 94					; 0000005eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 5613 : 	DDSURFACEDESC2 ddsd;
; 5614 : 	HRESULT        ddrval;
; 5615 : 
; 5616 :     /////
; 5617 :     HDC hdc = GetDC(hWnd);

	mov	esi, esp
	mov	eax, DWORD PTR ?hWnd@@3PAUHWND__@@A	; hWnd
	push	eax
	call	DWORD PTR __imp__GetDC@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hdc$[ebp], eax

; 5618 :     int nBitPixel = GetDeviceCaps(hdc, BITSPIXEL);

	mov	esi, esp
	push	12					; 0000000cH
	mov	eax, DWORD PTR _hdc$[ebp]
	push	eax
	call	DWORD PTR __imp__GetDeviceCaps@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nBitPixel$[ebp], eax

; 5619 :     ReleaseDC(hWnd, hdc);

	mov	esi, esp
	mov	eax, DWORD PTR _hdc$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?hWnd@@3PAUHWND__@@A	; hWnd
	push	ecx
	call	DWORD PTR __imp__ReleaseDC@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 5620 :     if (nBitPixel != nBitPixel)

	mov	eax, DWORD PTR _nBitPixel$[ebp]
	cmp	eax, DWORD PTR _nBitPixel$[ebp]
	je	SHORT $LN2@DDInitWin

; 5621 :     {
; 5622 :         TRACE0("À©µµ¿ì¸ðµå ¼³Á¤ ½ÇÆÐ - ÇöÀçÀÇ ÄÃ·¯¸ðµå¿Í ½ÇÇà¸ðµå°¡ ´Ù¸¨´Ï´Ù\n");

	push	OFFSET ??_C@_0DO@MBFLDADI@?$MA?$KJ?$LF?$LF?$LP?l?$LI?p?$LF?e?5?$LM?$LD?A?$KE?5?$LN?G?F?P?5?9?5?G?v?$MA?g?$MA?G?5?D@
	call	?___Trace0@@YAXPAD@Z			; ___Trace0
	add	esp, 4

; 5623 :         return FALSE;

	xor	eax, eax
	jmp	$LN1@DDInitWin
$LN2@DDInitWin:

; 5624 :     }
; 5625 : 
; 5626 : 	///// ´ÙÀÌ·ºÆ® µå·Î¿ì °´Ã¼ »ý¼º 
; 5627 :   	LPDIRECTDRAW lpDD;
; 5628 : 	ddrval = DirectDrawCreate(NULL, &lpDD, NULL);

	push	0
	lea	eax, DWORD PTR _lpDD$[ebp]
	push	eax
	push	0
	call	_DirectDrawCreate@12
	mov	DWORD PTR _ddrval$[ebp], eax

; 5629 : 	if (ddrval != DD_OK) return DDERRCHK(ddrval);

	cmp	DWORD PTR _ddrval$[ebp], 0
	je	SHORT $LN3@DDInitWin
	mov	eax, DWORD PTR ?__LINE__Var@?0??__DDInitWin@@YAHH@Z@4JA
	add	eax, 17					; 00000011H
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _ddrval$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
	jmp	$LN1@DDInitWin
$LN3@DDInitWin:

; 5630 : 	ddrval = lpDD->QueryInterface(IID_IDirectDraw7, (LPVOID*)&g_pDD);

	mov	esi, esp
	push	OFFSET ?g_pDD@@3PAUIDirectDraw7@@A	; g_pDD
	push	OFFSET _IID_IDirectDraw7
	mov	eax, DWORD PTR _lpDD$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _lpDD$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ddrval$[ebp], eax

; 5631 :     if (ddrval != DD_OK) return DDERRCHK(ddrval);

	cmp	DWORD PTR _ddrval$[ebp], 0
	je	SHORT $LN4@DDInitWin
	mov	eax, DWORD PTR ?__LINE__Var@?0??__DDInitWin@@YAHH@Z@4JA
	add	eax, 19					; 00000013H
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _ddrval$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
	jmp	$LN1@DDInitWin
$LN4@DDInitWin:

; 5632 : 	lpDD->Release();

	mov	eax, DWORD PTR _lpDD$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _lpDD$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 5633 : 	
; 5634 : 	///// À©µµ¿ì¸ðµå·Î ¼³Á¤
; 5635 : 	ddrval = g_pDD->SetCooperativeLevel(hWnd, DDSCL_NORMAL);

	mov	esi, esp
	push	8
	mov	eax, DWORD PTR ?hWnd@@3PAUHWND__@@A	; hWnd
	push	eax
	mov	ecx, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	mov	ecx, DWORD PTR [edx+80]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ddrval$[ebp], eax

; 5636 : 	if (ddrval != DD_OK) return DDERRCHK(ddrval);

	cmp	DWORD PTR _ddrval$[ebp], 0
	je	SHORT $LN5@DDInitWin
	mov	eax, DWORD PTR ?__LINE__Var@?0??__DDInitWin@@YAHH@Z@4JA
	add	eax, 24					; 00000018H
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _ddrval$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
	jmp	$LN1@DDInitWin
$LN5@DDInitWin:

; 5637 :  
; 5638 : 	///// 1Â÷Ç¥¸éÀ» »ý¼º
; 5639 : 	ZeroMemory(&ddsd, sizeof(ddsd));

	push	124					; 0000007cH
	push	0
	lea	eax, DWORD PTR _ddsd$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 5640 : 	ddsd.dwSize            = sizeof(ddsd);

	mov	DWORD PTR _ddsd$[ebp], 124		; 0000007cH

; 5641 : 	ddsd.dwFlags           = DDSD_CAPS;

	mov	DWORD PTR _ddsd$[ebp+4], 1

; 5642 : 	ddsd.ddsCaps.dwCaps    = DDSCAPS_PRIMARYSURFACE;

	mov	DWORD PTR _ddsd$[ebp+104], 512		; 00000200H

; 5643 : 	
; 5644 :     ddrval = g_pDD->CreateSurface(&ddsd, &g_pDDSPrimary, NULL);    

	mov	esi, esp
	push	0
	push	OFFSET ?g_pDDSPrimary@@3PAUIDirectDrawSurface7@@A ; g_pDDSPrimary
	lea	eax, DWORD PTR _ddsd$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	mov	ecx, DWORD PTR [edx+24]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ddrval$[ebp], eax

; 5645 : 	if (ddrval != DD_OK) return DDERRCHK(ddrval);

	cmp	DWORD PTR _ddrval$[ebp], 0
	je	SHORT $LN6@DDInitWin
	mov	eax, DWORD PTR ?__LINE__Var@?0??__DDInitWin@@YAHH@Z@4JA
	add	eax, 33					; 00000021H
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _ddrval$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN1@DDInitWin
$LN6@DDInitWin:

; 5646 : 
; 5647 : 	///// 2Â÷Ç¥¸é
; 5648 : 	g_pDDSBack = __CreateSurface(HRES, VRES, bIsVRAM);

	mov	eax, DWORD PTR _bIsVRAM$[ebp]
	push	eax
	push	768					; 00000300H
	push	1024					; 00000400H
	call	?__CreateSurface@@YAPAUIDirectDrawSurface7@@KKH@Z ; __CreateSurface
	add	esp, 12					; 0000000cH
	mov	DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSBack

; 5649 : 
; 5650 : 	/////
; 5651 : 	TRACE0("WindowMode Init.\n");

	push	OFFSET ??_C@_0BC@DCLIPGJC@WindowMode?5Init?4?6@
	call	?___Trace0@@YAXPAD@Z			; ___Trace0
	add	esp, 4

; 5652 : 
; 5653 : 	gbIsFull = FALSE;

	mov	DWORD PTR ?gbIsFull@@3HA, 0		; gbIsFull

; 5654 : 
; 5655 : 	return TRUE;

	mov	eax, 1
$LN1@DDInitWin:

; 5656 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@DDInitWin
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 376				; 00000178H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN11@DDInitWin:
	DD	2
	DD	$LN10@DDInitWin
$LN10@DDInitWin:
	DD	-132					; ffffff7cH
	DD	124					; 0000007cH
	DD	$LN8@DDInitWin
	DD	-180					; ffffff4cH
	DD	4
	DD	$LN9@DDInitWin
$LN9@DDInitWin:
	DB	108					; 0000006cH
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	68					; 00000044H
	DB	0
$LN8@DDInitWin:
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	100					; 00000064H
	DB	0
?__DDInitWin@@YAHH@Z ENDP				; __DDInitWin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__DDInit@@YAHXZ
_TEXT	SEGMENT
_hRet$ = -168						; size = 4
_ddscaps$ = -156					; size = 16
_ddsd$ = -132						; size = 124
__$ArrayPad$ = -4					; size = 4
?__DDInit@@YAHXZ PROC					; __DDInit, COMDAT

; 5567 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 364				; 0000016cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-364]
	mov	ecx, 91					; 0000005bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 5568 :     ///////////////////////////////////////////////////////////////////////////
; 5569 :     // Create the main DirectDraw object
; 5570 :     ///////////////////////////////////////////////////////////////////////////		
; 5571 :     DDSURFACEDESC2  ddsd;
; 5572 :     DDSCAPS2        ddscaps;
; 5573 : 	HRESULT			hRet;
; 5574 : 
; 5575 :     hRet = DirectDrawCreateEx(NULL, (VOID**)&g_pDD, IID_IDirectDraw7, NULL);

	push	0
	push	OFFSET _IID_IDirectDraw7
	push	OFFSET ?g_pDD@@3PAUIDirectDraw7@@A	; g_pDD
	push	0
	call	_DirectDrawCreateEx@16
	mov	DWORD PTR _hRet$[ebp], eax

; 5576 :     if (hRet != DD_OK) return DDERRCHK(hRet);

	cmp	DWORD PTR _hRet$[ebp], 0
	je	SHORT $LN2@DDInit
	mov	eax, DWORD PTR ?__LINE__Var@?0??__DDInit@@YAHXZ@4JA
	add	eax, 9
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _hRet$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
	jmp	$LN1@DDInit
$LN2@DDInit:

; 5577 : 	
; 5578 :     // Get exclusive mode
; 5579 :     hRet = g_pDD->SetCooperativeLevel(hWnd, DDSCL_EXCLUSIVE | DDSCL_FULLSCREEN);

	mov	esi, esp
	push	17					; 00000011H
	mov	eax, DWORD PTR ?hWnd@@3PAUHWND__@@A	; hWnd
	push	eax
	mov	ecx, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	mov	ecx, DWORD PTR [edx+80]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hRet$[ebp], eax

; 5580 :     if (hRet != DD_OK) return DDERRCHK(hRet);        

	cmp	DWORD PTR _hRet$[ebp], 0
	je	SHORT $LN3@DDInit
	mov	eax, DWORD PTR ?__LINE__Var@?0??__DDInit@@YAHXZ@4JA
	add	eax, 13					; 0000000dH
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _hRet$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
	jmp	$LN1@DDInit
$LN3@DDInit:

; 5581 : 
; 5582 :     // Set the video mode 
; 5583 :     hRet = g_pDD->SetDisplayMode(HRES, VRES, BPP, REF, 0);

	mov	esi, esp
	push	0
	push	0
	push	16					; 00000010H
	push	768					; 00000300H
	push	1024					; 00000400H
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	edx
	mov	eax, DWORD PTR [ecx+84]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hRet$[ebp], eax

; 5584 :     if (hRet != DD_OK) return DDERRCHK(hRet);        

	cmp	DWORD PTR _hRet$[ebp], 0
	je	SHORT $LN4@DDInit
	mov	eax, DWORD PTR ?__LINE__Var@?0??__DDInit@@YAHXZ@4JA
	add	eax, 17					; 00000011H
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _hRet$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
	jmp	$LN1@DDInit
$LN4@DDInit:

; 5585 : 
; 5586 :     // Create the primary surface with 1 back buffer
; 5587 :     ZeroMemory(&ddsd, sizeof(ddsd));

	push	124					; 0000007cH
	push	0
	lea	eax, DWORD PTR _ddsd$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 5588 :     ddsd.dwSize = sizeof(ddsd);

	mov	DWORD PTR _ddsd$[ebp], 124		; 0000007cH

; 5589 :     ddsd.dwFlags = DDSD_CAPS | DDSD_BACKBUFFERCOUNT;

	mov	DWORD PTR _ddsd$[ebp+4], 33		; 00000021H

; 5590 :     ddsd.ddsCaps.dwCaps = DDSCAPS_PRIMARYSURFACE |

	mov	DWORD PTR _ddsd$[ebp+104], 536		; 00000218H

; 5591 :                           DDSCAPS_FLIP |
; 5592 :                           DDSCAPS_COMPLEX;
; 5593 :     ddsd.dwBackBufferCount = BBC;

	mov	DWORD PTR _ddsd$[ebp+20], 1

; 5594 :     hRet = g_pDD->CreateSurface(&ddsd, &g_pDDSPrimary, NULL);

	mov	esi, esp
	push	0
	push	OFFSET ?g_pDDSPrimary@@3PAUIDirectDrawSurface7@@A ; g_pDDSPrimary
	lea	eax, DWORD PTR _ddsd$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	mov	ecx, DWORD PTR [edx+24]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hRet$[ebp], eax

; 5595 :     if (hRet != DD_OK) return DDERRCHK(hRet);        

	cmp	DWORD PTR _hRet$[ebp], 0
	je	SHORT $LN5@DDInit
	mov	eax, DWORD PTR ?__LINE__Var@?0??__DDInit@@YAHXZ@4JA
	add	eax, 28					; 0000001cH
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _hRet$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
	jmp	$LN1@DDInit
$LN5@DDInit:

; 5596 : 
; 5597 :     // Get a pointer to the back buffer
; 5598 :     ZeroMemory(&ddscaps, sizeof(ddscaps));

	push	16					; 00000010H
	push	0
	lea	eax, DWORD PTR _ddscaps$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 5599 :     ddscaps.dwCaps = DDSCAPS_BACKBUFFER;

	mov	DWORD PTR _ddscaps$[ebp], 4

; 5600 :     hRet = g_pDDSPrimary->GetAttachedSurface(&ddscaps, &g_pDDSBack);

	mov	esi, esp
	push	OFFSET ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	lea	eax, DWORD PTR _ddscaps$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?g_pDDSPrimary@@3PAUIDirectDrawSurface7@@A ; g_pDDSPrimary
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR ?g_pDDSPrimary@@3PAUIDirectDrawSurface7@@A ; g_pDDSPrimary
	push	eax
	mov	ecx, DWORD PTR [edx+48]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hRet$[ebp], eax

; 5601 :     if (hRet != DD_OK) return DDERRCHK(hRet);

	cmp	DWORD PTR _hRet$[ebp], 0
	je	SHORT $LN6@DDInit
	mov	eax, DWORD PTR ?__LINE__Var@?0??__DDInit@@YAHXZ@4JA
	add	eax, 34					; 00000022H
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _hRet$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN1@DDInit
$LN6@DDInit:

; 5602 : 
; 5603 : 	/////
; 5604 : 	TRACE0("FullMode Init.\n");

	push	OFFSET ??_C@_0BA@GIFBBLHC@FullMode?5Init?4?6@
	call	?___Trace0@@YAXPAD@Z			; ___Trace0
	add	esp, 4

; 5605 : 
; 5606 : 	gbIsFull = TRUE;

	mov	DWORD PTR ?gbIsFull@@3HA, 1		; gbIsFull

; 5607 : 
; 5608 : 	return TRUE;

	mov	eax, 1
$LN1@DDInit:

; 5609 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@DDInit
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 364				; 0000016cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN11@DDInit:
	DD	2
	DD	$LN10@DDInit
$LN10@DDInit:
	DD	-132					; ffffff7cH
	DD	124					; 0000007cH
	DD	$LN8@DDInit
	DD	-156					; ffffff64H
	DD	16					; 00000010H
	DD	$LN9@DDInit
$LN9@DDInit:
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
$LN8@DDInit:
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	100					; 00000064H
	DB	0
?__DDInit@@YAHXZ ENDP					; __DDInit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__WinDestroy@@YAXXZ
_TEXT	SEGMENT
?__WinDestroy@@YAXXZ PROC				; __WinDestroy, COMDAT

; 462  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 463  : 	//// µð¹ö±× ¸ðµå¸¦ À§ÇÑ ºñÆ®ÇÈ¼¿ º¹±¸
; 464  : 
; 465  : 	////
; 466  : 	DXW_ReleaseWinMode();

	call	?DXW_ReleaseWinMode@@YAXXZ		; DXW_ReleaseWinMode

; 467  : 	
; 468  : 	////
; 469  : 	__DestroyFont();

	call	?__DestroyFont@@YAXXZ			; __DestroyFont

; 470  : 
; 471  : 	//// DX ¿ÀºêÁ§Æ® ÇØÁ¦
; 472  : 	__ReleaseAllObjects();

	call	?__ReleaseAllObjects@@YAXXZ		; __ReleaseAllObjects

; 473  : 
; 474  : 	////
; 475  : 	_CrtDumpMemoryLeaks();

	call	__CrtDumpMemoryLeaks

; 476  : 
; 477  :     TRACE0("__WinDestroy\n");  

	push	OFFSET ??_C@_0O@MKKLKCPA@__WinDestroy?6@
	call	?___Trace0@@YAXPAD@Z			; ___Trace0
	add	esp, 4

; 478  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?__WinDestroy@@YAXXZ ENDP				; __WinDestroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__WinKeyDown@@YAXPAUHWND__@@I@Z
_TEXT	SEGMENT
tv95 = -196						; size = 4
tv93 = -196						; size = 4
tv85 = -196						; size = 4
tv83 = -196						; size = 4
tv64 = -196						; size = 4
_hwnd$ = 8						; size = 4
_wParam$ = 12						; size = 4
?__WinKeyDown@@YAXPAUHWND__@@I@Z PROC			; __WinKeyDown, COMDAT

; 398  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 399  :     static BOOL bIsFpsMax = FALSE;
; 400  : 
; 401  : 	switch( wParam )

	mov	eax, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	mov	ecx, DWORD PTR tv64[ebp]
	sub	ecx, 27					; 0000001bH
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 94			; 0000005eH
	ja	$LN1@WinKeyDown
	mov	edx, DWORD PTR tv64[ebp]
	movzx	eax, BYTE PTR $LN33@WinKeyDown[edx]
	jmp	DWORD PTR $LN40@WinKeyDown[eax*4]
$LN4@WinKeyDown:

; 402  : 	{
; 403  : 	case VK_ESCAPE:
; 404  : 		PostMessage(hwnd, WM_CLOSE, 0, 0);

	mov	esi, esp
	push	0
	push	0
	push	16					; 00000010H
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__PostMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 405  : 		break;

	jmp	$LN1@WinKeyDown
$LN5@WinKeyDown:

; 406  : 
; 407  : 	case VK_F1:
; 408  : 		Skillcheat += 100;

	mov	eax, DWORD PTR ?Skillcheat@@3HA		; Skillcheat
	add	eax, 100				; 00000064H
	mov	DWORD PTR ?Skillcheat@@3HA, eax		; Skillcheat

; 409  : 		break;

	jmp	$LN1@WinKeyDown
$LN6@WinKeyDown:

; 410  : 	case VK_F2:
; 411  : 		Skillcheat -= 100;

	mov	eax, DWORD PTR ?Skillcheat@@3HA		; Skillcheat
	sub	eax, 100				; 00000064H
	mov	DWORD PTR ?Skillcheat@@3HA, eax		; Skillcheat

; 412  : 		break;

	jmp	$LN1@WinKeyDown

; 413  : 	case VK_F3:
; 414  : 		
; 415  : 		break;

	jmp	$LN1@WinKeyDown
$LN8@WinKeyDown:

; 416  : 
; 417  :     case VK_F4:	
; 418  : 		g_nPhaze = 4;

	mov	DWORD PTR ?g_nPhaze@@3HA, 4		; g_nPhaze

; 419  :         break;

	jmp	$LN1@WinKeyDown
$LN9@WinKeyDown:

; 420  : 
; 421  :     case VK_F5: __FxFadeTo(g_pDDSPrimary, g_pDDSBack, rand() % 32, rand() % 64, rand() % 32); break;

	call	_rand
	and	eax, -2147483617			; 8000001fH
	jns	SHORT $LN34@WinKeyDown
	dec	eax
	or	eax, -32				; ffffffe0H
	inc	eax
$LN34@WinKeyDown:
	push	eax
	call	_rand
	and	eax, -2147483585			; 8000003fH
	jns	SHORT $LN35@WinKeyDown
	dec	eax
	or	eax, -64				; ffffffc0H
	inc	eax
$LN35@WinKeyDown:
	push	eax
	call	_rand
	and	eax, -2147483617			; 8000001fH
	jns	SHORT $LN36@WinKeyDown
	dec	eax
	or	eax, -32				; ffffffe0H
	inc	eax
$LN36@WinKeyDown:
	push	eax
	mov	eax, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	push	eax
	mov	ecx, DWORD PTR ?g_pDDSPrimary@@3PAUIDirectDrawSurface7@@A ; g_pDDSPrimary
	push	ecx
	call	?__FxFadeTo@@YAXPAUIDirectDrawSurface7@@0KKK@Z ; __FxFadeTo
	add	esp, 20					; 00000014H
	jmp	$LN1@WinKeyDown
$LN10@WinKeyDown:

; 422  : 	case VK_F6: g_bGrayScale = !g_bGrayScale; break;		

	cmp	DWORD PTR ?g_bGrayScale@@3HA, 0		; g_bGrayScale
	jne	SHORT $LN25@WinKeyDown
	mov	DWORD PTR tv83[ebp], 1
	jmp	SHORT $LN26@WinKeyDown
$LN25@WinKeyDown:
	mov	DWORD PTR tv83[ebp], 0
$LN26@WinKeyDown:
	mov	eax, DWORD PTR tv83[ebp]
	mov	DWORD PTR ?g_bGrayScale@@3HA, eax	; g_bGrayScale
	jmp	$LN1@WinKeyDown
$LN11@WinKeyDown:

; 423  : 	case VK_F7: g_bColorize = !g_bColorize;

	cmp	DWORD PTR ?g_bColorize@@3HA, 0		; g_bColorize
	jne	SHORT $LN27@WinKeyDown
	mov	DWORD PTR tv85[ebp], 1
	jmp	SHORT $LN28@WinKeyDown
$LN27@WinKeyDown:
	mov	DWORD PTR tv85[ebp], 0
$LN28@WinKeyDown:
	mov	eax, DWORD PTR tv85[ebp]
	mov	DWORD PTR ?g_bColorize@@3HA, eax	; g_bColorize

; 424  : 				g_dwR = rand() % 32;

	call	_rand
	and	eax, -2147483617			; 8000001fH
	jns	SHORT $LN37@WinKeyDown
	dec	eax
	or	eax, -32				; ffffffe0H
	inc	eax
$LN37@WinKeyDown:
	mov	DWORD PTR ?g_dwR@@3KA, eax		; g_dwR

; 425  : 				g_dwG = rand() % 64;

	call	_rand
	and	eax, -2147483585			; 8000003fH
	jns	SHORT $LN38@WinKeyDown
	dec	eax
	or	eax, -64				; ffffffc0H
	inc	eax
$LN38@WinKeyDown:
	mov	DWORD PTR ?g_dwG@@3KA, eax		; g_dwG

; 426  : 				g_dwB = rand() % 32;

	call	_rand
	and	eax, -2147483617			; 8000001fH
	jns	SHORT $LN39@WinKeyDown
	dec	eax
	or	eax, -32				; ffffffe0H
	inc	eax
$LN39@WinKeyDown:
	mov	DWORD PTR ?g_dwB@@3KA, eax		; g_dwB

; 427  : 				break;		

	jmp	$LN1@WinKeyDown
$LN12@WinKeyDown:

; 428  : 	case VK_F8: gbIsGod = !gbIsGod; break;		

	cmp	DWORD PTR ?gbIsGod@@3HA, 0		; gbIsGod
	jne	SHORT $LN29@WinKeyDown
	mov	DWORD PTR tv93[ebp], 1
	jmp	SHORT $LN30@WinKeyDown
$LN29@WinKeyDown:
	mov	DWORD PTR tv93[ebp], 0
$LN30@WinKeyDown:
	mov	eax, DWORD PTR tv93[ebp]
	mov	DWORD PTR ?gbIsGod@@3HA, eax		; gbIsGod
	jmp	SHORT $LN1@WinKeyDown
$LN13@WinKeyDown:

; 429  :     case VK_F9: 
; 430  : 		bIsFpsMax = !bIsFpsMax;

	cmp	DWORD PTR ?bIsFpsMax@?1??__WinKeyDown@@YAXPAUHWND__@@I@Z@4HA, 0
	jne	SHORT $LN31@WinKeyDown
	mov	DWORD PTR tv95[ebp], 1
	jmp	SHORT $LN32@WinKeyDown
$LN31@WinKeyDown:
	mov	DWORD PTR tv95[ebp], 0
$LN32@WinKeyDown:
	mov	eax, DWORD PTR tv95[ebp]
	mov	DWORD PTR ?bIsFpsMax@?1??__WinKeyDown@@YAXPAUHWND__@@I@Z@4HA, eax

; 431  : 		if (bIsFpsMax) 

	cmp	DWORD PTR ?bIsFpsMax@?1??__WinKeyDown@@YAXPAUHWND__@@I@Z@4HA, 0
	je	SHORT $LN14@WinKeyDown

; 432  : 			gFpsMng.SetFPS(0);

	push	0
	mov	ecx, OFFSET ?gFpsMng@@3VCFpsMng@@A	; gFpsMng
	call	?SetFPS@CFpsMng@@QAEXK@Z		; CFpsMng::SetFPS

; 433  : 		else 

	jmp	SHORT $LN15@WinKeyDown
$LN14@WinKeyDown:

; 434  : 			gFpsMng.SetFPS(_FPS);

	push	60					; 0000003cH
	mov	ecx, OFFSET ?gFpsMng@@3VCFpsMng@@A	; gFpsMng
	call	?SetFPS@CFpsMng@@QAEXK@Z		; CFpsMng::SetFPS
$LN15@WinKeyDown:

; 435  :         break;

	jmp	SHORT $LN1@WinKeyDown
$LN16@WinKeyDown:

; 436  : 	case VK_F10: gFpsMng.SetFPS(30); break;

	push	30					; 0000001eH
	mov	ecx, OFFSET ?gFpsMng@@3VCFpsMng@@A	; gFpsMng
	call	?SetFPS@CFpsMng@@QAEXK@Z		; CFpsMng::SetFPS
$LN1@WinKeyDown:

; 437  : 
; 438  :     case VK_TAB :
; 439  :         break;
; 440  : 
; 441  :     case VK_BACK :
; 442  :         break;
; 443  : 
; 444  :     case VK_END : 
; 445  :         break;
; 446  : 
; 447  :     case VK_HOME :
; 448  :         break;
; 449  : 
; 450  :     case VK_DELETE :
; 451  :         break;
; 452  : 
; 453  : 	case VK_SPACE :
; 454  : 		break;
; 455  : 
; 456  :     case VK_RETURN:
; 457  : 		break;
; 458  : 	}
; 459  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN40@WinKeyDown:
	DD	$LN4@WinKeyDown
	DD	$LN5@WinKeyDown
	DD	$LN6@WinKeyDown
	DD	$LN8@WinKeyDown
	DD	$LN9@WinKeyDown
	DD	$LN10@WinKeyDown
	DD	$LN11@WinKeyDown
	DD	$LN12@WinKeyDown
	DD	$LN13@WinKeyDown
	DD	$LN16@WinKeyDown
	DD	$LN1@WinKeyDown
$LN33@WinKeyDown:
	DB	0
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	10					; 0000000aH
	DB	1
	DB	2
	DB	10					; 0000000aH
	DB	3
	DB	4
	DB	5
	DB	6
	DB	7
	DB	8
	DB	9
?__WinKeyDown@@YAXPAUHWND__@@I@Z ENDP			; __WinKeyDown
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?__WndProc@@YGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
tv74 = -196						; size = 4
tv70 = -196						; size = 4
tv64 = -196						; size = 4
_hwnd$ = 8						; size = 4
_message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?__WndProc@@YGJPAUHWND__@@IIJ@Z PROC			; __WndProc, COMDAT

; 364  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 365  :     switch( message )

	mov	eax, DWORD PTR _message$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 32			; 00000020H
	ja	SHORT $LN21@WndProc
	cmp	DWORD PTR tv64[ebp], 32			; 00000020H
	je	$LN14@WndProc
	cmp	DWORD PTR tv64[ebp], 2
	je	$LN13@WndProc
	cmp	DWORD PTR tv64[ebp], 28			; 0000001cH
	je	$LN10@WndProc
	jmp	$LN2@WndProc
$LN21@WndProc:
	cmp	DWORD PTR tv64[ebp], 256		; 00000100H
	je	SHORT $LN4@WndProc
	cmp	DWORD PTR tv64[ebp], 258		; 00000102H
	je	SHORT $LN5@WndProc
	jmp	$LN2@WndProc
$LN4@WndProc:

; 366  :     {
; 367  :     case WM_KEYDOWN     : __WinKeyDown(hwnd, wParam); break;

	mov	eax, DWORD PTR _wParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwnd$[ebp]
	push	ecx
	call	?__WinKeyDown@@YAXPAUHWND__@@I@Z	; __WinKeyDown
	add	esp, 8
	jmp	$LN2@WndProc
$LN5@WndProc:

; 368  :     case WM_CHAR        :
; 369  :         if (wParam == 'i' || wParam == 'I') { gAppSet.bIsDisplayInfo = !gAppSet.bIsDisplayInfo; break; }

	cmp	DWORD PTR _wParam$[ebp], 105		; 00000069H
	je	SHORT $LN7@WndProc
	cmp	DWORD PTR _wParam$[ebp], 73		; 00000049H
	jne	SHORT $LN6@WndProc
$LN7@WndProc:
	cmp	DWORD PTR ?gAppSet@@3UtagAPP_SET@@A+8, 0
	jne	SHORT $LN17@WndProc
	mov	DWORD PTR tv70[ebp], 1
	jmp	SHORT $LN18@WndProc
$LN17@WndProc:
	mov	DWORD PTR tv70[ebp], 0
$LN18@WndProc:
	mov	eax, DWORD PTR tv70[ebp]
	mov	DWORD PTR ?gAppSet@@3UtagAPP_SET@@A+8, eax
	jmp	$LN2@WndProc
$LN6@WndProc:

; 370  : 		if (wParam == 'p' || wParam == 'P')

	cmp	DWORD PTR _wParam$[ebp], 112		; 00000070H
	je	SHORT $LN9@WndProc
	cmp	DWORD PTR _wParam$[ebp], 80		; 00000050H
	jne	SHORT $LN8@WndProc
$LN9@WndProc:

; 371  : 		{
; 372  : 			gAppSet.bIsPause = !gAppSet.bIsPause;			

	cmp	DWORD PTR ?gAppSet@@3UtagAPP_SET@@A, 0
	jne	SHORT $LN19@WndProc
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN20@WndProc
$LN19@WndProc:
	mov	DWORD PTR tv74[ebp], 0
$LN20@WndProc:
	mov	eax, DWORD PTR tv74[ebp]
	mov	DWORD PTR ?gAppSet@@3UtagAPP_SET@@A, eax

; 373  : 			break;

	jmp	SHORT $LN2@WndProc
$LN8@WndProc:

; 374  : 		}
; 375  : 		break;

	jmp	SHORT $LN2@WndProc
$LN10@WndProc:

; 376  :     case WM_ACTIVATEAPP : gAppSet.bIsActive = wParam;         break;

	mov	eax, DWORD PTR _wParam$[ebp]
	mov	DWORD PTR ?gAppSet@@3UtagAPP_SET@@A+4, eax
	jmp	SHORT $LN2@WndProc

; 377  : 	case WM_MOUSEMOVE :
; 378  : 		//g_MousePos = MAKEPOINTS(lParam);
; 379  : 		break;

	jmp	SHORT $LN2@WndProc

; 380  : 	case WM_QUERYNEWPALETTE: break;	

	jmp	SHORT $LN2@WndProc
$LN13@WndProc:

; 381  :     case WM_DESTROY:
; 382  :         __WinDestroy();

	call	?__WinDestroy@@YAXXZ			; __WinDestroy

; 383  : 		PostQuitMessage(0);						

	mov	esi, esp
	push	0
	call	DWORD PTR __imp__PostQuitMessage@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 384  : 		break;	

	jmp	SHORT $LN2@WndProc
$LN14@WndProc:

; 385  :     case WM_SETCURSOR:
; 386  : 		if (gbIsFull)

	cmp	DWORD PTR ?gbIsFull@@3HA, 0		; gbIsFull
	je	SHORT $LN2@WndProc

; 387  : 		{
; 388  : 			SetCursor(NULL);	

	mov	esi, esp
	push	0
	call	DWORD PTR __imp__SetCursor@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 389  : 			return TRUE;

	mov	eax, 1
	jmp	SHORT $LN1@WndProc
$LN2@WndProc:

; 390  : 		}		
; 391  : 		break;
; 392  : 	}
; 393  : 
; 394  :     return DefWindowProc(hwnd, message, wParam, lParam);

	mov	esi, esp
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _message$[ebp]
	push	edx
	mov	eax, DWORD PTR _hwnd$[ebp]
	push	eax
	call	DWORD PTR __imp__DefWindowProcA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@WndProc:

; 395  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?__WndProc@@YGJPAUHWND__@@IIJ@Z ENDP			; __WndProc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?DXW_ReleaseWinMode@@YAXXZ
_TEXT	SEGMENT
?DXW_ReleaseWinMode@@YAXXZ PROC				; DXW_ReleaseWinMode, COMDAT

; 481  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 482  :     TRACE0("DXW_ReleaseWinMode\n");

	push	OFFSET ??_C@_0BE@OHABGOPB@DXW_ReleaseWinMode?6@
	call	?___Trace0@@YAXPAD@Z			; ___Trace0
	add	esp, 4

; 483  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DXW_ReleaseWinMode@@YAXXZ ENDP				; DXW_ReleaseWinMode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?DXW_DisplayInfo@@YAXXZ
_TEXT	SEGMENT
_dwFps$1 = -8						; size = 4
?DXW_DisplayInfo@@YAXXZ PROC				; DXW_DisplayInfo, COMDAT

; 4427 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 4428 : 	///// ÇÁ·¹ÀÓ¼ö ÃøÁ¤ ¹× ±âÅ¸ Á¤º¸
; 4429 :     if (gAppSet.bIsDisplayInfo)

	cmp	DWORD PTR ?gAppSet@@3UtagAPP_SET@@A+8, 0
	je	$LN1@DXW_Displa

; 4430 :     {
; 4431 : 		DWORD dwFps = gFpsMng.GetFPS();

	mov	ecx, OFFSET ?gFpsMng@@3VCFpsMng@@A	; gFpsMng
	call	?GetFPS@CFpsMng@@QAEKXZ			; CFpsMng::GetFPS
	mov	DWORD PTR _dwFps$1[ebp], eax

; 4432 : 
; 4433 : 		/////
; 4434 : 		__GetDC(g_pDDSBack);

	mov	eax, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	push	eax
	call	?__GetDC@@YAXPAUIDirectDrawSurface7@@@Z	; __GetDC
	add	esp, 4

; 4435 : 		{
; 4436 : 			__PutTextf(10, 30, PEN, "P3PAT %d/%d", P3randpat,P3randpat2);

	mov	eax, DWORD PTR ?P3randpat2@@3HA		; P3randpat2
	push	eax
	mov	ecx, DWORD PTR ?P3randpat@@3HA		; P3randpat
	push	ecx
	push	OFFSET ??_C@_0M@JLGAMLOF@P3PAT?5?$CFd?1?$CFd@
	push	16777215				; 00ffffffH
	push	30					; 0000001eH
	push	10					; 0000000aH
	call	?__PutTextf@@YAXHHKPADZZ		; __PutTextf
	add	esp, 24					; 00000018H

; 4437 : 			__PutTextf(10, 10, PEN, "FPS %d", dwFps);

	mov	eax, DWORD PTR _dwFps$1[ebp]
	push	eax
	push	OFFSET ??_C@_06KJFAFILI@FPS?5?$CFd@
	push	16777215				; 00ffffffH
	push	10					; 0000000aH
	push	10					; 0000000aH
	call	?__PutTextf@@YAXHHKPADZZ		; __PutTextf
	add	esp, 20					; 00000014H

; 4438 : 			__PutTextf(465, 741, PEN, "%d/%d", PlayerHP, PlayerMHP);

	mov	eax, DWORD PTR ?PlayerMHP@@3HA		; PlayerMHP
	push	eax
	mov	ecx, DWORD PTR ?PlayerHP@@3HA		; PlayerHP
	push	ecx
	push	OFFSET ??_C@_05LCKIIOJE@?$CFd?1?$CFd@
	push	16777215				; 00ffffffH
	push	741					; 000002e5H
	push	465					; 000001d1H
	call	?__PutTextf@@YAXHHKPADZZ		; __PutTextf
	add	esp, 24					; 00000018H

; 4439 : 		}
; 4440 : 		__ReleaseDC(g_pDDSBack);

	mov	eax, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	push	eax
	call	?__ReleaseDC@@YAXPAUIDirectDrawSurface7@@@Z ; __ReleaseDC
	add	esp, 4
$LN1@DXW_Displa:

; 4441 : 	}
; 4442 : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DXW_DisplayInfo@@YAXXZ ENDP				; DXW_DisplayInfo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?DXW_MainLoop@@YAXXZ
_TEXT	SEGMENT
tv4570 = -2760						; size = 4
tv5792 = -2756						; size = 4
tv5707 = -2756						; size = 4
tv5544 = -2756						; size = 4
tv4566 = -2756						; size = 4
tv3711 = -2756						; size = 4
tv3626 = -2756						; size = 4
tv3444 = -2756						; size = 4
tv1985 = -2756						; size = 4
tv1900 = -2756						; size = 4
tv1737 = -2756						; size = 4
tv510 = -2756						; size = 4
$T1 = -2748						; size = 16
$T2 = -2724						; size = 16
$T3 = -2700						; size = 16
$T4 = -2676						; size = 16
$T5 = -2652						; size = 16
$T6 = -2628						; size = 16
$T7 = -2604						; size = 16
$T8 = -2580						; size = 16
$T9 = -2556						; size = 16
$T10 = -2532						; size = 16
$T11 = -2508						; size = 16
$T12 = -2484						; size = 16
$T13 = -2460						; size = 16
$T14 = -2436						; size = 16
$T15 = -2412						; size = 16
$T16 = -2388						; size = 16
$T17 = -2364						; size = 16
$T18 = -2340						; size = 16
$T19 = -2316						; size = 16
$T20 = -2292						; size = 16
$T21 = -2268						; size = 16
$T22 = -2244						; size = 16
$T23 = -2220						; size = 16
$T24 = -2196						; size = 16
$T25 = -2172						; size = 16
$T26 = -2148						; size = 16
$T27 = -2124						; size = 16
$T28 = -2100						; size = 16
$T29 = -2076						; size = 16
$T30 = -2052						; size = 16
$T31 = -2028						; size = 16
$T32 = -2004						; size = 16
$T33 = -1980						; size = 16
$T34 = -1956						; size = 16
$T35 = -1932						; size = 16
$T36 = -1908						; size = 16
$T37 = -1884						; size = 16
$T38 = -1860						; size = 16
$T39 = -1836						; size = 16
$T40 = -1812						; size = 16
$T41 = -1788						; size = 16
$T42 = -1764						; size = 16
$T43 = -1740						; size = 16
$T44 = -1716						; size = 16
$T45 = -1692						; size = 16
$T46 = -1668						; size = 16
$T47 = -1644						; size = 16
$T48 = -1620						; size = 16
$T49 = -1596						; size = 16
$T50 = -1572						; size = 16
$T51 = -1548						; size = 16
$T52 = -1524						; size = 16
$T53 = -1500						; size = 16
$T54 = -1476						; size = 16
$T55 = -1452						; size = 16
$T56 = -1428						; size = 16
$T57 = -1404						; size = 16
$T58 = -1380						; size = 16
$T59 = -1356						; size = 16
$T60 = -1332						; size = 16
$T61 = -1308						; size = 16
$T62 = -1284						; size = 16
$T63 = -1260						; size = 16
$T64 = -1236						; size = 16
$T65 = -1212						; size = 16
$T66 = -1188						; size = 16
$T67 = -1164						; size = 16
$T68 = -1140						; size = 16
$T69 = -1116						; size = 16
$T70 = -1092						; size = 16
$T71 = -1068						; size = 16
$T72 = -1044						; size = 16
$T73 = -1020						; size = 16
$T74 = -996						; size = 16
_n$75 = -204						; size = 4
_i$76 = -192						; size = 4
_n$77 = -180						; size = 4
_i$78 = -168						; size = 4
_n$79 = -156						; size = 4
_i$80 = -144						; size = 4
_i$ = -132						; size = 4
_SnY$ = -120						; size = 4
_SnX$ = -108						; size = 4
_bnY$ = -96						; size = 4
_nY$ = -84						; size = 4
_bnX$ = -72						; size = 4
_nX$ = -60						; size = 4
_wPixel$ = -48						; size = 2
_rcBox$ = -36						; size = 16
_hRet$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?DXW_MainLoop@@YAXXZ PROC				; DXW_MainLoop, COMDAT

; 636  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 2760				; 00000ac8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-2760]
	mov	ecx, 690				; 000002b2H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 637  : 	HRESULT hRet;
; 638  : 
; 639  : 	//////////////////////////////////////////////////////////		
; 640  : 	RECT rcBox = { 100, 100, 300, 300 };

	mov	DWORD PTR _rcBox$[ebp], 100		; 00000064H
	mov	DWORD PTR _rcBox$[ebp+4], 100		; 00000064H
	mov	DWORD PTR _rcBox$[ebp+8], 300		; 0000012cH
	mov	DWORD PTR _rcBox$[ebp+12], 300		; 0000012cH

; 641  : 
; 642  : 	//// ¿¬»êÃ³¸®
; 643  : 	WORD wPixel = __GetPixelRGB16(0, 0, 0);

	push	0
	push	0
	push	0
	call	?__GetPixelRGB16@@YAGHHH@Z		; __GetPixelRGB16
	add	esp, 12					; 0000000cH
	mov	WORD PTR _wPixel$[ebp], ax

; 644  : 	int nX, bnX; //ÇÃ·¹ÀÌ¾î¿Í º¸½ºÀÇ XÁÂÇ¥
; 645  : 	int nY, bnY; //ÇÃ·¹ÀÌ¾î¿Í º¸½ºÀÇ YÁÂÇ¥
; 646  : 	int SnX, SnY; //½ºÅ³À» Ç¥½ÃÇÒ X,YÁÂÇ¥.
; 647  : 	int i = 0;

	mov	DWORD PTR _i$[ebp], 0

; 648  : 	if (g_nPhaze >= 1 && Knockback == FALSE && PlayerHP > 1 && g_nPhaze < 4)

	cmp	DWORD PTR ?g_nPhaze@@3HA, 1		; g_nPhaze
	jl	$LN46@DXW_MainLo
	cmp	DWORD PTR ?Knockback@@3HA, 0		; Knockback
	jne	$LN46@DXW_MainLo
	cmp	DWORD PTR ?PlayerHP@@3HA, 1		; PlayerHP
	jle	$LN46@DXW_MainLo
	cmp	DWORD PTR ?g_nPhaze@@3HA, 4		; g_nPhaze
	jge	$LN46@DXW_MainLo

; 649  : 	{
; 650  : 		if (::GetKeyState(VK_LEFT) & 0x80 && g_bJump == 0 && g_bAtt == FALSE && g_bRush == FALSE) //¿ÞÂÊ ÀÌµ¿ ·ÎÁ÷

	mov	esi, esp
	push	37					; 00000025H
	call	DWORD PTR __imp__GetKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 128				; 00000080H
	je	SHORT $LN47@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN47@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	SHORT $LN47@DXW_MainLo
	cmp	DWORD PTR ?g_bRush@@3HA, 0		; g_bRush
	jne	SHORT $LN47@DXW_MainLo

; 651  : 		{
; 652  : 			Hspeed -= 2;

	mov	eax, DWORD PTR ?Hspeed@@3HA		; Hspeed
	sub	eax, 2
	mov	DWORD PTR ?Hspeed@@3HA, eax		; Hspeed

; 653  : 			g_bAccel = TRUE;

	mov	DWORD PTR ?g_bAccel@@3HA, 1		; g_bAccel

; 654  : 			g_bLeft = TRUE;

	mov	DWORD PTR ?g_bLeft@@3HA, 1		; g_bLeft

; 655  : 			g_bRight = FALSE;

	mov	DWORD PTR ?g_bRight@@3HA, 0		; g_bRight

; 656  : 			g_bLookL = TRUE;

	mov	DWORD PTR ?g_bLookL@@3HA, 1		; g_bLookL

; 657  : 			g_bLookR = FALSE;

	mov	DWORD PTR ?g_bLookR@@3HA, 0		; g_bLookR
	jmp	SHORT $LN54@DXW_MainLo
$LN47@DXW_MainLo:

; 658  : 		}
; 659  : 		else if (g_Pos.x > 0 && g_bJump == 1) //Á¡ÇÁ Áß °¡¼Ó

	cmp	DWORD PTR ?g_Pos@@3UtagPOINT@@A, 0
	jle	SHORT $LN54@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 1		; g_bJump
	jne	SHORT $LN54@DXW_MainLo

; 660  : 		{
; 661  : 			if (g_bJLeft == 1)

	cmp	DWORD PTR ?g_bJLeft@@3HA, 1		; g_bJLeft
	jne	SHORT $LN50@DXW_MainLo

; 662  : 			{
; 663  : 				if (g_bSetSpeed == 0)

	cmp	DWORD PTR ?g_bSetSpeed@@3HA, 0		; g_bSetSpeed
	jne	SHORT $LN52@DXW_MainLo

; 664  : 				{
; 665  : 					Hspeed -= 1;

	mov	eax, DWORD PTR ?Hspeed@@3HA		; Hspeed
	sub	eax, 1
	mov	DWORD PTR ?Hspeed@@3HA, eax		; Hspeed
$LN52@DXW_MainLo:

; 666  : 				}
; 667  : 				/*if (g_bJaccel == 1)
; 668  : 				{
; 669  : 				Hspeed -= 1;
; 670  : 				}*/
; 671  : 			}

	jmp	SHORT $LN54@DXW_MainLo
$LN50@DXW_MainLo:

; 672  : 			else if (g_bJRight == 0 && ::GetKeyState(VK_LEFT) & 0x80) //Á¡ÇÁ Áß °¡¼Ó

	cmp	DWORD PTR ?g_bJRight@@3HA, 0		; g_bJRight
	jne	SHORT $LN54@DXW_MainLo
	mov	esi, esp
	push	37					; 00000025H
	call	DWORD PTR __imp__GetKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 128				; 00000080H
	je	SHORT $LN54@DXW_MainLo

; 673  : 			{
; 674  : 				if (Hspeed > -2)

	cmp	DWORD PTR ?Hspeed@@3HA, -2		; Hspeed, fffffffeH
	jle	SHORT $LN54@DXW_MainLo

; 675  : 				{
; 676  : 					Hspeed -= 1;

	mov	eax, DWORD PTR ?Hspeed@@3HA		; Hspeed
	sub	eax, 1
	mov	DWORD PTR ?Hspeed@@3HA, eax		; Hspeed
$LN54@DXW_MainLo:

; 677  : 				}
; 678  : 			}
; 679  : 		}
; 680  : 		if (g_bJLeft == 1 && ::GetKeyState(VK_RIGHT) & 0x80) //Á¡ÇÁ Áß ¹Ý´ë Å°¸¦ ´­·¶À»¶§ °¨¼Ó.

	cmp	DWORD PTR ?g_bJLeft@@3HA, 1		; g_bJLeft
	jne	SHORT $LN57@DXW_MainLo
	mov	esi, esp
	push	39					; 00000027H
	call	DWORD PTR __imp__GetKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 128				; 00000080H
	je	SHORT $LN57@DXW_MainLo

; 681  : 		{
; 682  : 			if (Hspeed > -3)

	cmp	DWORD PTR ?Hspeed@@3HA, -3		; Hspeed, fffffffdH
	jle	SHORT $LN56@DXW_MainLo

; 683  : 			{
; 684  : 				Hspeed += 1;

	mov	eax, DWORD PTR ?Hspeed@@3HA		; Hspeed
	add	eax, 1
	mov	DWORD PTR ?Hspeed@@3HA, eax		; Hspeed

; 685  : 				g_bSetSpeed = TRUE; //°¨¼Ó ÇÑ°èÄ¡ ¼³Á¤

	mov	DWORD PTR ?g_bSetSpeed@@3HA, 1		; g_bSetSpeed

; 686  : 			}
; 687  : 			else

	jmp	SHORT $LN57@DXW_MainLo
$LN56@DXW_MainLo:

; 688  : 			{
; 689  : 				Hspeed = -3;

	mov	DWORD PTR ?Hspeed@@3HA, -3		; Hspeed, fffffffdH
$LN57@DXW_MainLo:

; 690  : 			}
; 691  : 		}
; 692  : 		//////////////////
; 693  : 		if (::GetKeyState(VK_RIGHT) & 0x80 && g_bJump == 0 && g_bAtt == FALSE && g_bRush == FALSE) //¿À¸¥ÂÊ ÀÌµ¿ ·ÎÁ÷

	mov	esi, esp
	push	39					; 00000027H
	call	DWORD PTR __imp__GetKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 128				; 00000080H
	je	SHORT $LN58@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN58@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	SHORT $LN58@DXW_MainLo
	cmp	DWORD PTR ?g_bRush@@3HA, 0		; g_bRush
	jne	SHORT $LN58@DXW_MainLo

; 694  : 		{
; 695  : 			Hspeed += 1;

	mov	eax, DWORD PTR ?Hspeed@@3HA		; Hspeed
	add	eax, 1
	mov	DWORD PTR ?Hspeed@@3HA, eax		; Hspeed

; 696  : 			g_bAccel = TRUE;

	mov	DWORD PTR ?g_bAccel@@3HA, 1		; g_bAccel

; 697  : 			g_bLeft = FALSE;

	mov	DWORD PTR ?g_bLeft@@3HA, 0		; g_bLeft

; 698  : 			g_bRight = TRUE;

	mov	DWORD PTR ?g_bRight@@3HA, 1		; g_bRight

; 699  : 			g_bLookR = TRUE;

	mov	DWORD PTR ?g_bLookR@@3HA, 1		; g_bLookR

; 700  : 			g_bLookL = FALSE;

	mov	DWORD PTR ?g_bLookL@@3HA, 0		; g_bLookL
	jmp	SHORT $LN65@DXW_MainLo
$LN58@DXW_MainLo:

; 701  : 		}
; 702  : 		else if (g_Pos.x < HRES - 50 && g_bJump == 1)

	cmp	DWORD PTR ?g_Pos@@3UtagPOINT@@A, 974	; 000003ceH
	jge	SHORT $LN65@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 1		; g_bJump
	jne	SHORT $LN65@DXW_MainLo

; 703  : 		{
; 704  : 			if (g_bJRight == 1)

	cmp	DWORD PTR ?g_bJRight@@3HA, 1		; g_bJRight
	jne	SHORT $LN61@DXW_MainLo

; 705  : 			{
; 706  : 				if (g_bSetSpeed == 0)

	cmp	DWORD PTR ?g_bSetSpeed@@3HA, 0		; g_bSetSpeed
	jne	SHORT $LN63@DXW_MainLo

; 707  : 				{
; 708  : 					Hspeed += 1;

	mov	eax, DWORD PTR ?Hspeed@@3HA		; Hspeed
	add	eax, 1
	mov	DWORD PTR ?Hspeed@@3HA, eax		; Hspeed
$LN63@DXW_MainLo:

; 709  : 				}
; 710  : 				/*if (g_bJaccel == 1)
; 711  : 				{
; 712  : 				Hspeed += 1;
; 713  : 				}*/
; 714  : 			}

	jmp	SHORT $LN65@DXW_MainLo
$LN61@DXW_MainLo:

; 715  : 			else if (g_bJLeft == 0 && ::GetKeyState(VK_RIGHT) & 0x80)

	cmp	DWORD PTR ?g_bJLeft@@3HA, 0		; g_bJLeft
	jne	SHORT $LN65@DXW_MainLo
	mov	esi, esp
	push	39					; 00000027H
	call	DWORD PTR __imp__GetKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 128				; 00000080H
	je	SHORT $LN65@DXW_MainLo

; 716  : 			{
; 717  : 				if (Hspeed < 2)

	cmp	DWORD PTR ?Hspeed@@3HA, 2		; Hspeed
	jge	SHORT $LN65@DXW_MainLo

; 718  : 				{
; 719  : 					Hspeed += 1;

	mov	eax, DWORD PTR ?Hspeed@@3HA		; Hspeed
	add	eax, 1
	mov	DWORD PTR ?Hspeed@@3HA, eax		; Hspeed
$LN65@DXW_MainLo:

; 720  : 				}
; 721  : 			}
; 722  : 		}
; 723  : 		if (g_bJRight == 1 && ::GetKeyState(VK_LEFT) & 0x80)

	cmp	DWORD PTR ?g_bJRight@@3HA, 1		; g_bJRight
	jne	SHORT $LN68@DXW_MainLo
	mov	esi, esp
	push	37					; 00000025H
	call	DWORD PTR __imp__GetKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 128				; 00000080H
	je	SHORT $LN68@DXW_MainLo

; 724  : 		{
; 725  : 			if (Hspeed > 3)

	cmp	DWORD PTR ?Hspeed@@3HA, 3		; Hspeed
	jle	SHORT $LN67@DXW_MainLo

; 726  : 			{
; 727  : 				Hspeed -= 1;

	mov	eax, DWORD PTR ?Hspeed@@3HA		; Hspeed
	sub	eax, 1
	mov	DWORD PTR ?Hspeed@@3HA, eax		; Hspeed

; 728  : 				g_bSetSpeed = TRUE;

	mov	DWORD PTR ?g_bSetSpeed@@3HA, 1		; g_bSetSpeed

; 729  : 			}
; 730  : 			else

	jmp	SHORT $LN68@DXW_MainLo
$LN67@DXW_MainLo:

; 731  : 			{
; 732  : 				Hspeed = 3;

	mov	DWORD PTR ?Hspeed@@3HA, 3		; Hspeed
$LN68@DXW_MainLo:

; 733  : 			}
; 734  : 		}
; 735  : 		if (g_bAtt == TRUE && g_bJump == FALSE)

	cmp	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt
	jne	SHORT $LN72@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN72@DXW_MainLo

; 736  : 		{
; 737  : 			if (Hspeed > 0)

	cmp	DWORD PTR ?Hspeed@@3HA, 0		; Hspeed
	jle	SHORT $LN70@DXW_MainLo

; 738  : 			{
; 739  : 				Hspeed -= 1;

	mov	eax, DWORD PTR ?Hspeed@@3HA		; Hspeed
	sub	eax, 1
	mov	DWORD PTR ?Hspeed@@3HA, eax		; Hspeed
	jmp	SHORT $LN72@DXW_MainLo
$LN70@DXW_MainLo:

; 740  : 			}
; 741  : 			else if (Hspeed < 0)

	cmp	DWORD PTR ?Hspeed@@3HA, 0		; Hspeed
	jge	SHORT $LN72@DXW_MainLo

; 742  : 			{
; 743  : 				Hspeed += 1;

	mov	eax, DWORD PTR ?Hspeed@@3HA		; Hspeed
	add	eax, 1
	mov	DWORD PTR ?Hspeed@@3HA, eax		; Hspeed
$LN72@DXW_MainLo:

; 744  : 			}
; 745  : 		}
; 746  : 		if (g_bRush == TRUE)

	cmp	DWORD PTR ?g_bRush@@3HA, 1		; g_bRush
	jne	SHORT $LN73@DXW_MainLo

; 747  : 		{
; 748  : 			if (Hspeed > 0)

	cmp	DWORD PTR ?Hspeed@@3HA, 0		; Hspeed
	jle	SHORT $LN75@DXW_MainLo

; 749  : 			{
; 750  : 				Hspeed = 0;

	mov	DWORD PTR ?Hspeed@@3HA, 0		; Hspeed
	jmp	SHORT $LN77@DXW_MainLo
$LN75@DXW_MainLo:

; 751  : 			}
; 752  : 			else if (Hspeed < 0)

	cmp	DWORD PTR ?Hspeed@@3HA, 0		; Hspeed
	jge	SHORT $LN77@DXW_MainLo

; 753  : 			{
; 754  : 				Hspeed = 0;

	mov	DWORD PTR ?Hspeed@@3HA, 0		; Hspeed
$LN77@DXW_MainLo:

; 755  : 			}
; 756  : 		}

	jmp	$LN84@DXW_MainLo
$LN73@DXW_MainLo:

; 757  : 		///////////////////////
; 758  : 		///////////////////////
; 759  : 		///////////////////////
; 760  : 		///////////////////////
; 761  : 		//¾Æ¹« Å°µµ ÀÔ·ÂÇÏÁö ¾Ê¾ÒÀ» °æ¿ì °¨¼Ó
; 762  : 		else if (::GetKeyState(VK_LEFT) & 0x80) {}

	mov	esi, esp
	push	37					; 00000025H
	call	DWORD PTR __imp__GetKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 128				; 00000080H
	je	SHORT $LN78@DXW_MainLo
	jmp	SHORT $LN84@DXW_MainLo
$LN78@DXW_MainLo:

; 763  : 		else if (::GetKeyState(VK_RIGHT) & 0x80) {}

	mov	esi, esp
	push	39					; 00000027H
	call	DWORD PTR __imp__GetKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 128				; 00000080H
	je	SHORT $LN80@DXW_MainLo

; 764  : 		else {

	jmp	SHORT $LN84@DXW_MainLo
$LN80@DXW_MainLo:

; 765  : 			g_bAccel = FALSE; g_bLeft = FALSE; g_bRight = FALSE;

	mov	DWORD PTR ?g_bAccel@@3HA, 0		; g_bAccel
	mov	DWORD PTR ?g_bLeft@@3HA, 0		; g_bLeft
	mov	DWORD PTR ?g_bRight@@3HA, 0		; g_bRight

; 766  : 			if (Hspeed > 0)

	cmp	DWORD PTR ?Hspeed@@3HA, 0		; Hspeed
	jle	SHORT $LN82@DXW_MainLo

; 767  : 			{
; 768  : 				Hspeed -= 1;

	mov	eax, DWORD PTR ?Hspeed@@3HA		; Hspeed
	sub	eax, 1
	mov	DWORD PTR ?Hspeed@@3HA, eax		; Hspeed
	jmp	SHORT $LN84@DXW_MainLo
$LN82@DXW_MainLo:

; 769  : 			}
; 770  : 			else if (Hspeed < 0)

	cmp	DWORD PTR ?Hspeed@@3HA, 0		; Hspeed
	jge	SHORT $LN84@DXW_MainLo

; 771  : 			{
; 772  : 				Hspeed += 1;

	mov	eax, DWORD PTR ?Hspeed@@3HA		; Hspeed
	add	eax, 1
	mov	DWORD PTR ?Hspeed@@3HA, eax		; Hspeed
$LN84@DXW_MainLo:

; 773  : 			}
; 774  : 		}
; 775  : 		//Á¡ÇÁ ·ÎÁ÷
; 776  : 		if (::GetKeyState(0x5A) & 0x80 && g_bJump == FALSE && g_bAtt == FALSE)

	mov	esi, esp
	push	90					; 0000005aH
	call	DWORD PTR __imp__GetKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 128				; 00000080H
	je	SHORT $LN88@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN88@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	SHORT $LN88@DXW_MainLo

; 777  : 		{
; 778  : 			g_bJump = TRUE;

	mov	DWORD PTR ?g_bJump@@3HA, 1		; g_bJump

; 779  : 			if (g_bAccel == 1)

	cmp	DWORD PTR ?g_bAccel@@3HA, 1		; g_bAccel
	jne	SHORT $LN86@DXW_MainLo

; 780  : 			{
; 781  : 				g_bJaccel = TRUE;

	mov	DWORD PTR ?g_bJaccel@@3HA, 1		; g_bJaccel
$LN86@DXW_MainLo:

; 782  : 			}
; 783  : 			if (g_bRight == 1)

	cmp	DWORD PTR ?g_bRight@@3HA, 1		; g_bRight
	jne	SHORT $LN87@DXW_MainLo

; 784  : 			{
; 785  : 				g_bJRight = TRUE;

	mov	DWORD PTR ?g_bJRight@@3HA, 1		; g_bJRight

; 786  : 				g_bJLeft = FALSE;

	mov	DWORD PTR ?g_bJLeft@@3HA, 0		; g_bJLeft
$LN87@DXW_MainLo:

; 787  : 			}
; 788  : 			if (g_bLeft == 1)

	cmp	DWORD PTR ?g_bLeft@@3HA, 1		; g_bLeft
	jne	SHORT $LN88@DXW_MainLo

; 789  : 			{
; 790  : 				g_bJLeft = TRUE;

	mov	DWORD PTR ?g_bJLeft@@3HA, 1		; g_bJLeft

; 791  : 				g_bJRight = FALSE;

	mov	DWORD PTR ?g_bJRight@@3HA, 0		; g_bJRight
$LN88@DXW_MainLo:

; 792  : 			}
; 793  : 		}
; 794  : 		//°¡¼Óµµ ÃÖ´ëÄ¡ ¼³Á¤
; 795  : 		if (Hspeed > 5)

	cmp	DWORD PTR ?Hspeed@@3HA, 5		; Hspeed
	jle	SHORT $LN89@DXW_MainLo

; 796  : 		{
; 797  : 			Hspeed = 5;

	mov	DWORD PTR ?Hspeed@@3HA, 5		; Hspeed
	jmp	SHORT $LN91@DXW_MainLo
$LN89@DXW_MainLo:

; 798  : 		}
; 799  : 		else if (Hspeed < -5)

	cmp	DWORD PTR ?Hspeed@@3HA, -5		; Hspeed, fffffffbH
	jge	SHORT $LN91@DXW_MainLo

; 800  : 		{
; 801  : 			Hspeed = -5;

	mov	DWORD PTR ?Hspeed@@3HA, -5		; Hspeed, fffffffbH
$LN91@DXW_MainLo:

; 802  : 		}
; 803  : 		if (::GetKeyState(0x43) & 0x80 && g_bJump == FALSE && g_bRush == FALSE && Timer[9] == 0 && g_bLookR == TRUE)

	mov	esi, esp
	push	67					; 00000043H
	call	DWORD PTR __imp__GetKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 128				; 00000080H
	je	$LN92@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	$LN92@DXW_MainLo
	cmp	DWORD PTR ?g_bRush@@3HA, 0		; g_bRush
	jne	$LN92@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 9
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jne	$LN92@DXW_MainLo
	cmp	DWORD PTR ?g_bLookR@@3HA, 1		; g_bLookR
	jne	$LN92@DXW_MainLo

; 804  : 		{
; 805  : 			if (g_bAtt == TRUE)

	cmp	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt
	jne	SHORT $LN95@DXW_MainLo

; 806  : 			{
; 807  : 				Aframe == 0; g_bAL = FALSE, g_bAR = FALSE, g_bAtt = FALSE; g_bHit = FALSE;

	mov	DWORD PTR ?g_bAL@@3HA, 0		; g_bAL
	mov	DWORD PTR ?g_bAR@@3HA, 0		; g_bAR
	mov	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	mov	DWORD PTR ?g_bHit@@3HA, 0		; g_bHit

; 808  : 				if (g_pDS[3])

	mov	eax, 4
	imul	ecx, eax, 3
	cmp	DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[ecx], 0
	je	SHORT $LN95@DXW_MainLo

; 809  : 					m_HHSound.Stop(g_pDS[3]);

	mov	eax, 4
	imul	ecx, eax, 3
	mov	edx, DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[ecx]
	push	edx
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?Stop@CHHSound@@QAEXPAUIDirectSoundBuffer@@@Z ; CHHSound::Stop
$LN95@DXW_MainLo:

; 810  : 			}
; 811  : 			g_bRush = TRUE;

	mov	DWORD PTR ?g_bRush@@3HA, 1		; g_bRush

; 812  : 			g_bRushR = TRUE;

	mov	DWORD PTR ?g_bRushR@@3HA, 1		; g_bRushR

; 813  : 			Cframe = 7;

	mov	DWORD PTR ?Cframe@@3HA, 7		; Cframe

; 814  : 			if (g_pDS[4])

	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[eax], 0
	je	SHORT $LN96@DXW_MainLo

; 815  : 				m_HHSound.Stop(g_pDS[4]);

	mov	eax, 4
	shl	eax, 2
	mov	ecx, DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[eax]
	push	ecx
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?Stop@CHHSound@@QAEXPAUIDirectSoundBuffer@@@Z ; CHHSound::Stop
$LN96@DXW_MainLo:

; 816  : 			m_HHSound.Play(g_pDS[4], false);

	push	0
	mov	eax, 4
	shl	eax, 2
	mov	ecx, DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[eax]
	push	ecx
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?Play@CHHSound@@QAEXPAUIDirectSoundBuffer@@_N@Z ; CHHSound::Play
	jmp	$LN97@DXW_MainLo
$LN92@DXW_MainLo:

; 817  : 		}
; 818  : 		else if (::GetKeyState(0x43) & 0x80 && g_bJump == FALSE && g_bRush == FALSE && Timer[9] == 0 && g_bLookL == TRUE)

	mov	esi, esp
	push	67					; 00000043H
	call	DWORD PTR __imp__GetKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 128				; 00000080H
	je	$LN97@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	$LN97@DXW_MainLo
	cmp	DWORD PTR ?g_bRush@@3HA, 0		; g_bRush
	jne	$LN97@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 9
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jne	$LN97@DXW_MainLo
	cmp	DWORD PTR ?g_bLookL@@3HA, 1		; g_bLookL
	jne	$LN97@DXW_MainLo

; 819  : 		{
; 820  : 			if (g_bAtt == TRUE)

	cmp	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt
	jne	SHORT $LN99@DXW_MainLo

; 821  : 			{
; 822  : 				Aframe == 0; g_bAL = FALSE, g_bAR = FALSE, g_bAtt = FALSE; g_bHit = FALSE;

	mov	DWORD PTR ?g_bAL@@3HA, 0		; g_bAL
	mov	DWORD PTR ?g_bAR@@3HA, 0		; g_bAR
	mov	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	mov	DWORD PTR ?g_bHit@@3HA, 0		; g_bHit

; 823  : 				if (g_pDS[3])

	mov	eax, 4
	imul	ecx, eax, 3
	cmp	DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[ecx], 0
	je	SHORT $LN99@DXW_MainLo

; 824  : 					m_HHSound.Stop(g_pDS[3]);

	mov	eax, 4
	imul	ecx, eax, 3
	mov	edx, DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[ecx]
	push	edx
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?Stop@CHHSound@@QAEXPAUIDirectSoundBuffer@@@Z ; CHHSound::Stop
$LN99@DXW_MainLo:

; 825  : 			}
; 826  : 			g_bRush = TRUE;

	mov	DWORD PTR ?g_bRush@@3HA, 1		; g_bRush

; 827  : 			g_bRushL = TRUE;

	mov	DWORD PTR ?g_bRushL@@3HA, 1		; g_bRushL

; 828  : 			Cframe = 0;

	mov	DWORD PTR ?Cframe@@3HA, 0		; Cframe

; 829  : 			if (g_pDS[4])

	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[eax], 0
	je	SHORT $LN100@DXW_MainLo

; 830  : 				m_HHSound.Stop(g_pDS[4]);

	mov	eax, 4
	shl	eax, 2
	mov	ecx, DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[eax]
	push	ecx
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?Stop@CHHSound@@QAEXPAUIDirectSoundBuffer@@@Z ; CHHSound::Stop
$LN100@DXW_MainLo:

; 831  : 			m_HHSound.Play(g_pDS[4], false);

	push	0
	mov	eax, 4
	shl	eax, 2
	mov	ecx, DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[eax]
	push	ecx
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?Play@CHHSound@@QAEXPAUIDirectSoundBuffer@@_N@Z ; CHHSound::Play
$LN97@DXW_MainLo:

; 832  : 		}
; 833  : 		if (g_bRush == TRUE)

	cmp	DWORD PTR ?g_bRush@@3HA, 1		; g_bRush
	jne	$LN113@DXW_MainLo

; 834  : 		{
; 835  : 			if (Cframe < 8 && g_bRushR)

	cmp	DWORD PTR ?Cframe@@3HA, 8		; Cframe
	jge	$LN107@DXW_MainLo
	cmp	DWORD PTR ?g_bRushR@@3HA, 0		; g_bRushR
	je	$LN107@DXW_MainLo

; 836  : 			{
; 837  : 				if (Cframe > 5)

	cmp	DWORD PTR ?Cframe@@3HA, 5		; Cframe
	jle	SHORT $LN103@DXW_MainLo

; 838  : 				{
; 839  : 					g_Pos.x += 32;

	mov	eax, DWORD PTR ?g_Pos@@3UtagPOINT@@A
	add	eax, 32					; 00000020H
	mov	DWORD PTR ?g_Pos@@3UtagPOINT@@A, eax
$LN103@DXW_MainLo:

; 840  : 				}
; 841  : 				Timer[8]++;

	mov	eax, 4
	shl	eax, 3
	mov	ecx, DWORD PTR ?Timer@@3PAHA[eax]
	add	ecx, 1
	mov	edx, 4
	shl	edx, 3
	mov	DWORD PTR ?Timer@@3PAHA[edx], ecx

; 842  : 				if (Timer[8] == 4 && Cframe > 0)

	mov	eax, 4
	shl	eax, 3
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 4
	jne	SHORT $LN104@DXW_MainLo
	cmp	DWORD PTR ?Cframe@@3HA, 0		; Cframe
	jle	SHORT $LN104@DXW_MainLo

; 843  : 				{
; 844  : 					Timer[8] = 0;

	mov	eax, 4
	shl	eax, 3
	mov	DWORD PTR ?Timer@@3PAHA[eax], 0

; 845  : 					Cframe--;

	mov	eax, DWORD PTR ?Cframe@@3HA		; Cframe
	sub	eax, 1
	mov	DWORD PTR ?Cframe@@3HA, eax		; Cframe
$LN104@DXW_MainLo:

; 846  : 				}
; 847  : 				if (Cframe == 0)

	cmp	DWORD PTR ?Cframe@@3HA, 0		; Cframe
	jne	SHORT $LN107@DXW_MainLo

; 848  : 				{
; 849  : 					if (Timer[8] > 8)

	mov	eax, 4
	shl	eax, 3
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 8
	jle	SHORT $LN106@DXW_MainLo

; 850  : 					{
; 851  : 						g_bRush = FALSE;

	mov	DWORD PTR ?g_bRush@@3HA, 0		; g_bRush

; 852  : 						g_bRushR = FALSE;

	mov	DWORD PTR ?g_bRushR@@3HA, 0		; g_bRushR

; 853  : 						Timer[9] = 50;

	mov	eax, 4
	imul	ecx, eax, 9
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 50	; 00000032H

; 854  : 						Timer[8] = 0;

	mov	eax, 4
	shl	eax, 3
	mov	DWORD PTR ?Timer@@3PAHA[eax], 0

; 855  : 						Cframe = 0;

	mov	DWORD PTR ?Cframe@@3HA, 0		; Cframe

; 856  : 					}
; 857  : 					else

	jmp	SHORT $LN107@DXW_MainLo
$LN106@DXW_MainLo:

; 858  : 					{
; 859  : 						Timer[8]++;

	mov	eax, 4
	shl	eax, 3
	mov	ecx, DWORD PTR ?Timer@@3PAHA[eax]
	add	ecx, 1
	mov	edx, 4
	shl	edx, 3
	mov	DWORD PTR ?Timer@@3PAHA[edx], ecx
$LN107@DXW_MainLo:

; 860  : 					}
; 861  : 				}
; 862  : 			}
; 863  : 			if (Cframe < 8 && g_bRushL)

	cmp	DWORD PTR ?Cframe@@3HA, 8		; Cframe
	jge	$LN113@DXW_MainLo
	cmp	DWORD PTR ?g_bRushL@@3HA, 0		; g_bRushL
	je	$LN113@DXW_MainLo

; 864  : 			{
; 865  : 				if (Cframe < 2)

	cmp	DWORD PTR ?Cframe@@3HA, 2		; Cframe
	jge	SHORT $LN109@DXW_MainLo

; 866  : 				{
; 867  : 					g_Pos.x -= 32;

	mov	eax, DWORD PTR ?g_Pos@@3UtagPOINT@@A
	sub	eax, 32					; 00000020H
	mov	DWORD PTR ?g_Pos@@3UtagPOINT@@A, eax
$LN109@DXW_MainLo:

; 868  : 				}
; 869  : 				Timer[8]++;

	mov	eax, 4
	shl	eax, 3
	mov	ecx, DWORD PTR ?Timer@@3PAHA[eax]
	add	ecx, 1
	mov	edx, 4
	shl	edx, 3
	mov	DWORD PTR ?Timer@@3PAHA[edx], ecx

; 870  : 				if (Timer[8] == 4 && Cframe < 7)

	mov	eax, 4
	shl	eax, 3
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 4
	jne	SHORT $LN110@DXW_MainLo
	cmp	DWORD PTR ?Cframe@@3HA, 7		; Cframe
	jge	SHORT $LN110@DXW_MainLo

; 871  : 				{
; 872  : 					Timer[8] = 0;

	mov	eax, 4
	shl	eax, 3
	mov	DWORD PTR ?Timer@@3PAHA[eax], 0

; 873  : 					Cframe++;

	mov	eax, DWORD PTR ?Cframe@@3HA		; Cframe
	add	eax, 1
	mov	DWORD PTR ?Cframe@@3HA, eax		; Cframe
$LN110@DXW_MainLo:

; 874  : 				}
; 875  : 				if (Cframe == 7)

	cmp	DWORD PTR ?Cframe@@3HA, 7		; Cframe
	jne	SHORT $LN113@DXW_MainLo

; 876  : 				{
; 877  : 					if (Timer[8] > 8)

	mov	eax, 4
	shl	eax, 3
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 8
	jle	SHORT $LN112@DXW_MainLo

; 878  : 					{
; 879  : 						g_bRush = FALSE;

	mov	DWORD PTR ?g_bRush@@3HA, 0		; g_bRush

; 880  : 						g_bRushL = FALSE;

	mov	DWORD PTR ?g_bRushL@@3HA, 0		; g_bRushL

; 881  : 						Timer[9] = 50;

	mov	eax, 4
	imul	ecx, eax, 9
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 50	; 00000032H

; 882  : 						Timer[8] = 0;

	mov	eax, 4
	shl	eax, 3
	mov	DWORD PTR ?Timer@@3PAHA[eax], 0

; 883  : 						Cframe = 0;

	mov	DWORD PTR ?Cframe@@3HA, 0		; Cframe

; 884  : 					}
; 885  : 					else

	jmp	SHORT $LN113@DXW_MainLo
$LN112@DXW_MainLo:

; 886  : 					{
; 887  : 						Timer[8]++;

	mov	eax, 4
	shl	eax, 3
	mov	ecx, DWORD PTR ?Timer@@3PAHA[eax]
	add	ecx, 1
	mov	edx, 4
	shl	edx, 3
	mov	DWORD PTR ?Timer@@3PAHA[edx], ecx
$LN113@DXW_MainLo:

; 888  : 					}
; 889  : 				}
; 890  : 			}
; 891  : 
; 892  : 		}
; 893  : 		if (Timer[9] > 0)

	mov	eax, 4
	imul	ecx, eax, 9
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jle	SHORT $LN114@DXW_MainLo

; 894  : 		{
; 895  : 			Timer[9]--;

	mov	eax, 4
	imul	ecx, eax, 9
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 9
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
$LN114@DXW_MainLo:

; 896  : 		}
; 897  : 		g_Pos.x += Hspeed;

	mov	eax, DWORD PTR ?g_Pos@@3UtagPOINT@@A
	add	eax, DWORD PTR ?Hspeed@@3HA		; Hspeed
	mov	DWORD PTR ?g_Pos@@3UtagPOINT@@A, eax
$LN46@DXW_MainLo:

; 898  : 		//È­¸é ¹ÛÀ¸·Î ÀÌµ¿ÇÏ´Â°ÍÀ» Á¦ÇÑÇÔ.
; 899  : 		//Áß·Â °ü·Ã ¹°¸®¿¬»ê
; 900  : 	}
; 901  : 	if (g_bJump)

	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	je	$LN119@DXW_MainLo

; 902  : 	{
; 903  : 		if (Gravity > -20)

	cmp	DWORD PTR ?Gravity@@3HA, -20		; Gravity, ffffffecH
	jle	$LN119@DXW_MainLo

; 904  : 		{
; 905  : 			Gravity -= 1;

	mov	eax, DWORD PTR ?Gravity@@3HA		; Gravity
	sub	eax, 1
	mov	DWORD PTR ?Gravity@@3HA, eax		; Gravity

; 906  : 			g_Pos.y -= Gravity;

	mov	eax, DWORD PTR ?g_Pos@@3UtagPOINT@@A+4
	sub	eax, DWORD PTR ?Gravity@@3HA		; Gravity
	mov	DWORD PTR ?g_Pos@@3UtagPOINT@@A+4, eax

; 907  : 			if (g_Pos.y > 590 && g_nPhaze == 1) //¹Ù´Ú

	cmp	DWORD PTR ?g_Pos@@3UtagPOINT@@A+4, 590	; 0000024eH
	jle	SHORT $LN117@DXW_MainLo
	cmp	DWORD PTR ?g_nPhaze@@3HA, 1		; g_nPhaze
	jne	SHORT $LN117@DXW_MainLo

; 908  : 			{
; 909  : 				g_Pos.y = 590;

	mov	DWORD PTR ?g_Pos@@3UtagPOINT@@A+4, 590	; 0000024eH

; 910  : 				Gravity = 13;

	mov	DWORD PTR ?Gravity@@3HA, 13		; Gravity, 0000000dH

; 911  : 				g_bSetSpeed = FALSE;

	mov	DWORD PTR ?g_bSetSpeed@@3HA, 0		; g_bSetSpeed

; 912  : 				g_bJump = FALSE;

	mov	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump

; 913  : 				g_bJaccel = FALSE;

	mov	DWORD PTR ?g_bJaccel@@3HA, 0		; g_bJaccel

; 914  : 				g_bJLeft = FALSE;

	mov	DWORD PTR ?g_bJLeft@@3HA, 0		; g_bJLeft

; 915  : 				g_bJRight = FALSE;

	mov	DWORD PTR ?g_bJRight@@3HA, 0		; g_bJRight
$LN117@DXW_MainLo:

; 916  : 			}
; 917  : 			if (g_Pos.y > 500 && g_nPhaze == 2) //¹Ù´Ú

	cmp	DWORD PTR ?g_Pos@@3UtagPOINT@@A+4, 500	; 000001f4H
	jle	SHORT $LN118@DXW_MainLo
	cmp	DWORD PTR ?g_nPhaze@@3HA, 2		; g_nPhaze
	jne	SHORT $LN118@DXW_MainLo

; 918  : 			{
; 919  : 				g_Pos.y = 500;

	mov	DWORD PTR ?g_Pos@@3UtagPOINT@@A+4, 500	; 000001f4H

; 920  : 				Gravity = 13;

	mov	DWORD PTR ?Gravity@@3HA, 13		; Gravity, 0000000dH

; 921  : 				g_bSetSpeed = FALSE;

	mov	DWORD PTR ?g_bSetSpeed@@3HA, 0		; g_bSetSpeed

; 922  : 				g_bJump = FALSE;

	mov	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump

; 923  : 				g_bJaccel = FALSE;

	mov	DWORD PTR ?g_bJaccel@@3HA, 0		; g_bJaccel

; 924  : 				g_bJLeft = FALSE;

	mov	DWORD PTR ?g_bJLeft@@3HA, 0		; g_bJLeft

; 925  : 				g_bJRight = FALSE;

	mov	DWORD PTR ?g_bJRight@@3HA, 0		; g_bJRight
$LN118@DXW_MainLo:

; 926  : 			}
; 927  : 			if (g_Pos.y > 510 && g_nPhaze == 3) //¹Ù´Ú

	cmp	DWORD PTR ?g_Pos@@3UtagPOINT@@A+4, 510	; 000001feH
	jle	SHORT $LN119@DXW_MainLo
	cmp	DWORD PTR ?g_nPhaze@@3HA, 3		; g_nPhaze
	jne	SHORT $LN119@DXW_MainLo

; 928  : 			{
; 929  : 				g_Pos.y = 510;

	mov	DWORD PTR ?g_Pos@@3UtagPOINT@@A+4, 510	; 000001feH

; 930  : 				Gravity = 13;

	mov	DWORD PTR ?Gravity@@3HA, 13		; Gravity, 0000000dH

; 931  : 				g_bSetSpeed = FALSE;

	mov	DWORD PTR ?g_bSetSpeed@@3HA, 0		; g_bSetSpeed

; 932  : 				g_bJump = FALSE;

	mov	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump

; 933  : 				g_bJaccel = FALSE;

	mov	DWORD PTR ?g_bJaccel@@3HA, 0		; g_bJaccel

; 934  : 				g_bJLeft = FALSE;

	mov	DWORD PTR ?g_bJLeft@@3HA, 0		; g_bJLeft

; 935  : 				g_bJRight = FALSE;

	mov	DWORD PTR ?g_bJRight@@3HA, 0		; g_bJRight
$LN119@DXW_MainLo:

; 936  : 			}
; 937  : 
; 938  : 		}
; 939  : 	}
; 940  : 	if (Knockback == TRUE)

	cmp	DWORD PTR ?Knockback@@3HA, 1		; Knockback
	jne	SHORT $LN120@DXW_MainLo

; 941  : 	{
; 942  : 		g_Pos.x += Knockspd;

	mov	eax, DWORD PTR ?g_Pos@@3UtagPOINT@@A
	add	eax, DWORD PTR ?Knockspd@@3HA		; Knockspd
	mov	DWORD PTR ?g_Pos@@3UtagPOINT@@A, eax
$LN120@DXW_MainLo:

; 943  : 	}
; 944  : 	if (Knockback == TRUE && Knockspd > 0)

	cmp	DWORD PTR ?Knockback@@3HA, 1		; Knockback
	jne	SHORT $LN121@DXW_MainLo
	cmp	DWORD PTR ?Knockspd@@3HA, 0		; Knockspd
	jle	SHORT $LN121@DXW_MainLo

; 945  : 	{
; 946  : 		Knockspd -= 2;

	mov	eax, DWORD PTR ?Knockspd@@3HA		; Knockspd
	sub	eax, 2
	mov	DWORD PTR ?Knockspd@@3HA, eax		; Knockspd

; 947  : 		if (Knockspd <= 0)

	cmp	DWORD PTR ?Knockspd@@3HA, 0		; Knockspd
	jg	SHORT $LN123@DXW_MainLo

; 948  : 		{
; 949  : 			Knockspd = 0;

	mov	DWORD PTR ?Knockspd@@3HA, 0		; Knockspd
$LN123@DXW_MainLo:

; 950  : 		}
; 951  : 	}

	jmp	SHORT $LN125@DXW_MainLo
$LN121@DXW_MainLo:

; 952  : 	else if (Knockback == TRUE && Knockspd < 0)

	cmp	DWORD PTR ?Knockback@@3HA, 1		; Knockback
	jne	SHORT $LN125@DXW_MainLo
	cmp	DWORD PTR ?Knockspd@@3HA, 0		; Knockspd
	jge	SHORT $LN125@DXW_MainLo

; 953  : 	{
; 954  : 		Knockspd += 2;

	mov	eax, DWORD PTR ?Knockspd@@3HA		; Knockspd
	add	eax, 2
	mov	DWORD PTR ?Knockspd@@3HA, eax		; Knockspd

; 955  : 		if (Knockspd >= 0)

	js	SHORT $LN125@DXW_MainLo

; 956  : 		{
; 957  : 			Knockspd = 0;

	mov	DWORD PTR ?Knockspd@@3HA, 0		; Knockspd
$LN125@DXW_MainLo:

; 958  : 		}
; 959  : 	}
; 960  : 	if (Knockback == TRUE && Knockspd == 0 && Delay == FALSE)

	cmp	DWORD PTR ?Knockback@@3HA, 1		; Knockback
	jne	SHORT $LN126@DXW_MainLo
	cmp	DWORD PTR ?Knockspd@@3HA, 0		; Knockspd
	jne	SHORT $LN126@DXW_MainLo
	cmp	DWORD PTR ?Delay@@3HA, 0		; Delay
	jne	SHORT $LN126@DXW_MainLo

; 961  : 	{
; 962  : 		Timer[18] = 20;

	mov	eax, 4
	imul	ecx, eax, 18
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 20	; 00000014H

; 963  : 		Delay = TRUE;

	mov	DWORD PTR ?Delay@@3HA, 1		; Delay
$LN126@DXW_MainLo:

; 964  : 	}
; 965  : 	if (Timer[18] > 0 && Knockback == TRUE && Delay ==TRUE)

	mov	eax, 4
	imul	ecx, eax, 18
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jle	SHORT $LN127@DXW_MainLo
	cmp	DWORD PTR ?Knockback@@3HA, 1		; Knockback
	jne	SHORT $LN127@DXW_MainLo
	cmp	DWORD PTR ?Delay@@3HA, 1		; Delay
	jne	SHORT $LN127@DXW_MainLo

; 966  : 	{
; 967  : 		Timer[18] -= 1;

	mov	eax, 4
	imul	ecx, eax, 18
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 18
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
	jmp	SHORT $LN129@DXW_MainLo
$LN127@DXW_MainLo:

; 968  : 	}
; 969  : 	else if (Timer[18] == 0 && Knockback == TRUE && Delay ==TRUE) 

	mov	eax, 4
	imul	ecx, eax, 18
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jne	SHORT $LN129@DXW_MainLo
	cmp	DWORD PTR ?Knockback@@3HA, 1		; Knockback
	jne	SHORT $LN129@DXW_MainLo
	cmp	DWORD PTR ?Delay@@3HA, 1		; Delay
	jne	SHORT $LN129@DXW_MainLo

; 970  : 	{
; 971  : 		Knockback = FALSE;

	mov	DWORD PTR ?Knockback@@3HA, 0		; Knockback

; 972  : 		Delay = FALSE;

	mov	DWORD PTR ?Delay@@3HA, 0		; Delay

; 973  : 		Hspeed = 0;

	mov	DWORD PTR ?Hspeed@@3HA, 0		; Hspeed

; 974  : 		Timer[18] = 0;

	mov	eax, 4
	imul	ecx, eax, 18
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0
$LN129@DXW_MainLo:

; 975  : 	}
; 976  : 	if (g_Pos.x < 0)

	cmp	DWORD PTR ?g_Pos@@3UtagPOINT@@A, 0
	jge	SHORT $LN130@DXW_MainLo

; 977  : 	{
; 978  : 		g_Pos.x = 0;

	mov	DWORD PTR ?g_Pos@@3UtagPOINT@@A, 0
$LN130@DXW_MainLo:

; 979  : 	}
; 980  : 	if (g_Pos.x > HRES - 50)

	cmp	DWORD PTR ?g_Pos@@3UtagPOINT@@A, 974	; 000003ceH
	jle	SHORT $LN131@DXW_MainLo

; 981  : 	{
; 982  : 		g_Pos.x = HRES - 50;

	mov	DWORD PTR ?g_Pos@@3UtagPOINT@@A, 974	; 000003ceH
$LN131@DXW_MainLo:

; 983  : 	}
; 984  : 	if (g_nPhaze > 0 && g_nPhaze < 4)

	cmp	DWORD PTR ?g_nPhaze@@3HA, 0		; g_nPhaze
	jle	$LN134@DXW_MainLo
	cmp	DWORD PTR ?g_nPhaze@@3HA, 4		; g_nPhaze
	jge	$LN134@DXW_MainLo

; 985  : 	{
; 986  : 		if (Timer[28] > 0)

	mov	eax, 4
	imul	ecx, eax, 28
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jle	SHORT $LN133@DXW_MainLo

; 987  : 		{
; 988  : 			Timer[28]--;

	mov	eax, 4
	imul	ecx, eax, 28
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 28
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
$LN133@DXW_MainLo:

; 989  : 		}
; 990  : 		if (::GetKeyState(VK_SPACE) & 0x80 && Timer[28] == 0 && Skilluse == FALSE)

	mov	esi, esp
	push	32					; 00000020H
	call	DWORD PTR __imp__GetKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 128				; 00000080H
	je	$LN134@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 28
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jne	$LN134@DXW_MainLo
	cmp	DWORD PTR ?Skilluse@@3HA, 0		; Skilluse
	jne	SHORT $LN134@DXW_MainLo

; 991  : 		{
; 992  : 			Timer[28] = 500;

	mov	eax, 4
	imul	ecx, eax, 28
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 500	; 000001f4H

; 993  : 			MaxTime = 500;

	mov	DWORD PTR ?MaxTime@@3HA, 500		; MaxTime, 000001f4H

; 994  : 			Timer[29] = 3;

	mov	eax, 4
	imul	ecx, eax, 29
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 3

; 995  : 			Skilluse = TRUE;

	mov	DWORD PTR ?Skilluse@@3HA, 1		; Skilluse

; 996  : 			if (g_pDS[5])

	mov	eax, 4
	imul	ecx, eax, 5
	cmp	DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[ecx], 0
	je	SHORT $LN135@DXW_MainLo

; 997  : 				m_HHSound.Stop(g_pDS[5]);

	mov	eax, 4
	imul	ecx, eax, 5
	mov	edx, DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[ecx]
	push	edx
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?Stop@CHHSound@@QAEXPAUIDirectSoundBuffer@@@Z ; CHHSound::Stop
$LN135@DXW_MainLo:

; 998  : 			m_HHSound.Play(g_pDS[5], false);

	push	0
	mov	eax, 4
	imul	ecx, eax, 5
	mov	edx, DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[ecx]
	push	edx
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?Play@CHHSound@@QAEXPAUIDirectSoundBuffer@@_N@Z ; CHHSound::Play
$LN134@DXW_MainLo:

; 999  : 		}
; 1000 : 	}
; 1001 : 	if (Skilluse == TRUE)

	cmp	DWORD PTR ?Skilluse@@3HA, 1		; Skilluse
	jne	$LN159@DXW_MainLo

; 1002 : 	{
; 1003 : 		if (Timer[29] == 0)

	mov	eax, 4
	imul	ecx, eax, 29
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jne	$LN137@DXW_MainLo

; 1004 : 		{
; 1005 : 			if (PSframe < 8)

	cmp	DWORD PTR ?PSframe@@3HA, 8		; PSframe
	jge	SHORT $LN139@DXW_MainLo

; 1006 : 			{
; 1007 : 				Timer[29] = 4;

	mov	eax, 4
	imul	ecx, eax, 29
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 4
	jmp	SHORT $LN141@DXW_MainLo
$LN139@DXW_MainLo:

; 1008 : 			}
; 1009 : 			else if (PSframe > 8)

	cmp	DWORD PTR ?PSframe@@3HA, 8		; PSframe
	jle	SHORT $LN141@DXW_MainLo

; 1010 : 			{
; 1011 : 				Timer[29] = 3;

	mov	eax, 4
	imul	ecx, eax, 29
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 3
$LN141@DXW_MainLo:

; 1012 : 			}
; 1013 : 			PSframe++;

	mov	eax, DWORD PTR ?PSframe@@3HA		; PSframe
	add	eax, 1
	mov	DWORD PTR ?PSframe@@3HA, eax		; PSframe

; 1014 : 			if (PSframe > 0 && PSframe < 8)

	cmp	DWORD PTR ?PSframe@@3HA, 0		; PSframe
	jle	SHORT $LN142@DXW_MainLo
	cmp	DWORD PTR ?PSframe@@3HA, 8		; PSframe
	jge	SHORT $LN142@DXW_MainLo

; 1015 : 			{
; 1016 : 				if (p1die == FALSE && g_nPhaze == 1)

	cmp	DWORD PTR ?p1die@@3HA, 0		; p1die
	jne	SHORT $LN144@DXW_MainLo
	cmp	DWORD PTR ?g_nPhaze@@3HA, 1		; g_nPhaze
	jne	SHORT $LN144@DXW_MainLo

; 1017 : 				{
; 1018 : 					P1HP -= 15;

	mov	eax, DWORD PTR ?P1HP@@3HA		; P1HP
	sub	eax, 15					; 0000000fH
	mov	DWORD PTR ?P1HP@@3HA, eax		; P1HP
	jmp	SHORT $LN148@DXW_MainLo
$LN144@DXW_MainLo:

; 1019 : 				}
; 1020 : 				else if (p2die == FALSE && g_nPhaze == 2)

	cmp	DWORD PTR ?p2die@@3HA, 0		; p2die
	jne	SHORT $LN146@DXW_MainLo
	cmp	DWORD PTR ?g_nPhaze@@3HA, 2		; g_nPhaze
	jne	SHORT $LN146@DXW_MainLo

; 1021 : 				{
; 1022 : 					P2HP -= 20;

	mov	eax, DWORD PTR ?P2HP@@3HA		; P2HP
	sub	eax, 20					; 00000014H
	mov	DWORD PTR ?P2HP@@3HA, eax		; P2HP
	jmp	SHORT $LN148@DXW_MainLo
$LN146@DXW_MainLo:

; 1023 : 				}
; 1024 : 				else if (p3die == FALSE && g_nPhaze == 3)

	cmp	DWORD PTR ?p3die@@3HA, 0		; p3die
	jne	SHORT $LN148@DXW_MainLo
	cmp	DWORD PTR ?g_nPhaze@@3HA, 3		; g_nPhaze
	jne	SHORT $LN148@DXW_MainLo

; 1025 : 				{
; 1026 : 					P3HP -= 40;

	mov	eax, DWORD PTR ?P3HP@@3HA		; P3HP
	sub	eax, 40					; 00000028H
	mov	DWORD PTR ?P3HP@@3HA, eax		; P3HP
$LN148@DXW_MainLo:

; 1027 : 				}
; 1028 : 			}

	jmp	$LN149@DXW_MainLo
$LN142@DXW_MainLo:

; 1029 : 			else if (PSframe == 9 && BigHit == FALSE)

	cmp	DWORD PTR ?PSframe@@3HA, 9		; PSframe
	jne	$LN149@DXW_MainLo
	cmp	DWORD PTR ?BigHit@@3HA, 0		; BigHit
	jne	$LN149@DXW_MainLo

; 1030 : 			{
; 1031 : 				if (g_pDS[6])

	mov	eax, 4
	imul	ecx, eax, 6
	cmp	DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[ecx], 0
	je	SHORT $LN150@DXW_MainLo

; 1032 : 					m_HHSound.Stop(g_pDS[6]);

	mov	eax, 4
	imul	ecx, eax, 6
	mov	edx, DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[ecx]
	push	edx
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?Stop@CHHSound@@QAEXPAUIDirectSoundBuffer@@@Z ; CHHSound::Stop
$LN150@DXW_MainLo:

; 1033 : 				m_HHSound.Play(g_pDS[6], false);

	push	0
	mov	eax, 4
	imul	ecx, eax, 6
	mov	edx, DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[ecx]
	push	edx
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?Play@CHHSound@@QAEXPAUIDirectSoundBuffer@@_N@Z ; CHHSound::Play

; 1034 : 				if (p1die == FALSE)

	cmp	DWORD PTR ?p1die@@3HA, 0		; p1die
	jne	SHORT $LN151@DXW_MainLo

; 1035 : 				{
; 1036 : 					P1HP -= 150;

	mov	eax, DWORD PTR ?P1HP@@3HA		; P1HP
	sub	eax, 150				; 00000096H
	mov	DWORD PTR ?P1HP@@3HA, eax		; P1HP

; 1037 : 					if (Skillcheat > 0)

	cmp	DWORD PTR ?Skillcheat@@3HA, 0		; Skillcheat
	jle	SHORT $LN153@DXW_MainLo

; 1038 : 					{
; 1039 : 						P1HP -= Skillcheat;

	mov	eax, DWORD PTR ?P1HP@@3HA		; P1HP
	sub	eax, DWORD PTR ?Skillcheat@@3HA		; Skillcheat
	mov	DWORD PTR ?P1HP@@3HA, eax		; P1HP
$LN153@DXW_MainLo:

; 1040 : 					}
; 1041 : 				}

	jmp	SHORT $LN158@DXW_MainLo
$LN151@DXW_MainLo:

; 1042 : 				else if (p2die == FALSE)

	cmp	DWORD PTR ?p2die@@3HA, 0		; p2die
	jne	SHORT $LN154@DXW_MainLo

; 1043 : 				{
; 1044 : 					P2HP -= 200;

	mov	eax, DWORD PTR ?P2HP@@3HA		; P2HP
	sub	eax, 200				; 000000c8H
	mov	DWORD PTR ?P2HP@@3HA, eax		; P2HP

; 1045 : 					if (Skillcheat > 0)

	cmp	DWORD PTR ?Skillcheat@@3HA, 0		; Skillcheat
	jle	SHORT $LN156@DXW_MainLo

; 1046 : 					{
; 1047 : 						P2HP -= Skillcheat;

	mov	eax, DWORD PTR ?P2HP@@3HA		; P2HP
	sub	eax, DWORD PTR ?Skillcheat@@3HA		; Skillcheat
	mov	DWORD PTR ?P2HP@@3HA, eax		; P2HP
$LN156@DXW_MainLo:

; 1048 : 					}
; 1049 : 				}

	jmp	SHORT $LN158@DXW_MainLo
$LN154@DXW_MainLo:

; 1050 : 				else if (p3die == FALSE)

	cmp	DWORD PTR ?p3die@@3HA, 0		; p3die
	jne	SHORT $LN158@DXW_MainLo

; 1051 : 				{
; 1052 : 					P3HP -= 400;

	mov	eax, DWORD PTR ?P3HP@@3HA		; P3HP
	sub	eax, 400				; 00000190H
	mov	DWORD PTR ?P3HP@@3HA, eax		; P3HP

; 1053 : 					if (Skillcheat > 0)

	cmp	DWORD PTR ?Skillcheat@@3HA, 0		; Skillcheat
	jle	SHORT $LN158@DXW_MainLo

; 1054 : 					{
; 1055 : 						P3HP -= Skillcheat;

	mov	eax, DWORD PTR ?P3HP@@3HA		; P3HP
	sub	eax, DWORD PTR ?Skillcheat@@3HA		; Skillcheat
	mov	DWORD PTR ?P3HP@@3HA, eax		; P3HP
$LN158@DXW_MainLo:

; 1056 : 					}
; 1057 : 				}
; 1058 : 				BigHit = TRUE;

	mov	DWORD PTR ?BigHit@@3HA, 1		; BigHit
$LN149@DXW_MainLo:

; 1059 : 			}
; 1060 : 		}

	jmp	SHORT $LN138@DXW_MainLo
$LN137@DXW_MainLo:

; 1061 : 		else { Timer[29]--; }

	mov	eax, 4
	imul	ecx, eax, 29
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 29
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
$LN138@DXW_MainLo:

; 1062 : 		if (PSframe > 19)

	cmp	DWORD PTR ?PSframe@@3HA, 19		; PSframe, 00000013H
	jle	SHORT $LN159@DXW_MainLo

; 1063 : 		{
; 1064 : 			Skilluse = FALSE;

	mov	DWORD PTR ?Skilluse@@3HA, 0		; Skilluse

; 1065 : 			Timer[29] = 0;

	mov	eax, 4
	imul	ecx, eax, 29
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0

; 1066 : 			PSframe = 0;

	mov	DWORD PTR ?PSframe@@3HA, 0		; PSframe

; 1067 : 			BigHit = FALSE;

	mov	DWORD PTR ?BigHit@@3HA, 0		; BigHit
$LN159@DXW_MainLo:

; 1068 : 		}
; 1069 : 	}
; 1070 : 
; 1071 : 	switch (g_nPhaze)

	mov	eax, DWORD PTR ?g_nPhaze@@3HA		; g_nPhaze
	mov	DWORD PTR tv510[ebp], eax
	cmp	DWORD PTR tv510[ebp], 5
	ja	$LN2@DXW_MainLo
	mov	ecx, DWORD PTR tv510[ebp]
	jmp	DWORD PTR $LN1028@DXW_MainLo[ecx*4]
$LN160@DXW_MainLo:

; 1072 : 	{
; 1073 : 
; 1074 : 	case 0:
; 1075 : 		__PutImage(g_pDDSTITLE, 0, 0);

	push	0
	push	0
	mov	eax, DWORD PTR ?g_pDDSTITLE@@3PAUIDirectDrawSurface7@@A ; g_pDDSTITLE
	push	eax
	call	?__PutImage@@YAXPAUIDirectDrawSurface7@@HH@Z ; __PutImage
	add	esp, 12					; 0000000cH

; 1076 : 		if (::GetKeyState(VK_SPACE) & 0x80 && g_nPhaze == 0)

	mov	esi, esp
	push	32					; 00000020H
	call	DWORD PTR __imp__GetKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 128				; 00000080H
	je	SHORT $LN161@DXW_MainLo
	cmp	DWORD PTR ?g_nPhaze@@3HA, 0		; g_nPhaze
	jne	SHORT $LN161@DXW_MainLo

; 1077 : 		{
; 1078 : 			g_nPhaze = 1;

	mov	DWORD PTR ?g_nPhaze@@3HA, 1		; g_nPhaze

; 1079 : 			Timer[12] = 300;

	mov	eax, 4
	imul	ecx, eax, 12
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 300	; 0000012cH
$LN161@DXW_MainLo:

; 1080 : 		}
; 1081 : 		break;

	jmp	$LN2@DXW_MainLo
$LN162@DXW_MainLo:

; 1082 : 	case 1:
; 1083 : 		if (musicstart == TRUE)

	cmp	DWORD PTR ?musicstart@@3HA, 1		; musicstart
	jne	SHORT $LN163@DXW_MainLo

; 1084 : 		{
; 1085 : 		}
; 1086 : 			else

	jmp	SHORT $LN164@DXW_MainLo
$LN163@DXW_MainLo:

; 1087 : 			{
; 1088 : 				m_HHSound.Play(g_pDS[0], true);

	push	1
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[ecx]
	push	edx
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?Play@CHHSound@@QAEXPAUIDirectSoundBuffer@@_N@Z ; CHHSound::Play

; 1089 : 				musicstart = TRUE;

	mov	DWORD PTR ?musicstart@@3HA, 1		; musicstart
$LN164@DXW_MainLo:

; 1090 : 			}
; 1091 : 			//¹è°æ
; 1092 : 			::__PutImage(g_pDDSBG, Bx, 0);

	push	0
	mov	eax, DWORD PTR ?Bx@@3HA			; Bx
	push	eax
	mov	ecx, DWORD PTR ?g_pDDSBG@@3PAUIDirectDrawSurface7@@A ; g_pDDSBG
	push	ecx
	call	?__PutImage@@YAXPAUIDirectDrawSurface7@@HH@Z ; __PutImage
	add	esp, 12					; 0000000cH

; 1093 : 			if (Timer[11] > 0)

	mov	eax, 4
	imul	ecx, eax, 11
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jle	SHORT $LN165@DXW_MainLo

; 1094 : 			{
; 1095 : 				Timer[11] -= 1;

	mov	eax, 4
	imul	ecx, eax, 11
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 11
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
$LN165@DXW_MainLo:

; 1096 : 			}
; 1097 : 			if (Timer[12] > 0)

	mov	eax, 4
	imul	ecx, eax, 12
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jle	SHORT $LN166@DXW_MainLo

; 1098 : 			{
; 1099 : 				Timer[12] -= 1;

	mov	eax, 4
	imul	ecx, eax, 12
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 12
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
$LN166@DXW_MainLo:

; 1100 : 			}
; 1101 : 			if (g_bCast == FALSE && g_bCFire == FALSE && Timer[12] == 0 && BossAtt == FALSE)

	cmp	DWORD PTR ?g_bCast@@3HA, 0		; g_bCast
	jne	SHORT $LN167@DXW_MainLo
	cmp	DWORD PTR ?g_bCFire@@3HA, 0		; g_bCFire
	jne	SHORT $LN167@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 12
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jne	SHORT $LN167@DXW_MainLo
	cmp	DWORD PTR ?BossAtt@@3HA, 0		; BossAtt
	jne	SHORT $LN167@DXW_MainLo

; 1102 : 			{
; 1103 : 				g_bCast = TRUE;

	mov	DWORD PTR ?g_bCast@@3HA, 1		; g_bCast

; 1104 : 				Timer[10] = 5;

	mov	eax, 4
	imul	ecx, eax, 10
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 5
$LN167@DXW_MainLo:

; 1105 : 			}
; 1106 : 			//ÀÌµ¿ ¹× Á¡ÇÁ ·ÎÁ÷
; 1107 : 			///////////////////////
; 1108 : 			///////////////////////
; 1109 : 			///////////////////////
; 1110 : 			///////////////////////
; 1111 : 			//				g_BPos.x += 1;
; 1112 : 
; 1113 : 				if (g_BPos.x + 60 < g_Pos.x && g_bCast == FALSE) //º¸½º ¿À¸¥ÂÊ ÀüÈ¯

	mov	eax, DWORD PTR ?g_BPos@@3UtagPOINT@@A
	add	eax, 60					; 0000003cH
	cmp	eax, DWORD PTR ?g_Pos@@3UtagPOINT@@A
	jge	SHORT $LN168@DXW_MainLo
	cmp	DWORD PTR ?g_bCast@@3HA, 0		; g_bCast
	jne	SHORT $LN168@DXW_MainLo

; 1114 : 				{
; 1115 : 					g_bBLR = TRUE;

	mov	DWORD PTR ?g_bBLR@@3HA, 1		; g_bBLR

; 1116 : 					g_bBLL = FALSE;

	mov	DWORD PTR ?g_bBLL@@3HA, 0		; g_bBLL
	jmp	SHORT $LN170@DXW_MainLo
$LN168@DXW_MainLo:

; 1117 : 				}
; 1118 : 				else if (g_BPos.x > g_Pos.x && g_bCast == FALSE) //º¸½º ¿ÞÂÊ ÀüÈ¯

	mov	eax, DWORD PTR ?g_BPos@@3UtagPOINT@@A
	cmp	eax, DWORD PTR ?g_Pos@@3UtagPOINT@@A
	jle	SHORT $LN170@DXW_MainLo
	cmp	DWORD PTR ?g_bCast@@3HA, 0		; g_bCast
	jne	SHORT $LN170@DXW_MainLo

; 1119 : 				{
; 1120 : 					g_bBLR = FALSE;

	mov	DWORD PTR ?g_bBLR@@3HA, 0		; g_bBLR

; 1121 : 					g_bBLL = TRUE;

	mov	DWORD PTR ?g_bBLL@@3HA, 1		; g_bBLL
$LN170@DXW_MainLo:

; 1122 : 				}
; 1123 : 				if (g_BPos.x + 300 < g_Pos.x && g_bCast == FALSE) //º¸½º ¿À¸¥ÂÊ ÀÌµ¿

	mov	eax, DWORD PTR ?g_BPos@@3UtagPOINT@@A
	add	eax, 300				; 0000012cH
	cmp	eax, DWORD PTR ?g_Pos@@3UtagPOINT@@A
	jge	SHORT $LN171@DXW_MainLo
	cmp	DWORD PTR ?g_bCast@@3HA, 0		; g_bCast
	jne	SHORT $LN171@DXW_MainLo

; 1124 : 				{
; 1125 : 					if (BossAtt == FALSE)

	cmp	DWORD PTR ?BossAtt@@3HA, 0		; BossAtt
	jne	SHORT $LN173@DXW_MainLo

; 1126 : 					{
; 1127 : 						g_BPos.x += 1;

	mov	eax, DWORD PTR ?g_BPos@@3UtagPOINT@@A
	add	eax, 1
	mov	DWORD PTR ?g_BPos@@3UtagPOINT@@A, eax
$LN173@DXW_MainLo:

; 1128 : 					}
; 1129 : 					g_bBLR = TRUE;

	mov	DWORD PTR ?g_bBLR@@3HA, 1		; g_bBLR

; 1130 : 					g_bBLL = FALSE;

	mov	DWORD PTR ?g_bBLL@@3HA, 0		; g_bBLL
	jmp	SHORT $LN174@DXW_MainLo
$LN171@DXW_MainLo:

; 1131 : 				}
; 1132 : 				else if (g_BPos.x - 200 > g_Pos.x && g_bCast == FALSE) //º¸½º ¿ÞÂÊ ÀÌµ¿

	mov	eax, DWORD PTR ?g_BPos@@3UtagPOINT@@A
	sub	eax, 200				; 000000c8H
	cmp	eax, DWORD PTR ?g_Pos@@3UtagPOINT@@A
	jle	SHORT $LN174@DXW_MainLo
	cmp	DWORD PTR ?g_bCast@@3HA, 0		; g_bCast
	jne	SHORT $LN174@DXW_MainLo

; 1133 : 				{
; 1134 : 					if (BossAtt == FALSE)

	cmp	DWORD PTR ?BossAtt@@3HA, 0		; BossAtt
	jne	SHORT $LN175@DXW_MainLo

; 1135 : 					{
; 1136 : 						g_BPos.x -= 1;

	mov	eax, DWORD PTR ?g_BPos@@3UtagPOINT@@A
	sub	eax, 1
	mov	DWORD PTR ?g_BPos@@3UtagPOINT@@A, eax
$LN175@DXW_MainLo:

; 1137 : 					}
; 1138 : 					g_bBLR = FALSE;

	mov	DWORD PTR ?g_bBLR@@3HA, 0		; g_bBLR

; 1139 : 					g_bBLL = TRUE;

	mov	DWORD PTR ?g_bBLL@@3HA, 1		; g_bBLL
$LN174@DXW_MainLo:

; 1140 : 				}
; 1141 : 				if (::GetKeyState(0x58) & 0x80 && g_bAtt == FALSE && g_bRush == FALSE) //°ø°Ý ·ÎÁ÷

	mov	esi, esp
	push	88					; 00000058H
	call	DWORD PTR __imp__GetKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 128				; 00000080H
	je	$LN180@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	$LN180@DXW_MainLo
	cmp	DWORD PTR ?g_bRush@@3HA, 0		; g_bRush
	jne	$LN180@DXW_MainLo

; 1142 : 			{
; 1143 : 				if (g_bLookR == TRUE)

	cmp	DWORD PTR ?g_bLookR@@3HA, 1		; g_bLookR
	jne	SHORT $LN177@DXW_MainLo

; 1144 : 				{
; 1145 : 					g_bAR = TRUE;

	mov	DWORD PTR ?g_bAR@@3HA, 1		; g_bAR

; 1146 : 					g_bAtt = TRUE;

	mov	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt

; 1147 : 					Aframe = 12;

	mov	DWORD PTR ?Aframe@@3HA, 12		; Aframe, 0000000cH

; 1148 : 					if (g_pDS[3])

	mov	eax, 4
	imul	ecx, eax, 3
	cmp	DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[ecx], 0
	je	SHORT $LN179@DXW_MainLo

; 1149 : 						m_HHSound.Stop(g_pDS[3]);

	mov	eax, 4
	imul	ecx, eax, 3
	mov	edx, DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[ecx]
	push	edx
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?Stop@CHHSound@@QAEXPAUIDirectSoundBuffer@@@Z ; CHHSound::Stop
$LN179@DXW_MainLo:

; 1150 : 					m_HHSound.Play(g_pDS[3], false);

	push	0
	mov	eax, 4
	imul	ecx, eax, 3
	mov	edx, DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[ecx]
	push	edx
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?Play@CHHSound@@QAEXPAUIDirectSoundBuffer@@_N@Z ; CHHSound::Play
	jmp	SHORT $LN180@DXW_MainLo
$LN177@DXW_MainLo:

; 1151 : 				}
; 1152 : 				else if (g_bLookL == TRUE)

	cmp	DWORD PTR ?g_bLookL@@3HA, 1		; g_bLookL
	jne	SHORT $LN180@DXW_MainLo

; 1153 : 				{
; 1154 : 					g_bAL = TRUE;

	mov	DWORD PTR ?g_bAL@@3HA, 1		; g_bAL

; 1155 : 					g_bAtt = TRUE;

	mov	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt

; 1156 : 					Aframe = 0;

	mov	DWORD PTR ?Aframe@@3HA, 0		; Aframe

; 1157 : 					if (g_pDS[3])

	mov	eax, 4
	imul	ecx, eax, 3
	cmp	DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[ecx], 0
	je	SHORT $LN181@DXW_MainLo

; 1158 : 						m_HHSound.Stop(g_pDS[3]);

	mov	eax, 4
	imul	ecx, eax, 3
	mov	edx, DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[ecx]
	push	edx
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?Stop@CHHSound@@QAEXPAUIDirectSoundBuffer@@@Z ; CHHSound::Stop
$LN181@DXW_MainLo:

; 1159 : 					m_HHSound.Play(g_pDS[3], false);

	push	0
	mov	eax, 4
	imul	ecx, eax, 3
	mov	edx, DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[ecx]
	push	edx
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?Play@CHHSound@@QAEXPAUIDirectSoundBuffer@@_N@Z ; CHHSound::Play
$LN180@DXW_MainLo:

; 1160 : 				}
; 1161 : 			}
; 1162 : 			//ÀÌµ¿ ¹× Á¡ÇÁ ·ÎÁ÷ ³¡
; 1163 : 			//// Ç¥¸é Å¬¸®¾î	
; 1164 : 			//_FillSurface(g_pDDSBack, 0x00000000);
; 1165 : 			nX = g_Pos.x;

	mov	eax, DWORD PTR ?g_Pos@@3UtagPOINT@@A
	mov	DWORD PTR _nX$[ebp], eax

; 1166 : 			nY = g_Pos.y;

	mov	eax, DWORD PTR ?g_Pos@@3UtagPOINT@@A+4
	mov	DWORD PTR _nY$[ebp], eax

; 1167 : 			bnX = g_BPos.x;

	mov	eax, DWORD PTR ?g_BPos@@3UtagPOINT@@A
	mov	DWORD PTR _bnX$[ebp], eax

; 1168 : 			bnY = g_BPos.y;

	mov	eax, DWORD PTR ?g_BPos@@3UtagPOINT@@A+4
	mov	DWORD PTR _bnY$[ebp], eax

; 1169 : 			SnX = nX;

	mov	eax, DWORD PTR _nX$[ebp]
	mov	DWORD PTR _SnX$[ebp], eax

; 1170 : 			SnY = nY - 65;

	mov	eax, DWORD PTR _nY$[ebp]
	sub	eax, 65					; 00000041H
	mov	DWORD PTR _SnY$[ebp], eax

; 1171 : 			//ÇÃ·¹ÀÌ¾î ÇÇ°Ý·ºÆ® ¼³Á¤
; 1172 : 			if (g_bLookL)

	cmp	DWORD PTR ?g_bLookL@@3HA, 0		; g_bLookL
	je	SHORT $LN182@DXW_MainLo

; 1173 : 			{
; 1174 : 				PHIT = { nX + 11,nY + 10,nX + 45,nY + 80 };

	mov	eax, DWORD PTR _nX$[ebp]
	add	eax, 11					; 0000000bH
	mov	DWORD PTR $T74[ebp], eax
	mov	ecx, DWORD PTR _nY$[ebp]
	add	ecx, 10					; 0000000aH
	mov	DWORD PTR $T74[ebp+4], ecx
	mov	edx, DWORD PTR _nX$[ebp]
	add	edx, 45					; 0000002dH
	mov	DWORD PTR $T74[ebp+8], edx
	mov	eax, DWORD PTR _nY$[ebp]
	add	eax, 80					; 00000050H
	mov	DWORD PTR $T74[ebp+12], eax
	mov	ecx, DWORD PTR $T74[ebp]
	mov	DWORD PTR ?PHIT@@3UtagRECT@@A, ecx
	mov	edx, DWORD PTR $T74[ebp+4]
	mov	DWORD PTR ?PHIT@@3UtagRECT@@A+4, edx
	mov	eax, DWORD PTR $T74[ebp+8]
	mov	DWORD PTR ?PHIT@@3UtagRECT@@A+8, eax
	mov	ecx, DWORD PTR $T74[ebp+12]
	mov	DWORD PTR ?PHIT@@3UtagRECT@@A+12, ecx
	jmp	SHORT $LN184@DXW_MainLo
$LN182@DXW_MainLo:

; 1175 : 			}
; 1176 : 			else if (g_bLookR)

	cmp	DWORD PTR ?g_bLookR@@3HA, 0		; g_bLookR
	je	SHORT $LN184@DXW_MainLo

; 1177 : 			{
; 1178 : 				PHIT = { nX + 25,nY + 10,nX + 58,nY + 80 };

	mov	eax, DWORD PTR _nX$[ebp]
	add	eax, 25					; 00000019H
	mov	DWORD PTR $T73[ebp], eax
	mov	ecx, DWORD PTR _nY$[ebp]
	add	ecx, 10					; 0000000aH
	mov	DWORD PTR $T73[ebp+4], ecx
	mov	edx, DWORD PTR _nX$[ebp]
	add	edx, 58					; 0000003aH
	mov	DWORD PTR $T73[ebp+8], edx
	mov	eax, DWORD PTR _nY$[ebp]
	add	eax, 80					; 00000050H
	mov	DWORD PTR $T73[ebp+12], eax
	mov	ecx, DWORD PTR $T73[ebp]
	mov	DWORD PTR ?PHIT@@3UtagRECT@@A, ecx
	mov	edx, DWORD PTR $T73[ebp+4]
	mov	DWORD PTR ?PHIT@@3UtagRECT@@A+4, edx
	mov	eax, DWORD PTR $T73[ebp+8]
	mov	DWORD PTR ?PHIT@@3UtagRECT@@A+8, eax
	mov	ecx, DWORD PTR $T73[ebp+12]
	mov	DWORD PTR ?PHIT@@3UtagRECT@@A+12, ecx
$LN184@DXW_MainLo:

; 1179 : 			}
; 1180 : 			//Ä³½ºÆÃ ¾Ö´Ï¸ÞÀÌ¼Ç
; 1181 : 			if (g_bCast == TRUE && g_bBLL ==TRUE)

	cmp	DWORD PTR ?g_bCast@@3HA, 1		; g_bCast
	jne	SHORT $LN185@DXW_MainLo
	cmp	DWORD PTR ?g_bBLL@@3HA, 1		; g_bBLL
	jne	SHORT $LN185@DXW_MainLo

; 1182 : 			{
; 1183 : 				::__PutAnimeSprite(g_pDDSCast, bnX, bnY - 30, 20, CAframe, 192, 192, 0);

	push	0
	push	192					; 000000c0H
	push	192					; 000000c0H
	mov	eax, DWORD PTR ?CAframe@@3HA		; CAframe
	push	eax
	push	20					; 00000014H
	mov	ecx, DWORD PTR _bnY$[ebp]
	sub	ecx, 30					; 0000001eH
	push	ecx
	mov	edx, DWORD PTR _bnX$[ebp]
	push	edx
	mov	eax, DWORD PTR ?g_pDDSCast@@3PAUIDirectDrawSurface7@@A ; g_pDDSCast
	push	eax
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN185@DXW_MainLo:

; 1184 : 			}
; 1185 : 			if (g_bCast == TRUE && g_bBLR == TRUE)

	cmp	DWORD PTR ?g_bCast@@3HA, 1		; g_bCast
	jne	SHORT $LN186@DXW_MainLo
	cmp	DWORD PTR ?g_bBLR@@3HA, 1		; g_bBLR
	jne	SHORT $LN186@DXW_MainLo

; 1186 : 			{
; 1187 : 				::__PutAnimeSprite(g_pDDSCast, bnX-20, bnY - 30, 20, CAframe, 192, 192, 0);

	push	0
	push	192					; 000000c0H
	push	192					; 000000c0H
	mov	eax, DWORD PTR ?CAframe@@3HA		; CAframe
	push	eax
	push	20					; 00000014H
	mov	ecx, DWORD PTR _bnY$[ebp]
	sub	ecx, 30					; 0000001eH
	push	ecx
	mov	edx, DWORD PTR _bnX$[ebp]
	sub	edx, 20					; 00000014H
	push	edx
	mov	eax, DWORD PTR ?g_pDDSCast@@3PAUIDirectDrawSurface7@@A ; g_pDDSCast
	push	eax
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN186@DXW_MainLo:

; 1188 : 			}
; 1189 : 			if (Timer[10] > 0 && g_bCast == TRUE)

	mov	eax, 4
	imul	ecx, eax, 10
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jle	SHORT $LN187@DXW_MainLo
	cmp	DWORD PTR ?g_bCast@@3HA, 1		; g_bCast
	jne	SHORT $LN187@DXW_MainLo

; 1190 : 			{
; 1191 : 				Timer[10] -= 1;

	mov	eax, 4
	imul	ecx, eax, 10
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 10
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
	jmp	SHORT $LN189@DXW_MainLo
$LN187@DXW_MainLo:

; 1192 : 			}
; 1193 : 			else if (Timer[10] <= 0 && CAframe <= 19 && g_bCast == TRUE)

	mov	eax, 4
	imul	ecx, eax, 10
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jg	SHORT $LN189@DXW_MainLo
	cmp	DWORD PTR ?CAframe@@3HA, 19		; CAframe, 00000013H
	jg	SHORT $LN189@DXW_MainLo
	cmp	DWORD PTR ?g_bCast@@3HA, 1		; g_bCast
	jne	SHORT $LN189@DXW_MainLo

; 1194 : 			{
; 1195 : 				CAframe++;

	mov	eax, DWORD PTR ?CAframe@@3HA		; CAframe
	add	eax, 1
	mov	DWORD PTR ?CAframe@@3HA, eax		; CAframe

; 1196 : 				Timer[10] = 2;

	mov	eax, 4
	imul	ecx, eax, 10
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 2
$LN189@DXW_MainLo:

; 1197 : 			}
; 1198 : 			if (CAframe == 20)

	cmp	DWORD PTR ?CAframe@@3HA, 20		; CAframe, 00000014H
	jne	SHORT $LN190@DXW_MainLo

; 1199 : 			{
; 1200 : 				Timer[10] = 0;

	mov	eax, 4
	imul	ecx, eax, 10
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0

; 1201 : 				CAframe = 0;

	mov	DWORD PTR ?CAframe@@3HA, 0		; CAframe

; 1202 : 				g_bCast = FALSE;

	mov	DWORD PTR ?g_bCast@@3HA, 0		; g_bCast

; 1203 : 				Timer[12] = (rand() % 200) + 250;

	call	_rand
	cdq
	mov	ecx, 200				; 000000c8H
	idiv	ecx
	add	edx, 250				; 000000faH
	mov	eax, 4
	imul	ecx, eax, 12
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx

; 1204 : 				g_bCFire = TRUE;

	mov	DWORD PTR ?g_bCFire@@3HA, 1		; g_bCFire
$LN190@DXW_MainLo:

; 1205 : 			}
; 1206 : 			//¹ß»çµÈ ¸¶¹ý ¾Ö´Ï¸ÞÀÌ¼Ç
; 1207 : 			if (g_bCFire == TRUE && g_bBLL == TRUE && g_bCRight == FALSE && g_bCLeft == FALSE)

	cmp	DWORD PTR ?g_bCFire@@3HA, 1		; g_bCFire
	jne	SHORT $LN191@DXW_MainLo
	cmp	DWORD PTR ?g_bBLL@@3HA, 1		; g_bBLL
	jne	SHORT $LN191@DXW_MainLo
	cmp	DWORD PTR ?g_bCRight@@3HA, 0		; g_bCRight
	jne	SHORT $LN191@DXW_MainLo
	cmp	DWORD PTR ?g_bCLeft@@3HA, 0		; g_bCLeft
	jne	SHORT $LN191@DXW_MainLo

; 1208 : 			{
; 1209 : 				cx = bnX - 130;

	mov	eax, DWORD PTR _bnX$[ebp]
	sub	eax, 130				; 00000082H
	mov	DWORD PTR ?cx@@3HA, eax			; cx

; 1210 : 				cy = bnY - 330;

	mov	eax, DWORD PTR _bnY$[ebp]
	sub	eax, 330				; 0000014aH
	mov	DWORD PTR ?cy@@3HA, eax			; cy

; 1211 : 				g_bCLeft = TRUE;

	mov	DWORD PTR ?g_bCLeft@@3HA, 1		; g_bCLeft

; 1212 : 				Timer[11] = 3;

	mov	eax, 4
	imul	ecx, eax, 11
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 3
$LN191@DXW_MainLo:

; 1213 : 			}
; 1214 : 			if (g_bCFire == TRUE && g_bBLR == TRUE && g_bCRight == FALSE && g_bCLeft == FALSE)

	cmp	DWORD PTR ?g_bCFire@@3HA, 1		; g_bCFire
	jne	SHORT $LN192@DXW_MainLo
	cmp	DWORD PTR ?g_bBLR@@3HA, 1		; g_bBLR
	jne	SHORT $LN192@DXW_MainLo
	cmp	DWORD PTR ?g_bCRight@@3HA, 0		; g_bCRight
	jne	SHORT $LN192@DXW_MainLo
	cmp	DWORD PTR ?g_bCLeft@@3HA, 0		; g_bCLeft
	jne	SHORT $LN192@DXW_MainLo

; 1215 : 			{
; 1216 : 				cx = bnX + 30;

	mov	eax, DWORD PTR _bnX$[ebp]
	add	eax, 30					; 0000001eH
	mov	DWORD PTR ?cx@@3HA, eax			; cx

; 1217 : 				cy = bnY - 330;

	mov	eax, DWORD PTR _bnY$[ebp]
	sub	eax, 330				; 0000014aH
	mov	DWORD PTR ?cy@@3HA, eax			; cy

; 1218 : 				g_bCRight = TRUE;

	mov	DWORD PTR ?g_bCRight@@3HA, 1		; g_bCRight

; 1219 : 				Timer[11] = 3;

	mov	eax, 4
	imul	ecx, eax, 11
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 3
$LN192@DXW_MainLo:

; 1220 : 			}
; 1221 : 			if (g_bCLeft == TRUE)

	cmp	DWORD PTR ?g_bCLeft@@3HA, 1		; g_bCLeft
	jne	SHORT $LN193@DXW_MainLo

; 1222 : 			{
; 1223 : 				if (Timer[11] > 0)

	mov	eax, 4
	imul	ecx, eax, 11
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jle	SHORT $LN194@DXW_MainLo

; 1224 : 				{
; 1225 : 					Timer[11] -= 1;

	mov	eax, 4
	imul	ecx, eax, 11
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 11
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
	jmp	SHORT $LN196@DXW_MainLo
$LN194@DXW_MainLo:

; 1226 : 				}
; 1227 : 				else if (Timer[11] == 0)

	mov	eax, 4
	imul	ecx, eax, 11
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jne	SHORT $LN196@DXW_MainLo

; 1228 : 				{
; 1229 : 					CAAframe += 1;

	mov	eax, DWORD PTR ?CAAframe@@3HA		; CAAframe
	add	eax, 1
	mov	DWORD PTR ?CAAframe@@3HA, eax		; CAAframe

; 1230 : 					Timer[11] = 3;

	mov	eax, 4
	imul	ecx, eax, 11
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 3
$LN196@DXW_MainLo:

; 1231 : 				}
; 1232 : 				cx -= 7;

	mov	eax, DWORD PTR ?cx@@3HA			; cx
	sub	eax, 7
	mov	DWORD PTR ?cx@@3HA, eax			; cx
$LN193@DXW_MainLo:

; 1233 : 			}
; 1234 : 			if (g_bCRight == TRUE)

	cmp	DWORD PTR ?g_bCRight@@3HA, 1		; g_bCRight
	jne	SHORT $LN197@DXW_MainLo

; 1235 : 			{
; 1236 : 				if (Timer[11] > 0)

	mov	eax, 4
	imul	ecx, eax, 11
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jle	SHORT $LN198@DXW_MainLo

; 1237 : 				{
; 1238 : 					Timer[11] -= 1;

	mov	eax, 4
	imul	ecx, eax, 11
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 11
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
	jmp	SHORT $LN200@DXW_MainLo
$LN198@DXW_MainLo:

; 1239 : 				}
; 1240 : 				else if (Timer[11] == 0)

	mov	eax, 4
	imul	ecx, eax, 11
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jne	SHORT $LN200@DXW_MainLo

; 1241 : 				{
; 1242 : 					CAAframe += 1;

	mov	eax, DWORD PTR ?CAAframe@@3HA		; CAAframe
	add	eax, 1
	mov	DWORD PTR ?CAAframe@@3HA, eax		; CAAframe

; 1243 : 					Timer[11] = 3;

	mov	eax, 4
	imul	ecx, eax, 11
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 3
$LN200@DXW_MainLo:

; 1244 : 				}
; 1245 : 				cx += 7;

	mov	eax, DWORD PTR ?cx@@3HA			; cx
	add	eax, 7
	mov	DWORD PTR ?cx@@3HA, eax			; cx
$LN197@DXW_MainLo:

; 1246 : 			}
; 1247 : 			if (CAAframe == 10)

	cmp	DWORD PTR ?CAAframe@@3HA, 10		; CAAframe, 0000000aH
	jne	SHORT $LN201@DXW_MainLo

; 1248 : 			{
; 1249 : 				CAAframe = 0;

	mov	DWORD PTR ?CAAframe@@3HA, 0		; CAAframe
$LN201@DXW_MainLo:

; 1250 : 			}
; 1251 : 			if (cx < -100 || cx > HRES -200 && g_bCFire == TRUE)

	cmp	DWORD PTR ?cx@@3HA, -100		; cx, ffffff9cH
	jl	SHORT $LN204@DXW_MainLo
	cmp	DWORD PTR ?cx@@3HA, 824			; cx, 00000338H
	jle	$LN202@DXW_MainLo
	cmp	DWORD PTR ?g_bCFire@@3HA, 1		; g_bCFire
	jne	$LN202@DXW_MainLo
$LN204@DXW_MainLo:

; 1252 : 			{
; 1253 : 				g_bCFire = FALSE;

	mov	DWORD PTR ?g_bCFire@@3HA, 0		; g_bCFire

; 1254 : 				g_bCLeft = FALSE;

	mov	DWORD PTR ?g_bCLeft@@3HA, 0		; g_bCLeft

; 1255 : 				g_bCRight = FALSE;

	mov	DWORD PTR ?g_bCRight@@3HA, 0		; g_bCRight

; 1256 : 				CastHit = FALSE;

	mov	DWORD PTR ?CastHit@@3HA, 0		; CastHit

; 1257 : 				Timer[11] = 0;

	mov	eax, 4
	imul	ecx, eax, 11
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0

; 1258 : 				cx = 0;

	mov	DWORD PTR ?cx@@3HA, 0			; cx

; 1259 : 				CAAframe = 0;

	mov	DWORD PTR ?CAAframe@@3HA, 0		; CAAframe

; 1260 : 				Cast = {0,0,1,1};

	mov	DWORD PTR $T72[ebp], 0
	mov	DWORD PTR $T72[ebp+4], 0
	mov	DWORD PTR $T72[ebp+8], 1
	mov	DWORD PTR $T72[ebp+12], 1
	mov	eax, DWORD PTR $T72[ebp]
	mov	DWORD PTR ?Cast@@3UtagRECT@@A, eax
	mov	ecx, DWORD PTR $T72[ebp+4]
	mov	DWORD PTR ?Cast@@3UtagRECT@@A+4, ecx
	mov	edx, DWORD PTR $T72[ebp+8]
	mov	DWORD PTR ?Cast@@3UtagRECT@@A+8, edx
	mov	eax, DWORD PTR $T72[ebp+12]
	mov	DWORD PTR ?Cast@@3UtagRECT@@A+12, eax
	jmp	$LN205@DXW_MainLo
$LN202@DXW_MainLo:

; 1261 : 			}
; 1262 : 			else if (cx > -100 && cx < HRES - 200 && g_bCFire == TRUE)

	cmp	DWORD PTR ?cx@@3HA, -100		; cx, ffffff9cH
	jle	$LN205@DXW_MainLo
	cmp	DWORD PTR ?cx@@3HA, 824			; cx, 00000338H
	jge	SHORT $LN205@DXW_MainLo
	cmp	DWORD PTR ?g_bCFire@@3HA, 1		; g_bCFire
	jne	SHORT $LN205@DXW_MainLo

; 1263 : 			{
; 1264 : 				Cast = { cx + 100,cy + 50,cx + 240,cy + 500 };

	mov	eax, DWORD PTR ?cx@@3HA			; cx
	add	eax, 100				; 00000064H
	mov	DWORD PTR $T71[ebp], eax
	mov	ecx, DWORD PTR ?cy@@3HA			; cy
	add	ecx, 50					; 00000032H
	mov	DWORD PTR $T71[ebp+4], ecx
	mov	edx, DWORD PTR ?cx@@3HA			; cx
	add	edx, 240				; 000000f0H
	mov	DWORD PTR $T71[ebp+8], edx
	mov	eax, DWORD PTR ?cy@@3HA			; cy
	add	eax, 500				; 000001f4H
	mov	DWORD PTR $T71[ebp+12], eax
	mov	ecx, DWORD PTR $T71[ebp]
	mov	DWORD PTR ?Cast@@3UtagRECT@@A, ecx
	mov	edx, DWORD PTR $T71[ebp+4]
	mov	DWORD PTR ?Cast@@3UtagRECT@@A+4, edx
	mov	eax, DWORD PTR $T71[ebp+8]
	mov	DWORD PTR ?Cast@@3UtagRECT@@A+8, eax
	mov	ecx, DWORD PTR $T71[ebp+12]
	mov	DWORD PTR ?Cast@@3UtagRECT@@A+12, ecx
$LN205@DXW_MainLo:

; 1265 : 			}
; 1266 : 			if (g_bCFire == TRUE)

	cmp	DWORD PTR ?g_bCFire@@3HA, 1		; g_bCFire
	jne	SHORT $LN206@DXW_MainLo

; 1267 : 			{
; 1268 : 				::__PutAnimeSprite(g_pDDSCastAtt, cx,cy, 10, CAAframe, 344, 522, 0);

	push	0
	push	522					; 0000020aH
	push	344					; 00000158H
	mov	eax, DWORD PTR ?CAAframe@@3HA		; CAAframe
	push	eax
	push	10					; 0000000aH
	mov	ecx, DWORD PTR ?cy@@3HA			; cy
	push	ecx
	mov	edx, DWORD PTR ?cx@@3HA			; cx
	push	edx
	mov	eax, DWORD PTR ?g_pDDSCastAtt@@3PAUIDirectDrawSurface7@@A ; g_pDDSCastAtt
	push	eax
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN206@DXW_MainLo:

; 1269 : 			}
; 1270 : 
; 1271 : 			if (IntersectRect(&rcDest, &Cast, &PHIT) && CastHit == FALSE)

	mov	esi, esp
	push	OFFSET ?PHIT@@3UtagRECT@@A		; PHIT
	push	OFFSET ?Cast@@3UtagRECT@@A		; Cast
	push	OFFSET ?rcDest@@3UtagRECT@@A		; rcDest
	call	DWORD PTR __imp__IntersectRect@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN210@DXW_MainLo
	cmp	DWORD PTR ?CastHit@@3HA, 0		; CastHit
	jne	$LN210@DXW_MainLo

; 1272 : 			{
; 1273 : 				PlayerHP -= 2000;

	mov	eax, DWORD PTR ?PlayerHP@@3HA		; PlayerHP
	sub	eax, 2000				; 000007d0H
	mov	DWORD PTR ?PlayerHP@@3HA, eax		; PlayerHP

; 1274 : 				Cast = { 0,0,1,1 };

	mov	DWORD PTR $T70[ebp], 0
	mov	DWORD PTR $T70[ebp+4], 0
	mov	DWORD PTR $T70[ebp+8], 1
	mov	DWORD PTR $T70[ebp+12], 1
	mov	eax, DWORD PTR $T70[ebp]
	mov	DWORD PTR ?Cast@@3UtagRECT@@A, eax
	mov	ecx, DWORD PTR $T70[ebp+4]
	mov	DWORD PTR ?Cast@@3UtagRECT@@A+4, ecx
	mov	edx, DWORD PTR $T70[ebp+8]
	mov	DWORD PTR ?Cast@@3UtagRECT@@A+8, edx
	mov	eax, DWORD PTR $T70[ebp+12]
	mov	DWORD PTR ?Cast@@3UtagRECT@@A+12, eax

; 1275 : 				CastHit = TRUE;

	mov	DWORD PTR ?CastHit@@3HA, 1		; CastHit

; 1276 : 				if (PHplay == FALSE)

	cmp	DWORD PTR ?PHplay@@3HA, 0		; PHplay
	jne	SHORT $LN208@DXW_MainLo

; 1277 : 				{
; 1278 : 					PHplay = TRUE;

	mov	DWORD PTR ?PHplay@@3HA, 1		; PHplay

; 1279 : 					Timer[25] = 3;

	mov	eax, 4
	imul	ecx, eax, 25
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 3

; 1280 : 					PHframe = 0;

	mov	DWORD PTR ?PHframe@@3HA, 0		; PHframe
	jmp	SHORT $LN210@DXW_MainLo
$LN208@DXW_MainLo:

; 1281 : 				}
; 1282 : 				else if (PHplay == TRUE)

	cmp	DWORD PTR ?PHplay@@3HA, 1		; PHplay
	jne	SHORT $LN210@DXW_MainLo

; 1283 : 				{
; 1284 : 					PHplay = TRUE;

	mov	DWORD PTR ?PHplay@@3HA, 1		; PHplay

; 1285 : 					Timer[25] = 3;

	mov	eax, 4
	imul	ecx, eax, 25
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 3

; 1286 : 					PHframe = 0;

	mov	DWORD PTR ?PHframe@@3HA, 0		; PHframe
$LN210@DXW_MainLo:

; 1287 : 				}
; 1288 : 			}
; 1289 : 			//// º¸½º ½ºÅÄµù
; 1290 : 			if (Timer[17] == 0 && BossAtt == FALSE)

	mov	eax, 4
	imul	ecx, eax, 17
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jne	SHORT $LN211@DXW_MainLo
	cmp	DWORD PTR ?BossAtt@@3HA, 0		; BossAtt
	jne	SHORT $LN211@DXW_MainLo

; 1291 : 			{ 
; 1292 : 				Timer[16] = 4;

	mov	eax, 4
	shl	eax, 4
	mov	DWORD PTR ?Timer@@3PAHA[eax], 4

; 1293 : 				BossAtt = TRUE;

	mov	DWORD PTR ?BossAtt@@3HA, 1		; BossAtt

; 1294 : 				if (g_bBLL == TRUE)

	cmp	DWORD PTR ?g_bBLL@@3HA, 1		; g_bBLL
	jne	SHORT $LN213@DXW_MainLo

; 1295 : 				{
; 1296 : 					BKframe = 0;

	mov	DWORD PTR ?BKframe@@3HA, 0		; BKframe

; 1297 : 					BAL = TRUE;

	mov	DWORD PTR ?BAL@@3HA, 1			; BAL

; 1298 : 					BAR = FALSE;

	mov	DWORD PTR ?BAR@@3HA, 0			; BAR
	jmp	SHORT $LN214@DXW_MainLo
$LN213@DXW_MainLo:

; 1299 : 				}
; 1300 : 				else { BKframe = 11; BAR = TRUE; BAL = FALSE; }

	mov	DWORD PTR ?BKframe@@3HA, 11		; BKframe, 0000000bH
	mov	DWORD PTR ?BAR@@3HA, 1			; BAR
	mov	DWORD PTR ?BAL@@3HA, 0			; BAL
$LN214@DXW_MainLo:
	jmp	SHORT $LN215@DXW_MainLo
$LN211@DXW_MainLo:

; 1301 : 			}
; 1302 : 			else if (Timer[17] > 0)

	mov	eax, 4
	imul	ecx, eax, 17
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jle	SHORT $LN215@DXW_MainLo

; 1303 : 			{
; 1304 : 				Timer[17] -= 1;

	mov	eax, 4
	imul	ecx, eax, 17
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 17
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
$LN215@DXW_MainLo:

; 1305 : 			}
; 1306 : 			if (BossAtt == TRUE)

	cmp	DWORD PTR ?BossAtt@@3HA, 1		; BossAtt
	jne	$LN233@DXW_MainLo

; 1307 : 			{
; 1308 : 				if (BAL == TRUE)

	cmp	DWORD PTR ?BAL@@3HA, 1			; BAL
	jne	SHORT $LN217@DXW_MainLo

; 1309 : 				{
; 1310 : 					::__PutAnimeSprite(g_pDDSBossAtt, bnX-273, bnY-111, 12, BKframe, 593, 321, 0);

	push	0
	push	321					; 00000141H
	push	593					; 00000251H
	mov	eax, DWORD PTR ?BKframe@@3HA		; BKframe
	push	eax
	push	12					; 0000000cH
	mov	ecx, DWORD PTR _bnY$[ebp]
	sub	ecx, 111				; 0000006fH
	push	ecx
	mov	edx, DWORD PTR _bnX$[ebp]
	sub	edx, 273				; 00000111H
	push	edx
	mov	eax, DWORD PTR ?g_pDDSBossAtt@@3PAUIDirectDrawSurface7@@A ; g_pDDSBossAtt
	push	eax
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	SHORT $LN219@DXW_MainLo
$LN217@DXW_MainLo:

; 1311 : 				}
; 1312 : 				else if (BAR == TRUE)

	cmp	DWORD PTR ?BAR@@3HA, 1			; BAR
	jne	SHORT $LN219@DXW_MainLo

; 1313 : 				{
; 1314 : 					::__PutAnimeSprite(g_pDDSBossAttR, bnX-147, bnY-111, 12, BKframe, 593, 321, 0);

	push	0
	push	321					; 00000141H
	push	593					; 00000251H
	mov	eax, DWORD PTR ?BKframe@@3HA		; BKframe
	push	eax
	push	12					; 0000000cH
	mov	ecx, DWORD PTR _bnY$[ebp]
	sub	ecx, 111				; 0000006fH
	push	ecx
	mov	edx, DWORD PTR _bnX$[ebp]
	sub	edx, 147				; 00000093H
	push	edx
	mov	eax, DWORD PTR ?g_pDDSBossAttR@@3PAUIDirectDrawSurface7@@A ; g_pDDSBossAttR
	push	eax
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN219@DXW_MainLo:

; 1315 : 				}
; 1316 : 				if (Timer[16] > 0)

	mov	eax, 4
	shl	eax, 4
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 0
	jle	SHORT $LN220@DXW_MainLo

; 1317 : 				{
; 1318 : 					Timer[16] -= 1;

	mov	eax, 4
	shl	eax, 4
	mov	ecx, DWORD PTR ?Timer@@3PAHA[eax]
	sub	ecx, 1
	mov	edx, 4
	shl	edx, 4
	mov	DWORD PTR ?Timer@@3PAHA[edx], ecx
	jmp	$LN231@DXW_MainLo
$LN220@DXW_MainLo:

; 1319 : 				}
; 1320 : 				else if (Timer[16] == 0)

	mov	eax, 4
	shl	eax, 4
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 0
	jne	$LN231@DXW_MainLo

; 1321 : 				{
; 1322 : 					if (BAL == TRUE)

	cmp	DWORD PTR ?BAL@@3HA, 1			; BAL
	jne	SHORT $LN223@DXW_MainLo

; 1323 : 					{
; 1324 : 						BKframe++;

	mov	eax, DWORD PTR ?BKframe@@3HA		; BKframe
	add	eax, 1
	mov	DWORD PTR ?BKframe@@3HA, eax		; BKframe
	jmp	SHORT $LN225@DXW_MainLo
$LN223@DXW_MainLo:

; 1325 : 					}
; 1326 : 					else if (BAR == TRUE)

	cmp	DWORD PTR ?BAR@@3HA, 1			; BAR
	jne	SHORT $LN225@DXW_MainLo

; 1327 : 					{
; 1328 : 						BKframe--;

	mov	eax, DWORD PTR ?BKframe@@3HA		; BKframe
	sub	eax, 1
	mov	DWORD PTR ?BKframe@@3HA, eax		; BKframe
$LN225@DXW_MainLo:

; 1329 : 					}
; 1330 : 					if (BKframe < 5 && BAL == TRUE)

	cmp	DWORD PTR ?BKframe@@3HA, 5		; BKframe
	jge	SHORT $LN226@DXW_MainLo
	cmp	DWORD PTR ?BAL@@3HA, 1			; BAL
	jne	SHORT $LN226@DXW_MainLo

; 1331 : 					{
; 1332 : 						Timer[16] = 8;

	mov	eax, 4
	shl	eax, 4
	mov	DWORD PTR ?Timer@@3PAHA[eax], 8
	jmp	SHORT $LN228@DXW_MainLo
$LN226@DXW_MainLo:

; 1333 : 					}
; 1334 : 					else if (BKframe > 5 && BAL == TRUE)

	cmp	DWORD PTR ?BKframe@@3HA, 5		; BKframe
	jle	SHORT $LN228@DXW_MainLo
	cmp	DWORD PTR ?BAL@@3HA, 1			; BAL
	jne	SHORT $LN228@DXW_MainLo

; 1335 : 					{
; 1336 : 						Timer[16] = 5;

	mov	eax, 4
	shl	eax, 4
	mov	DWORD PTR ?Timer@@3PAHA[eax], 5
$LN228@DXW_MainLo:

; 1337 : 					}
; 1338 : 					if (BKframe >8 && BAR == TRUE)

	cmp	DWORD PTR ?BKframe@@3HA, 8		; BKframe
	jle	SHORT $LN229@DXW_MainLo
	cmp	DWORD PTR ?BAR@@3HA, 1			; BAR
	jne	SHORT $LN229@DXW_MainLo

; 1339 : 					{
; 1340 : 						Timer[16] = 8;

	mov	eax, 4
	shl	eax, 4
	mov	DWORD PTR ?Timer@@3PAHA[eax], 8
	jmp	SHORT $LN231@DXW_MainLo
$LN229@DXW_MainLo:

; 1341 : 					}
; 1342 : 					else if (BKframe < 8 && BAR == TRUE)

	cmp	DWORD PTR ?BKframe@@3HA, 8		; BKframe
	jge	SHORT $LN231@DXW_MainLo
	cmp	DWORD PTR ?BAR@@3HA, 1			; BAR
	jne	SHORT $LN231@DXW_MainLo

; 1343 : 					{
; 1344 : 						Timer[16] = 5;

	mov	eax, 4
	shl	eax, 4
	mov	DWORD PTR ?Timer@@3PAHA[eax], 5
$LN231@DXW_MainLo:

; 1345 : 					}
; 1346 : 				}
; 1347 : 				if (BKframe == 12 && BAL == TRUE)

	cmp	DWORD PTR ?BKframe@@3HA, 12		; BKframe, 0000000cH
	jne	$LN232@DXW_MainLo
	cmp	DWORD PTR ?BAL@@3HA, 1			; BAL
	jne	$LN232@DXW_MainLo

; 1348 : 				{
; 1349 : 					Timer[17] = (rand() % 150) + 200;

	call	_rand
	cdq
	mov	ecx, 150				; 00000096H
	idiv	ecx
	add	edx, 200				; 000000c8H
	mov	eax, 4
	imul	ecx, eax, 17
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx

; 1350 : 					Timer[16] = 0;

	mov	eax, 4
	shl	eax, 4
	mov	DWORD PTR ?Timer@@3PAHA[eax], 0

; 1351 : 					BossAtt = FALSE;

	mov	DWORD PTR ?BossAtt@@3HA, 0		; BossAtt

; 1352 : 					BAL = FALSE;

	mov	DWORD PTR ?BAL@@3HA, 0			; BAL

; 1353 : 					BAR = FALSE;

	mov	DWORD PTR ?BAR@@3HA, 0			; BAR

; 1354 : 					KnockHIT = FALSE;

	mov	DWORD PTR ?KnockHIT@@3HA, 0		; KnockHIT

; 1355 : 					BKframe = 0;

	mov	DWORD PTR ?BKframe@@3HA, 0		; BKframe

; 1356 : 					Knock = { 0,0,1,1 };

	mov	DWORD PTR $T69[ebp], 0
	mov	DWORD PTR $T69[ebp+4], 0
	mov	DWORD PTR $T69[ebp+8], 1
	mov	DWORD PTR $T69[ebp+12], 1
	mov	eax, DWORD PTR $T69[ebp]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A, eax
	mov	ecx, DWORD PTR $T69[ebp+4]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+4, ecx
	mov	edx, DWORD PTR $T69[ebp+8]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+8, edx
	mov	eax, DWORD PTR $T69[ebp+12]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+12, eax
$LN232@DXW_MainLo:

; 1357 : 				}
; 1358 : 				if (BKframe == 0 && BAR == TRUE)

	cmp	DWORD PTR ?BKframe@@3HA, 0		; BKframe
	jne	$LN233@DXW_MainLo
	cmp	DWORD PTR ?BAR@@3HA, 1			; BAR
	jne	$LN233@DXW_MainLo

; 1359 : 				{
; 1360 : 					Timer[17] = (rand ()% 150)+ 200;

	call	_rand
	cdq
	mov	ecx, 150				; 00000096H
	idiv	ecx
	add	edx, 200				; 000000c8H
	mov	eax, 4
	imul	ecx, eax, 17
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx

; 1361 : 					Timer[16] = 0;

	mov	eax, 4
	shl	eax, 4
	mov	DWORD PTR ?Timer@@3PAHA[eax], 0

; 1362 : 					BossAtt = FALSE;

	mov	DWORD PTR ?BossAtt@@3HA, 0		; BossAtt

; 1363 : 					BAL = FALSE;

	mov	DWORD PTR ?BAL@@3HA, 0			; BAL

; 1364 : 					BAR = FALSE;

	mov	DWORD PTR ?BAR@@3HA, 0			; BAR

; 1365 : 					BKframe = 0;

	mov	DWORD PTR ?BKframe@@3HA, 0		; BKframe

; 1366 : 					KnockHIT = FALSE;

	mov	DWORD PTR ?KnockHIT@@3HA, 0		; KnockHIT

; 1367 : 					Knock = { 0,0,1,1 };

	mov	DWORD PTR $T68[ebp], 0
	mov	DWORD PTR $T68[ebp+4], 0
	mov	DWORD PTR $T68[ebp+8], 1
	mov	DWORD PTR $T68[ebp+12], 1
	mov	eax, DWORD PTR $T68[ebp]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A, eax
	mov	ecx, DWORD PTR $T68[ebp+4]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+4, ecx
	mov	edx, DWORD PTR $T68[ebp+8]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+8, edx
	mov	eax, DWORD PTR $T68[ebp+12]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+12, eax
$LN233@DXW_MainLo:

; 1368 : 				}
; 1369 : 			}
; 1370 : 			if (BKframe > 4 && BAL == TRUE && KnockHIT == FALSE)

	cmp	DWORD PTR ?BKframe@@3HA, 4		; BKframe
	jle	SHORT $LN234@DXW_MainLo
	cmp	DWORD PTR ?BAL@@3HA, 1			; BAL
	jne	SHORT $LN234@DXW_MainLo
	cmp	DWORD PTR ?KnockHIT@@3HA, 0		; KnockHIT
	jne	SHORT $LN234@DXW_MainLo

; 1371 : 			{
; 1372 : 				Knock = { bnX - 183 ,bnY - 20,bnX + 40,bnY + 140 };

	mov	eax, DWORD PTR _bnX$[ebp]
	sub	eax, 183				; 000000b7H
	mov	DWORD PTR $T67[ebp], eax
	mov	ecx, DWORD PTR _bnY$[ebp]
	sub	ecx, 20					; 00000014H
	mov	DWORD PTR $T67[ebp+4], ecx
	mov	edx, DWORD PTR _bnX$[ebp]
	add	edx, 40					; 00000028H
	mov	DWORD PTR $T67[ebp+8], edx
	mov	eax, DWORD PTR _bnY$[ebp]
	add	eax, 140				; 0000008cH
	mov	DWORD PTR $T67[ebp+12], eax
	mov	ecx, DWORD PTR $T67[ebp]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A, ecx
	mov	edx, DWORD PTR $T67[ebp+4]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+4, edx
	mov	eax, DWORD PTR $T67[ebp+8]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+8, eax
	mov	ecx, DWORD PTR $T67[ebp+12]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+12, ecx
$LN234@DXW_MainLo:

; 1373 : 			}
; 1374 : 			if (BKframe <7 && BAR == TRUE && KnockHIT == FALSE)

	cmp	DWORD PTR ?BKframe@@3HA, 7		; BKframe
	jge	SHORT $LN235@DXW_MainLo
	cmp	DWORD PTR ?BAR@@3HA, 1			; BAR
	jne	SHORT $LN235@DXW_MainLo
	cmp	DWORD PTR ?KnockHIT@@3HA, 0		; KnockHIT
	jne	SHORT $LN235@DXW_MainLo

; 1375 : 			{
; 1376 : 				Knock = { bnX + 130 ,bnY - 20,bnX + 353,bnY + 140 };

	mov	eax, DWORD PTR _bnX$[ebp]
	add	eax, 130				; 00000082H
	mov	DWORD PTR $T66[ebp], eax
	mov	ecx, DWORD PTR _bnY$[ebp]
	sub	ecx, 20					; 00000014H
	mov	DWORD PTR $T66[ebp+4], ecx
	mov	edx, DWORD PTR _bnX$[ebp]
	add	edx, 353				; 00000161H
	mov	DWORD PTR $T66[ebp+8], edx
	mov	eax, DWORD PTR _bnY$[ebp]
	add	eax, 140				; 0000008cH
	mov	DWORD PTR $T66[ebp+12], eax
	mov	ecx, DWORD PTR $T66[ebp]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A, ecx
	mov	edx, DWORD PTR $T66[ebp+4]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+4, edx
	mov	eax, DWORD PTR $T66[ebp+8]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+8, eax
	mov	ecx, DWORD PTR $T66[ebp+12]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+12, ecx
$LN235@DXW_MainLo:

; 1377 : 			}
; 1378 : 			if (BKframe > 6 && BAL == TRUE)

	cmp	DWORD PTR ?BKframe@@3HA, 6		; BKframe
	jle	SHORT $LN236@DXW_MainLo
	cmp	DWORD PTR ?BAL@@3HA, 1			; BAL
	jne	SHORT $LN236@DXW_MainLo

; 1379 : 			{
; 1380 : 				Knock = {0,0,1,1 };

	mov	DWORD PTR $T65[ebp], 0
	mov	DWORD PTR $T65[ebp+4], 0
	mov	DWORD PTR $T65[ebp+8], 1
	mov	DWORD PTR $T65[ebp+12], 1
	mov	eax, DWORD PTR $T65[ebp]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A, eax
	mov	ecx, DWORD PTR $T65[ebp+4]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+4, ecx
	mov	edx, DWORD PTR $T65[ebp+8]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+8, edx
	mov	eax, DWORD PTR $T65[ebp+12]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+12, eax
$LN236@DXW_MainLo:

; 1381 : 			}
; 1382 : 			if (BKframe <6 && BAR == TRUE)

	cmp	DWORD PTR ?BKframe@@3HA, 6		; BKframe
	jge	SHORT $LN237@DXW_MainLo
	cmp	DWORD PTR ?BAR@@3HA, 1			; BAR
	jne	SHORT $LN237@DXW_MainLo

; 1383 : 			{
; 1384 : 				Knock = {0,0,1,1};

	mov	DWORD PTR $T64[ebp], 0
	mov	DWORD PTR $T64[ebp+4], 0
	mov	DWORD PTR $T64[ebp+8], 1
	mov	DWORD PTR $T64[ebp+12], 1
	mov	eax, DWORD PTR $T64[ebp]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A, eax
	mov	ecx, DWORD PTR $T64[ebp+4]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+4, ecx
	mov	edx, DWORD PTR $T64[ebp+8]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+8, edx
	mov	eax, DWORD PTR $T64[ebp+12]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+12, eax
$LN237@DXW_MainLo:

; 1385 : 			}
; 1386 : 			if (IntersectRect(&rcDest, &Knock, &PHIT))

	mov	esi, esp
	push	OFFSET ?PHIT@@3UtagRECT@@A		; PHIT
	push	OFFSET ?Knock@@3UtagRECT@@A		; Knock
	push	OFFSET ?rcDest@@3UtagRECT@@A		; rcDest
	call	DWORD PTR __imp__IntersectRect@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN249@DXW_MainLo

; 1387 : 			{
; 1388 : 				if (BAR == TRUE && Knockback == FALSE)

	cmp	DWORD PTR ?BAR@@3HA, 1			; BAR
	jne	$LN239@DXW_MainLo
	cmp	DWORD PTR ?Knockback@@3HA, 0		; Knockback
	jne	$LN239@DXW_MainLo

; 1389 : 				{
; 1390 : 					Knockspd = 30;

	mov	DWORD PTR ?Knockspd@@3HA, 30		; Knockspd, 0000001eH

; 1391 : 					Knockback = TRUE;

	mov	DWORD PTR ?Knockback@@3HA, 1		; Knockback

; 1392 : 					PlayerHP -= 1000;

	mov	eax, DWORD PTR ?PlayerHP@@3HA		; PlayerHP
	sub	eax, 1000				; 000003e8H
	mov	DWORD PTR ?PlayerHP@@3HA, eax		; PlayerHP

; 1393 : 					KnockHIT = TRUE;

	mov	DWORD PTR ?KnockHIT@@3HA, 1		; KnockHIT

; 1394 : 					Knock = { 0,0,1,1 };

	mov	DWORD PTR $T63[ebp], 0
	mov	DWORD PTR $T63[ebp+4], 0
	mov	DWORD PTR $T63[ebp+8], 1
	mov	DWORD PTR $T63[ebp+12], 1
	mov	eax, DWORD PTR $T63[ebp]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A, eax
	mov	ecx, DWORD PTR $T63[ebp+4]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+4, ecx
	mov	edx, DWORD PTR $T63[ebp+8]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+8, edx
	mov	eax, DWORD PTR $T63[ebp+12]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+12, eax

; 1395 : 					if (PHplay == FALSE)

	cmp	DWORD PTR ?PHplay@@3HA, 0		; PHplay
	jne	SHORT $LN241@DXW_MainLo

; 1396 : 					{
; 1397 : 						PHplay = TRUE;

	mov	DWORD PTR ?PHplay@@3HA, 1		; PHplay

; 1398 : 						Timer[25] = 3;

	mov	eax, 4
	imul	ecx, eax, 25
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 3

; 1399 : 						PHframe = 0;

	mov	DWORD PTR ?PHframe@@3HA, 0		; PHframe
	jmp	SHORT $LN243@DXW_MainLo
$LN241@DXW_MainLo:

; 1400 : 					}
; 1401 : 					else if (PHplay == TRUE)

	cmp	DWORD PTR ?PHplay@@3HA, 1		; PHplay
	jne	SHORT $LN243@DXW_MainLo

; 1402 : 					{
; 1403 : 						PHplay = TRUE;

	mov	DWORD PTR ?PHplay@@3HA, 1		; PHplay

; 1404 : 						Timer[25] = 3;

	mov	eax, 4
	imul	ecx, eax, 25
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 3

; 1405 : 						PHframe = 0;

	mov	DWORD PTR ?PHframe@@3HA, 0		; PHframe
$LN243@DXW_MainLo:

; 1406 : 					}
; 1407 : 					if (g_bRush == TRUE)

	cmp	DWORD PTR ?g_bRush@@3HA, 1		; g_bRush
	jne	SHORT $LN244@DXW_MainLo

; 1408 : 					{
; 1409 : 						g_bRush = FALSE;

	mov	DWORD PTR ?g_bRush@@3HA, 0		; g_bRush

; 1410 : 						g_bRushL = FALSE;

	mov	DWORD PTR ?g_bRushL@@3HA, 0		; g_bRushL

; 1411 : 						g_bRushR = FALSE;

	mov	DWORD PTR ?g_bRushR@@3HA, 0		; g_bRushR

; 1412 : 						Timer[9] = 20;

	mov	eax, 4
	imul	ecx, eax, 9
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 20	; 00000014H

; 1413 : 						Timer[8] = 0;

	mov	eax, 4
	shl	eax, 3
	mov	DWORD PTR ?Timer@@3PAHA[eax], 0

; 1414 : 						Cframe = 0;

	mov	DWORD PTR ?Cframe@@3HA, 0		; Cframe
$LN244@DXW_MainLo:

; 1415 : 					}
; 1416 : 
; 1417 : 					if (g_bJump == TRUE)

	cmp	DWORD PTR ?g_bJump@@3HA, 1		; g_bJump
	jne	SHORT $LN245@DXW_MainLo

; 1418 : 					{
; 1419 : 						Knockspd = 35;

	mov	DWORD PTR ?Knockspd@@3HA, 35		; Knockspd, 00000023H
$LN245@DXW_MainLo:

; 1420 : 					}
; 1421 : 				}

	jmp	$LN249@DXW_MainLo
$LN239@DXW_MainLo:

; 1422 : 				else if (BAL == TRUE && Knockback == FALSE)

	cmp	DWORD PTR ?BAL@@3HA, 1			; BAL
	jne	$LN249@DXW_MainLo
	cmp	DWORD PTR ?Knockback@@3HA, 0		; Knockback
	jne	$LN249@DXW_MainLo

; 1423 : 				{
; 1424 : 					Knockspd = -30;

	mov	DWORD PTR ?Knockspd@@3HA, -30		; Knockspd, ffffffe2H

; 1425 : 					Knockback = TRUE;

	mov	DWORD PTR ?Knockback@@3HA, 1		; Knockback

; 1426 : 					KnockHIT = TRUE;

	mov	DWORD PTR ?KnockHIT@@3HA, 1		; KnockHIT

; 1427 : 					PlayerHP -= 1000;

	mov	eax, DWORD PTR ?PlayerHP@@3HA		; PlayerHP
	sub	eax, 1000				; 000003e8H
	mov	DWORD PTR ?PlayerHP@@3HA, eax		; PlayerHP

; 1428 : 					Knock = { 0,0,1,1 };

	mov	DWORD PTR $T62[ebp], 0
	mov	DWORD PTR $T62[ebp+4], 0
	mov	DWORD PTR $T62[ebp+8], 1
	mov	DWORD PTR $T62[ebp+12], 1
	mov	eax, DWORD PTR $T62[ebp]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A, eax
	mov	ecx, DWORD PTR $T62[ebp+4]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+4, ecx
	mov	edx, DWORD PTR $T62[ebp+8]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+8, edx
	mov	eax, DWORD PTR $T62[ebp+12]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+12, eax

; 1429 : 					if (PHplay == FALSE)

	cmp	DWORD PTR ?PHplay@@3HA, 0		; PHplay
	jne	SHORT $LN247@DXW_MainLo

; 1430 : 					{
; 1431 : 						PHplay = TRUE;

	mov	DWORD PTR ?PHplay@@3HA, 1		; PHplay

; 1432 : 						Timer[25] = 3;

	mov	eax, 4
	imul	ecx, eax, 25
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 3

; 1433 : 						PHframe = 0;

	mov	DWORD PTR ?PHframe@@3HA, 0		; PHframe
$LN247@DXW_MainLo:

; 1434 : 					}
; 1435 : 					if (g_bRush == TRUE)

	cmp	DWORD PTR ?g_bRush@@3HA, 1		; g_bRush
	jne	SHORT $LN248@DXW_MainLo

; 1436 : 					{
; 1437 : 						g_bRush = FALSE;

	mov	DWORD PTR ?g_bRush@@3HA, 0		; g_bRush

; 1438 : 						g_bRushL = FALSE;

	mov	DWORD PTR ?g_bRushL@@3HA, 0		; g_bRushL

; 1439 : 						g_bRushR = FALSE;

	mov	DWORD PTR ?g_bRushR@@3HA, 0		; g_bRushR

; 1440 : 						Timer[9] = 20;

	mov	eax, 4
	imul	ecx, eax, 9
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 20	; 00000014H

; 1441 : 						Timer[8] = 0;

	mov	eax, 4
	shl	eax, 3
	mov	DWORD PTR ?Timer@@3PAHA[eax], 0

; 1442 : 						Cframe = 0;

	mov	DWORD PTR ?Cframe@@3HA, 0		; Cframe
$LN248@DXW_MainLo:

; 1443 : 					}
; 1444 : 					if (g_bJump == TRUE)

	cmp	DWORD PTR ?g_bJump@@3HA, 1		; g_bJump
	jne	SHORT $LN249@DXW_MainLo

; 1445 : 					{
; 1446 : 						Knockspd = -35;

	mov	DWORD PTR ?Knockspd@@3HA, -35		; Knockspd, ffffffddH
$LN249@DXW_MainLo:

; 1447 : 					}
; 1448 : 				}
; 1449 : 			}
; 1450 : 			if (p1die == FALSE && BossAtt == FALSE)

	cmp	DWORD PTR ?p1die@@3HA, 0		; p1die
	jne	$LN256@DXW_MainLo
	cmp	DWORD PTR ?BossAtt@@3HA, 0		; BossAtt
	jne	$LN256@DXW_MainLo

; 1451 : 			{
; 1452 : 				BOSS = { bnX + 10 ,bnY,bnX + 170,bnY + 148 };

	mov	eax, DWORD PTR _bnX$[ebp]
	add	eax, 10					; 0000000aH
	mov	DWORD PTR $T61[ebp], eax
	mov	ecx, DWORD PTR _bnY$[ebp]
	mov	DWORD PTR $T61[ebp+4], ecx
	mov	edx, DWORD PTR _bnX$[ebp]
	add	edx, 170				; 000000aaH
	mov	DWORD PTR $T61[ebp+8], edx
	mov	eax, DWORD PTR _bnY$[ebp]
	add	eax, 148				; 00000094H
	mov	DWORD PTR $T61[ebp+12], eax
	mov	ecx, DWORD PTR $T61[ebp]
	mov	DWORD PTR ?BOSS@@3UtagRECT@@A, ecx
	mov	edx, DWORD PTR $T61[ebp+4]
	mov	DWORD PTR ?BOSS@@3UtagRECT@@A+4, edx
	mov	eax, DWORD PTR $T61[ebp+8]
	mov	DWORD PTR ?BOSS@@3UtagRECT@@A+8, eax
	mov	ecx, DWORD PTR $T61[ebp+12]
	mov	DWORD PTR ?BOSS@@3UtagRECT@@A+12, ecx

; 1453 : 				if (Timer[1] >= 8)

	mov	eax, 4
	shl	eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 8
	jl	SHORT $LN251@DXW_MainLo

; 1454 : 				{
; 1455 : 					Timer[1] = 0;

	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR ?Timer@@3PAHA[eax], 0

; 1456 : 					Bframe++;

	mov	eax, DWORD PTR ?Bframe@@3HA		; Bframe
	add	eax, 1
	mov	DWORD PTR ?Bframe@@3HA, eax		; Bframe

; 1457 : 					if (Bframe >= 7)

	cmp	DWORD PTR ?Bframe@@3HA, 7		; Bframe
	jl	SHORT $LN253@DXW_MainLo

; 1458 : 					{
; 1459 : 						Bframe = 0;

	mov	DWORD PTR ?Bframe@@3HA, 0		; Bframe
$LN253@DXW_MainLo:

; 1460 : 					}
; 1461 : 				}

	jmp	SHORT $LN252@DXW_MainLo
$LN251@DXW_MainLo:

; 1462 : 				else { Timer[1]++; }

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR ?Timer@@3PAHA[eax]
	add	ecx, 1
	mov	edx, 4
	shl	edx, 0
	mov	DWORD PTR ?Timer@@3PAHA[edx], ecx
$LN252@DXW_MainLo:

; 1463 : 				if (g_bBLL == TRUE)

	cmp	DWORD PTR ?g_bBLL@@3HA, 1		; g_bBLL
	jne	SHORT $LN254@DXW_MainLo

; 1464 : 				{
; 1465 : 					::__PutAnimeSprite(g_pDDSTwo, bnX, bnY, 8, Bframe, 174, 148, 0);

	push	0
	push	148					; 00000094H
	push	174					; 000000aeH
	mov	eax, DWORD PTR ?Bframe@@3HA		; Bframe
	push	eax
	push	8
	mov	ecx, DWORD PTR _bnY$[ebp]
	push	ecx
	mov	edx, DWORD PTR _bnX$[ebp]
	push	edx
	mov	eax, DWORD PTR ?g_pDDSTwo@@3PAUIDirectDrawSurface7@@A ; g_pDDSTwo
	push	eax
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	SHORT $LN256@DXW_MainLo
$LN254@DXW_MainLo:

; 1466 : 				}
; 1467 : 				else if (g_bBLR == TRUE)

	cmp	DWORD PTR ?g_bBLR@@3HA, 1		; g_bBLR
	jne	SHORT $LN256@DXW_MainLo

; 1468 : 				{
; 1469 : 					::__PutAnimeSprite(g_pDDSTwoR, bnX, bnY, 8, Bframe, 174, 148, 0);

	push	0
	push	148					; 00000094H
	push	174					; 000000aeH
	mov	eax, DWORD PTR ?Bframe@@3HA		; Bframe
	push	eax
	push	8
	mov	ecx, DWORD PTR _bnY$[ebp]
	push	ecx
	mov	edx, DWORD PTR _bnX$[ebp]
	push	edx
	mov	eax, DWORD PTR ?g_pDDSTwoR@@3PAUIDirectDrawSurface7@@A ; g_pDDSTwoR
	push	eax
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN256@DXW_MainLo:

; 1470 : 				}
; 1471 : 			}
; 1472 : 			if (Timer[0] >= 26)

	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 26	; 0000001aH
	jl	SHORT $LN257@DXW_MainLo

; 1473 : 			{
; 1474 : 				Timer[0] = 0;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0
$LN257@DXW_MainLo:

; 1475 : 			}
; 1476 : 			//Ä³¸¯ÅÍ µ¹Áø ¾Ö´Ï¸ÞÀÌ¼Ç
; 1477 : 			if (g_bRush == FALSE)

	cmp	DWORD PTR ?g_bRush@@3HA, 0		; g_bRush
	jne	$LN298@DXW_MainLo

; 1478 : 			{
; 1479 : 				//½ºÅÄµù
; 1480 : 				if (g_bLookL == 1 && g_bJump == 0 && g_bLeft == 0 && g_bRight == 0 && g_bAtt == FALSE)

	cmp	DWORD PTR ?g_bLookL@@3HA, 1		; g_bLookL
	jne	SHORT $LN259@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN259@DXW_MainLo
	cmp	DWORD PTR ?g_bLeft@@3HA, 0		; g_bLeft
	jne	SHORT $LN259@DXW_MainLo
	cmp	DWORD PTR ?g_bRight@@3HA, 0		; g_bRight
	jne	SHORT $LN259@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	SHORT $LN259@DXW_MainLo

; 1481 : 				{
; 1482 : 					::__PutAnimeSprite(g_pDDSOne, nX, nY, 9, 0, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	0
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A ; g_pDDSOne
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	SHORT $LN261@DXW_MainLo
$LN259@DXW_MainLo:

; 1483 : 				}
; 1484 : 				else if (g_bLookR == 1 && g_bJump == 0 && g_bLeft == 0 && g_bRight == 0 && g_bAtt == FALSE)

	cmp	DWORD PTR ?g_bLookR@@3HA, 1		; g_bLookR
	jne	SHORT $LN261@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN261@DXW_MainLo
	cmp	DWORD PTR ?g_bLeft@@3HA, 0		; g_bLeft
	jne	SHORT $LN261@DXW_MainLo
	cmp	DWORD PTR ?g_bRight@@3HA, 0		; g_bRight
	jne	SHORT $LN261@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	SHORT $LN261@DXW_MainLo

; 1485 : 				{
; 1486 : 					::__PutAnimeSprite(g_pDDSOneR, nX, nY, 9, 8, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	8
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A ; g_pDDSOneR
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN261@DXW_MainLo:

; 1487 : 				}
; 1488 : 				//Á¡ÇÁ
; 1489 : 				if (g_bLookL == 1 && g_bJump == 1 && g_bAtt == FALSE)

	cmp	DWORD PTR ?g_bLookL@@3HA, 1		; g_bLookL
	jne	SHORT $LN262@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 1		; g_bJump
	jne	SHORT $LN262@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	SHORT $LN262@DXW_MainLo

; 1490 : 				{
; 1491 : 					::__PutAnimeSprite(g_pDDSOne, nX, nY, 9, 3, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	3
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A ; g_pDDSOne
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	SHORT $LN264@DXW_MainLo
$LN262@DXW_MainLo:

; 1492 : 				}
; 1493 : 				else if (g_bLookR == 1 && g_bJump == 1 && g_bAtt == FALSE)

	cmp	DWORD PTR ?g_bLookR@@3HA, 1		; g_bLookR
	jne	SHORT $LN264@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 1		; g_bJump
	jne	SHORT $LN264@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	SHORT $LN264@DXW_MainLo

; 1494 : 				{
; 1495 : 					::__PutAnimeSprite(g_pDDSOneR, nX, nY, 9, 5, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	5
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A ; g_pDDSOneR
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN264@DXW_MainLo:

; 1496 : 				}
; 1497 : 				//¹«ºù
; 1498 : 				if (g_bLeft == 1 && g_bJump == 0 && Timer[0] < 5 && g_bJump == 0 && g_bAtt == FALSE)

	cmp	DWORD PTR ?g_bLeft@@3HA, 1		; g_bLeft
	jne	SHORT $LN265@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN265@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 5
	jge	SHORT $LN265@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN265@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	SHORT $LN265@DXW_MainLo

; 1499 : 				{
; 1500 : 					::__PutAnimeSprite(g_pDDSOne, nX, nY, 9, 1, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	1
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A ; g_pDDSOne
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	$LN271@DXW_MainLo
$LN265@DXW_MainLo:

; 1501 : 				}
; 1502 : 				else if (g_bLeft == 1 && g_bJump == 0 && Timer[0] >= 5 && Timer[0] < 12 && g_bAtt == FALSE)

	cmp	DWORD PTR ?g_bLeft@@3HA, 1		; g_bLeft
	jne	SHORT $LN267@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN267@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 5
	jl	SHORT $LN267@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 12	; 0000000cH
	jge	SHORT $LN267@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	SHORT $LN267@DXW_MainLo

; 1503 : 				{
; 1504 : 					::__PutAnimeSprite(g_pDDSOne, nX, nY, 9, 0, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	0
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A ; g_pDDSOne
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	$LN271@DXW_MainLo
$LN267@DXW_MainLo:

; 1505 : 				}
; 1506 : 				else if (g_bLeft == 1 && g_bJump == 0 && Timer[0] >= 12 && Timer[0] < 19 && g_bAtt == FALSE)

	cmp	DWORD PTR ?g_bLeft@@3HA, 1		; g_bLeft
	jne	SHORT $LN269@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN269@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 12	; 0000000cH
	jl	SHORT $LN269@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 19	; 00000013H
	jge	SHORT $LN269@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	SHORT $LN269@DXW_MainLo

; 1507 : 				{
; 1508 : 					::__PutAnimeSprite(g_pDDSOne, nX, nY, 9, 2, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	2
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A ; g_pDDSOne
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	SHORT $LN271@DXW_MainLo
$LN269@DXW_MainLo:

; 1509 : 				}
; 1510 : 				else if (g_bLeft == 1 && g_bJump == 0 && Timer[0] >= 19 && g_bAtt == FALSE)

	cmp	DWORD PTR ?g_bLeft@@3HA, 1		; g_bLeft
	jne	SHORT $LN271@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN271@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 19	; 00000013H
	jl	SHORT $LN271@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	SHORT $LN271@DXW_MainLo

; 1511 : 				{
; 1512 : 					::__PutAnimeSprite(g_pDDSOne, nX, nY, 9, 0, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	0
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A ; g_pDDSOne
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN271@DXW_MainLo:

; 1513 : 				}
; 1514 : 				if (g_bRight == 1 && g_bJump == 0 && Timer[0] < 5 && g_bAtt == FALSE)

	cmp	DWORD PTR ?g_bRight@@3HA, 1		; g_bRight
	jne	SHORT $LN272@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN272@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 5
	jge	SHORT $LN272@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	SHORT $LN272@DXW_MainLo

; 1515 : 				{
; 1516 : 					::__PutAnimeSprite(g_pDDSOneR, nX, nY, 9, 7, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	7
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A ; g_pDDSOneR
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	$LN278@DXW_MainLo
$LN272@DXW_MainLo:

; 1517 : 				}
; 1518 : 				else if (g_bRight == 1 && g_bJump == 0 && Timer[0] >= 5 && Timer[0] < 12 && g_bAtt == FALSE)

	cmp	DWORD PTR ?g_bRight@@3HA, 1		; g_bRight
	jne	SHORT $LN274@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN274@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 5
	jl	SHORT $LN274@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 12	; 0000000cH
	jge	SHORT $LN274@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	SHORT $LN274@DXW_MainLo

; 1519 : 				{
; 1520 : 					::__PutAnimeSprite(g_pDDSOneR, nX, nY, 9, 8, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	8
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A ; g_pDDSOneR
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	$LN278@DXW_MainLo
$LN274@DXW_MainLo:

; 1521 : 				}
; 1522 : 				else if (g_bRight == 1 && g_bJump == 0 && Timer[0] >= 12 && Timer[0] < 19 && g_bAtt == FALSE)

	cmp	DWORD PTR ?g_bRight@@3HA, 1		; g_bRight
	jne	SHORT $LN276@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN276@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 12	; 0000000cH
	jl	SHORT $LN276@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 19	; 00000013H
	jge	SHORT $LN276@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	SHORT $LN276@DXW_MainLo

; 1523 : 				{
; 1524 : 					::__PutAnimeSprite(g_pDDSOneR, nX, nY, 9, 6, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	6
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A ; g_pDDSOneR
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	SHORT $LN278@DXW_MainLo
$LN276@DXW_MainLo:

; 1525 : 				}
; 1526 : 				else if (g_bRight == 1 && g_bJump == 0 && Timer[0] >= 19 && g_bAtt == FALSE)

	cmp	DWORD PTR ?g_bRight@@3HA, 1		; g_bRight
	jne	SHORT $LN278@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN278@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 19	; 00000013H
	jl	SHORT $LN278@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	SHORT $LN278@DXW_MainLo

; 1527 : 				{
; 1528 : 					::__PutAnimeSprite(g_pDDSOneR, nX, nY, 9, 8, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	8
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A ; g_pDDSOneR
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN278@DXW_MainLo:

; 1529 : 				}
; 1530 : 				if (g_bAtt == TRUE && g_bAR == TRUE && Timer[4] < 7)

	cmp	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt
	jne	SHORT $LN279@DXW_MainLo
	cmp	DWORD PTR ?g_bAR@@3HA, 1		; g_bAR
	jne	SHORT $LN279@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 7
	jge	SHORT $LN279@DXW_MainLo

; 1531 : 				{
; 1532 : 					::__PutAnimeSprite(g_pDDSOneR, nX, nY, 9, 1, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	1
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A ; g_pDDSOneR
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	$LN287@DXW_MainLo
$LN279@DXW_MainLo:

; 1533 : 				}
; 1534 : 				else if (g_bAtt == TRUE && g_bAR == TRUE && Timer[4] >= 7 && Timer[4] < 14)

	cmp	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt
	jne	SHORT $LN281@DXW_MainLo
	cmp	DWORD PTR ?g_bAR@@3HA, 1		; g_bAR
	jne	SHORT $LN281@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 7
	jl	SHORT $LN281@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 14	; 0000000eH
	jge	SHORT $LN281@DXW_MainLo

; 1535 : 				{
; 1536 : 					::__PutAnimeSprite(g_pDDSOneR, nX, nY, 9, 2, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	2
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A ; g_pDDSOneR
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	$LN287@DXW_MainLo
$LN281@DXW_MainLo:

; 1537 : 				}
; 1538 : 				else if (g_bAtt == TRUE && g_bAR == TRUE && Timer[4] >= 14 && Timer[4] < 21)

	cmp	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt
	jne	SHORT $LN283@DXW_MainLo
	cmp	DWORD PTR ?g_bAR@@3HA, 1		; g_bAR
	jne	SHORT $LN283@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 14	; 0000000eH
	jl	SHORT $LN283@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 21	; 00000015H
	jge	SHORT $LN283@DXW_MainLo

; 1539 : 				{
; 1540 : 					::__PutAnimeSprite(g_pDDSOneR, nX, nY, 9, 3, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	3
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A ; g_pDDSOneR
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	$LN287@DXW_MainLo
$LN283@DXW_MainLo:

; 1541 : 				}
; 1542 : 				else if (g_bAtt == TRUE && g_bAR == TRUE && Timer[4] >= 21 && Timer[4] < 27)

	cmp	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt
	jne	SHORT $LN285@DXW_MainLo
	cmp	DWORD PTR ?g_bAR@@3HA, 1		; g_bAR
	jne	SHORT $LN285@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 21	; 00000015H
	jl	SHORT $LN285@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 27	; 0000001bH
	jge	SHORT $LN285@DXW_MainLo

; 1543 : 				{
; 1544 : 					::__PutAnimeSprite(g_pDDSOneR, nX, nY, 9, 4, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	4
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A ; g_pDDSOneR
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	SHORT $LN287@DXW_MainLo
$LN285@DXW_MainLo:

; 1545 : 				}
; 1546 : 				else if (g_bAtt == TRUE && g_bAR == TRUE && Timer[4] >= 27 && Timer[4] < 39)

	cmp	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt
	jne	SHORT $LN287@DXW_MainLo
	cmp	DWORD PTR ?g_bAR@@3HA, 1		; g_bAR
	jne	SHORT $LN287@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 27	; 0000001bH
	jl	SHORT $LN287@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 39	; 00000027H
	jge	SHORT $LN287@DXW_MainLo

; 1547 : 				{
; 1548 : 					::__PutAnimeSprite(g_pDDSOneR, nX, nY, 9, 0, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	0
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A ; g_pDDSOneR
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN287@DXW_MainLo:

; 1549 : 				}
; 1550 : 				if (g_bAtt == TRUE && g_bAL == TRUE && Timer[4] < 7)

	cmp	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt
	jne	SHORT $LN288@DXW_MainLo
	cmp	DWORD PTR ?g_bAL@@3HA, 1		; g_bAL
	jne	SHORT $LN288@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 7
	jge	SHORT $LN288@DXW_MainLo

; 1551 : 				{
; 1552 : 					::__PutAnimeSprite(g_pDDSOne, nX, nY, 9, 4, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	4
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A ; g_pDDSOne
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	$LN296@DXW_MainLo
$LN288@DXW_MainLo:

; 1553 : 				}
; 1554 : 				else if (g_bAtt == TRUE && g_bAL == TRUE && Timer[4] >= 7 && Timer[4] < 14)

	cmp	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt
	jne	SHORT $LN290@DXW_MainLo
	cmp	DWORD PTR ?g_bAL@@3HA, 1		; g_bAL
	jne	SHORT $LN290@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 7
	jl	SHORT $LN290@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 14	; 0000000eH
	jge	SHORT $LN290@DXW_MainLo

; 1555 : 				{
; 1556 : 					::__PutAnimeSprite(g_pDDSOne, nX, nY, 9, 5, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	5
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A ; g_pDDSOne
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	$LN296@DXW_MainLo
$LN290@DXW_MainLo:

; 1557 : 				}
; 1558 : 				else if (g_bAtt == TRUE && g_bAL == TRUE && Timer[4] >= 14 && Timer[4] < 21)

	cmp	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt
	jne	SHORT $LN292@DXW_MainLo
	cmp	DWORD PTR ?g_bAL@@3HA, 1		; g_bAL
	jne	SHORT $LN292@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 14	; 0000000eH
	jl	SHORT $LN292@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 21	; 00000015H
	jge	SHORT $LN292@DXW_MainLo

; 1559 : 				{
; 1560 : 					::__PutAnimeSprite(g_pDDSOne, nX, nY, 9, 6, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	6
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A ; g_pDDSOne
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	$LN296@DXW_MainLo
$LN292@DXW_MainLo:

; 1561 : 				}
; 1562 : 				else if (g_bAtt == TRUE && g_bAL == TRUE && Timer[4] >= 21 && Timer[4] < 27)

	cmp	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt
	jne	SHORT $LN294@DXW_MainLo
	cmp	DWORD PTR ?g_bAL@@3HA, 1		; g_bAL
	jne	SHORT $LN294@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 21	; 00000015H
	jl	SHORT $LN294@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 27	; 0000001bH
	jge	SHORT $LN294@DXW_MainLo

; 1563 : 				{
; 1564 : 					::__PutAnimeSprite(g_pDDSOne, nX, nY, 9, 7, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	7
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A ; g_pDDSOne
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	SHORT $LN296@DXW_MainLo
$LN294@DXW_MainLo:

; 1565 : 				}
; 1566 : 				else if (g_bAtt == TRUE && g_bAL == TRUE && Timer[4] >= 27 && Timer[4] < 39)

	cmp	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt
	jne	SHORT $LN296@DXW_MainLo
	cmp	DWORD PTR ?g_bAL@@3HA, 1		; g_bAL
	jne	SHORT $LN296@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 27	; 0000001bH
	jl	SHORT $LN296@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 39	; 00000027H
	jge	SHORT $LN296@DXW_MainLo

; 1567 : 				{
; 1568 : 					::__PutAnimeSprite(g_pDDSOne, nX, nY, 9, 8, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	8
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A ; g_pDDSOne
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN296@DXW_MainLo:

; 1569 : 				}
; 1570 : 				if (g_bAtt == TRUE && Timer[4] < 38)

	cmp	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt
	jne	SHORT $LN297@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 38	; 00000026H
	jge	SHORT $LN297@DXW_MainLo

; 1571 : 				{
; 1572 : 					Timer[4]++;

	mov	eax, 4
	shl	eax, 2
	mov	ecx, DWORD PTR ?Timer@@3PAHA[eax]
	add	ecx, 1
	mov	edx, 4
	shl	edx, 2
	mov	DWORD PTR ?Timer@@3PAHA[edx], ecx

; 1573 : 				}
; 1574 : 				else

	jmp	SHORT $LN298@DXW_MainLo
$LN297@DXW_MainLo:

; 1575 : 				{
; 1576 : 					Timer[4] = 0;

	mov	eax, 4
	shl	eax, 2
	mov	DWORD PTR ?Timer@@3PAHA[eax], 0
$LN298@DXW_MainLo:

; 1577 : 				}
; 1578 : 			}
; 1579 : 			if (g_bRushL == TRUE)

	cmp	DWORD PTR ?g_bRushL@@3HA, 1		; g_bRushL
	jne	SHORT $LN299@DXW_MainLo

; 1580 : 			{
; 1581 : 				::__PutAnimeSprite(g_pDDSOne, nX, nY, 9, 7, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	7
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A ; g_pDDSOne
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H

; 1582 : 				::__PutAnimeSprite(g_pDDSCHARGE, nX - 170, nY - 100, 8, Cframe, 511, 263, 0);

	push	0
	push	263					; 00000107H
	push	511					; 000001ffH
	mov	eax, DWORD PTR ?Cframe@@3HA		; Cframe
	push	eax
	push	8
	mov	ecx, DWORD PTR _nY$[ebp]
	sub	ecx, 100				; 00000064H
	push	ecx
	mov	edx, DWORD PTR _nX$[ebp]
	sub	edx, 170				; 000000aaH
	push	edx
	mov	eax, DWORD PTR ?g_pDDSCHARGE@@3PAUIDirectDrawSurface7@@A ; g_pDDSCHARGE
	push	eax
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	SHORT $LN301@DXW_MainLo
$LN299@DXW_MainLo:

; 1583 : 			}
; 1584 : 			else if (g_bRushR == TRUE)

	cmp	DWORD PTR ?g_bRushR@@3HA, 1		; g_bRushR
	jne	SHORT $LN301@DXW_MainLo

; 1585 : 			{
; 1586 : 				::__PutAnimeSprite(g_pDDSOneR, nX, nY, 9, 1, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	1
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A ; g_pDDSOneR
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H

; 1587 : 				::__PutAnimeSprite(g_pDDSCHARGER, nX - 250, nY - 100, 8, Cframe, 511, 263, 0);

	push	0
	push	263					; 00000107H
	push	511					; 000001ffH
	mov	eax, DWORD PTR ?Cframe@@3HA		; Cframe
	push	eax
	push	8
	mov	ecx, DWORD PTR _nY$[ebp]
	sub	ecx, 100				; 00000064H
	push	ecx
	mov	edx, DWORD PTR _nX$[ebp]
	sub	edx, 250				; 000000faH
	push	edx
	mov	eax, DWORD PTR ?g_pDDSCHARGER@@3PAUIDirectDrawSurface7@@A ; g_pDDSCHARGER
	push	eax
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN301@DXW_MainLo:

; 1588 : 			}
; 1589 : 			if (g_bAtt == TRUE)

	cmp	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt
	jne	$LN311@DXW_MainLo

; 1590 : 			{
; 1591 : 				if (g_bAL == TRUE)

	cmp	DWORD PTR ?g_bAL@@3HA, 1		; g_bAL
	jne	$LN303@DXW_MainLo

; 1592 : 				{
; 1593 : 					if (g_bHit == FALSE)

	cmp	DWORD PTR ?g_bHit@@3HA, 0		; g_bHit
	jne	SHORT $LN305@DXW_MainLo

; 1594 : 					{
; 1595 : 						HIT = { SnX - 130,SnY + 10,SnX + 90,SnY + 180 };

	mov	eax, DWORD PTR _SnX$[ebp]
	sub	eax, 130				; 00000082H
	mov	DWORD PTR $T60[ebp], eax
	mov	ecx, DWORD PTR _SnY$[ebp]
	add	ecx, 10					; 0000000aH
	mov	DWORD PTR $T60[ebp+4], ecx
	mov	edx, DWORD PTR _SnX$[ebp]
	add	edx, 90					; 0000005aH
	mov	DWORD PTR $T60[ebp+8], edx
	mov	eax, DWORD PTR _SnY$[ebp]
	add	eax, 180				; 000000b4H
	mov	DWORD PTR $T60[ebp+12], eax
	mov	ecx, DWORD PTR $T60[ebp]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A, ecx
	mov	edx, DWORD PTR $T60[ebp+4]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A+4, edx
	mov	eax, DWORD PTR $T60[ebp+8]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A+8, eax
	mov	ecx, DWORD PTR $T60[ebp+12]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A+12, ecx

; 1596 : 					}
; 1597 : 					else

	jmp	SHORT $LN306@DXW_MainLo
$LN305@DXW_MainLo:

; 1598 : 					{
; 1599 : 						HIT = { 0, 0, 1, 1 };

	mov	DWORD PTR $T59[ebp], 0
	mov	DWORD PTR $T59[ebp+4], 0
	mov	DWORD PTR $T59[ebp+8], 1
	mov	DWORD PTR $T59[ebp+12], 1
	mov	eax, DWORD PTR $T59[ebp]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A, eax
	mov	ecx, DWORD PTR $T59[ebp+4]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A+4, ecx
	mov	edx, DWORD PTR $T59[ebp+8]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A+8, edx
	mov	eax, DWORD PTR $T59[ebp+12]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A+12, eax
$LN306@DXW_MainLo:

; 1600 : 					}
; 1601 : 					if (Timer[2] < 2)

	mov	eax, 4
	shl	eax, 1
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 2
	jge	SHORT $LN307@DXW_MainLo

; 1602 : 					{
; 1603 : 						Timer[2]++;

	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR ?Timer@@3PAHA[eax]
	add	ecx, 1
	mov	edx, 4
	shl	edx, 1
	mov	DWORD PTR ?Timer@@3PAHA[edx], ecx

; 1604 : 					}
; 1605 : 					else

	jmp	SHORT $LN310@DXW_MainLo
$LN307@DXW_MainLo:

; 1606 : 					{
; 1607 : 						Timer[2] = 0;

	mov	eax, 4
	shl	eax, 1
	mov	DWORD PTR ?Timer@@3PAHA[eax], 0

; 1608 : 						if (Aframe < 12)

	cmp	DWORD PTR ?Aframe@@3HA, 12		; Aframe, 0000000cH
	jge	SHORT $LN309@DXW_MainLo

; 1609 : 						{
; 1610 : 							Aframe++;

	mov	eax, DWORD PTR ?Aframe@@3HA		; Aframe
	add	eax, 1
	mov	DWORD PTR ?Aframe@@3HA, eax		; Aframe
	jmp	SHORT $LN310@DXW_MainLo
$LN309@DXW_MainLo:

; 1611 : 						}
; 1612 : 						else { Aframe == 0; g_bAL = FALSE, g_bAR = FALSE, g_bAtt = FALSE; g_bHit = FALSE;}

	mov	DWORD PTR ?g_bAL@@3HA, 0		; g_bAL
	mov	DWORD PTR ?g_bAR@@3HA, 0		; g_bAR
	mov	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	mov	DWORD PTR ?g_bHit@@3HA, 0		; g_bHit
$LN310@DXW_MainLo:

; 1613 : 					}
; 1614 : 					::__PutAnimeSprite(g_pDDSSkill, SnX - 140, SnY, 13, Aframe, 301, 218, 0);

	push	0
	push	218					; 000000daH
	push	301					; 0000012dH
	mov	eax, DWORD PTR ?Aframe@@3HA		; Aframe
	push	eax
	push	13					; 0000000dH
	mov	ecx, DWORD PTR _SnY$[ebp]
	push	ecx
	mov	edx, DWORD PTR _SnX$[ebp]
	sub	edx, 140				; 0000008cH
	push	edx
	mov	eax, DWORD PTR ?g_pDDSSkill@@3PAUIDirectDrawSurface7@@A ; g_pDDSSkill
	push	eax
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	$LN311@DXW_MainLo
$LN303@DXW_MainLo:

; 1615 : 				}
; 1616 : 				else if (g_bAR == TRUE)

	cmp	DWORD PTR ?g_bAR@@3HA, 1		; g_bAR
	jne	$LN311@DXW_MainLo

; 1617 : 				{
; 1618 : 					if (g_bHit == FALSE)

	cmp	DWORD PTR ?g_bHit@@3HA, 0		; g_bHit
	jne	SHORT $LN312@DXW_MainLo

; 1619 : 					{
; 1620 : 						HIT = { SnX - 10,SnY + 10,SnX + 220,SnY + 180 };

	mov	eax, DWORD PTR _SnX$[ebp]
	sub	eax, 10					; 0000000aH
	mov	DWORD PTR $T58[ebp], eax
	mov	ecx, DWORD PTR _SnY$[ebp]
	add	ecx, 10					; 0000000aH
	mov	DWORD PTR $T58[ebp+4], ecx
	mov	edx, DWORD PTR _SnX$[ebp]
	add	edx, 220				; 000000dcH
	mov	DWORD PTR $T58[ebp+8], edx
	mov	eax, DWORD PTR _SnY$[ebp]
	add	eax, 180				; 000000b4H
	mov	DWORD PTR $T58[ebp+12], eax
	mov	ecx, DWORD PTR $T58[ebp]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A, ecx
	mov	edx, DWORD PTR $T58[ebp+4]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A+4, edx
	mov	eax, DWORD PTR $T58[ebp+8]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A+8, eax
	mov	ecx, DWORD PTR $T58[ebp+12]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A+12, ecx

; 1621 : 					}
; 1622 : 					else

	jmp	SHORT $LN313@DXW_MainLo
$LN312@DXW_MainLo:

; 1623 : 					{
; 1624 : 						HIT = { 0, 0, 1, 1 };

	mov	DWORD PTR $T57[ebp], 0
	mov	DWORD PTR $T57[ebp+4], 0
	mov	DWORD PTR $T57[ebp+8], 1
	mov	DWORD PTR $T57[ebp+12], 1
	mov	eax, DWORD PTR $T57[ebp]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A, eax
	mov	ecx, DWORD PTR $T57[ebp+4]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A+4, ecx
	mov	edx, DWORD PTR $T57[ebp+8]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A+8, edx
	mov	eax, DWORD PTR $T57[ebp+12]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A+12, eax
$LN313@DXW_MainLo:

; 1625 : 					}
; 1626 : 					if (Timer[2] < 2)

	mov	eax, 4
	shl	eax, 1
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 2
	jge	SHORT $LN314@DXW_MainLo

; 1627 : 					{
; 1628 : 						Timer[2]++;

	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR ?Timer@@3PAHA[eax]
	add	ecx, 1
	mov	edx, 4
	shl	edx, 1
	mov	DWORD PTR ?Timer@@3PAHA[edx], ecx

; 1629 : 					}
; 1630 : 					else

	jmp	SHORT $LN317@DXW_MainLo
$LN314@DXW_MainLo:

; 1631 : 					{
; 1632 : 						Timer[2] = 0;

	mov	eax, 4
	shl	eax, 1
	mov	DWORD PTR ?Timer@@3PAHA[eax], 0

; 1633 : 						if (Aframe > 0)

	cmp	DWORD PTR ?Aframe@@3HA, 0		; Aframe
	jle	SHORT $LN316@DXW_MainLo

; 1634 : 						{
; 1635 : 							Aframe--;

	mov	eax, DWORD PTR ?Aframe@@3HA		; Aframe
	sub	eax, 1
	mov	DWORD PTR ?Aframe@@3HA, eax		; Aframe
	jmp	SHORT $LN317@DXW_MainLo
$LN316@DXW_MainLo:

; 1636 : 						}
; 1637 : 						else { Aframe == 0; g_bAL = FALSE, g_bAR = FALSE, g_bAtt = FALSE; g_bHit = FALSE;}

	mov	DWORD PTR ?g_bAL@@3HA, 0		; g_bAL
	mov	DWORD PTR ?g_bAR@@3HA, 0		; g_bAR
	mov	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	mov	DWORD PTR ?g_bHit@@3HA, 0		; g_bHit
$LN317@DXW_MainLo:

; 1638 : 					}
; 1639 : 					::__PutAnimeSprite(g_pDDSSkillR, SnX - 70, SnY, 13, Aframe, 301, 218, 0);

	push	0
	push	218					; 000000daH
	push	301					; 0000012dH
	mov	eax, DWORD PTR ?Aframe@@3HA		; Aframe
	push	eax
	push	13					; 0000000dH
	mov	ecx, DWORD PTR _SnY$[ebp]
	push	ecx
	mov	edx, DWORD PTR _SnX$[ebp]
	sub	edx, 70					; 00000046H
	push	edx
	mov	eax, DWORD PTR ?g_pDDSSkillR@@3PAUIDirectDrawSurface7@@A ; g_pDDSSkillR
	push	eax
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN311@DXW_MainLo:

; 1640 : 				}
; 1641 : 			}
; 1642 : 			if (bossimmu == FALSE && g_bHit == FALSE)

	cmp	DWORD PTR ?bossimmu@@3HA, 0		; bossimmu
	jne	$LN322@DXW_MainLo
	cmp	DWORD PTR ?g_bHit@@3HA, 0		; g_bHit
	jne	$LN322@DXW_MainLo

; 1643 : 			{
; 1644 : 				if (IntersectRect(&rcDest, &BOSS, &HIT))

	mov	esi, esp
	push	OFFSET ?HIT@@3UtagRECT@@A		; HIT
	push	OFFSET ?BOSS@@3UtagRECT@@A		; BOSS
	push	OFFSET ?rcDest@@3UtagRECT@@A		; rcDest
	call	DWORD PTR __imp__IntersectRect@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN322@DXW_MainLo

; 1645 : 				{
; 1646 : 					P1HP -= 25;

	mov	eax, DWORD PTR ?P1HP@@3HA		; P1HP
	sub	eax, 25					; 00000019H
	mov	DWORD PTR ?P1HP@@3HA, eax		; P1HP

; 1647 : 					bossimmu = TRUE;

	mov	DWORD PTR ?bossimmu@@3HA, 1		; bossimmu

; 1648 : 					Timer[5] = 20;

	mov	eax, 4
	imul	ecx, eax, 5
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 20	; 00000014H

; 1649 : 					g_bHit = TRUE;

	mov	DWORD PTR ?g_bHit@@3HA, 1		; g_bHit

; 1650 : 					if (BHMPlay == FALSE)

	cmp	DWORD PTR ?BHMPlay@@3HA, 0		; BHMPlay
	jne	SHORT $LN320@DXW_MainLo

; 1651 : 					{
; 1652 : 						BHMPlay = TRUE;

	mov	DWORD PTR ?BHMPlay@@3HA, 1		; BHMPlay

; 1653 : 						BHplay[0] = TRUE;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?BHplay@@3PAHA[ecx], 1

; 1654 : 						Timer[24] = 2;

	mov	eax, 4
	imul	ecx, eax, 24
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 2
	jmp	$LN322@DXW_MainLo
$LN320@DXW_MainLo:

; 1655 : 					}
; 1656 : 					else if (BHMPlay == TRUE)

	cmp	DWORD PTR ?BHMPlay@@3HA, 1		; BHMPlay
	jne	$LN322@DXW_MainLo

; 1657 : 					{
; 1658 : 						BHplay[0] = TRUE;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?BHplay@@3PAHA[ecx], 1

; 1659 : 						BHplay[1] = FALSE;

	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR ?BHplay@@3PAHA[eax], 0

; 1660 : 						BHplay[2] = FALSE;

	mov	eax, 4
	shl	eax, 1
	mov	DWORD PTR ?BHplay@@3PAHA[eax], 0

; 1661 : 						BHframe[0] = 0;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?BHframe@@3PAHA[ecx], 0

; 1662 : 						BHframe[1] = 0;

	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR ?BHframe@@3PAHA[eax], 0

; 1663 : 						BHframe[2] = 0;

	mov	eax, 4
	shl	eax, 1
	mov	DWORD PTR ?BHframe@@3PAHA[eax], 0

; 1664 : 						Timer[24] = 2;

	mov	eax, 4
	imul	ecx, eax, 24
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 2

; 1665 : 						Timer[26] = 2;

	mov	eax, 4
	imul	ecx, eax, 26
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 2

; 1666 : 						Timer[27] = 2;

	mov	eax, 4
	imul	ecx, eax, 27
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 2
$LN322@DXW_MainLo:

; 1667 : 					}
; 1668 : 				}
; 1669 : 			}
; 1670 : 			if (g_bRight == 1 || g_bLeft == 1 && g_bJump == 0)

	cmp	DWORD PTR ?g_bRight@@3HA, 1		; g_bRight
	je	SHORT $LN325@DXW_MainLo
	cmp	DWORD PTR ?g_bLeft@@3HA, 1		; g_bLeft
	jne	SHORT $LN323@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN323@DXW_MainLo
$LN325@DXW_MainLo:

; 1671 : 			{
; 1672 : 				Timer[0] += 1;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	add	edx, 1
	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx

; 1673 : 			}
; 1674 : 			else

	jmp	SHORT $LN324@DXW_MainLo
$LN323@DXW_MainLo:

; 1675 : 			{
; 1676 : 				Timer[0] = 0;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0
$LN324@DXW_MainLo:

; 1677 : 			}
; 1678 : 			if (p1die == 0)

	cmp	DWORD PTR ?p1die@@3HA, 0		; p1die
	jne	$LN329@DXW_MainLo

; 1679 : 			{
; 1680 : 				if (Timer[7] == 0)

	mov	eax, 4
	imul	ecx, eax, 7
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jne	$LN329@DXW_MainLo

; 1681 : 				{
; 1682 : 					if (g_bBAT == TRUE)

	cmp	DWORD PTR ?g_bBAT@@3HA, 1		; g_bBAT
	jne	$LN328@DXW_MainLo

; 1683 : 					{
; 1684 : 						if (BAframe < 10 && Timer[6] < 3)

	cmp	DWORD PTR ?BAframe@@3HA, 10		; BAframe, 0000000aH
	jge	$LN330@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 6
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 3
	jge	$LN330@DXW_MainLo

; 1685 : 						{
; 1686 : 							BAHIT[0] = { 35,200,115,700 };

	mov	DWORD PTR $T56[ebp], 35			; 00000023H
	mov	DWORD PTR $T56[ebp+4], 200		; 000000c8H
	mov	DWORD PTR $T56[ebp+8], 115		; 00000073H
	mov	DWORD PTR $T56[ebp+12], 700		; 000002bcH
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 0
	add	ecx, OFFSET ?BAHIT@@3PAUtagRECT@@A	; BAHIT
	mov	edx, DWORD PTR $T56[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T56[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T56[ebp+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR $T56[ebp+12]
	mov	DWORD PTR [ecx+12], eax

; 1687 : 							BAHIT[1] = { 255,200,335,700 };

	mov	DWORD PTR $T55[ebp], 255		; 000000ffH
	mov	DWORD PTR $T55[ebp+4], 200		; 000000c8H
	mov	DWORD PTR $T55[ebp+8], 335		; 0000014fH
	mov	DWORD PTR $T55[ebp+12], 700		; 000002bcH
	mov	eax, 16					; 00000010H
	shl	eax, 0
	add	eax, OFFSET ?BAHIT@@3PAUtagRECT@@A	; BAHIT
	mov	ecx, DWORD PTR $T55[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T55[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR $T55[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR $T55[ebp+12]
	mov	DWORD PTR [eax+12], edx

; 1688 : 							BAHIT[2] = { 475,200,555,700 };

	mov	DWORD PTR $T54[ebp], 475		; 000001dbH
	mov	DWORD PTR $T54[ebp+4], 200		; 000000c8H
	mov	DWORD PTR $T54[ebp+8], 555		; 0000022bH
	mov	DWORD PTR $T54[ebp+12], 700		; 000002bcH
	mov	eax, 16					; 00000010H
	shl	eax, 1
	add	eax, OFFSET ?BAHIT@@3PAUtagRECT@@A	; BAHIT
	mov	ecx, DWORD PTR $T54[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T54[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR $T54[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR $T54[ebp+12]
	mov	DWORD PTR [eax+12], edx

; 1689 : 							BAHIT[3] = { 695,200,775,700 };

	mov	DWORD PTR $T53[ebp], 695		; 000002b7H
	mov	DWORD PTR $T53[ebp+4], 200		; 000000c8H
	mov	DWORD PTR $T53[ebp+8], 775		; 00000307H
	mov	DWORD PTR $T53[ebp+12], 700		; 000002bcH
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 3
	add	ecx, OFFSET ?BAHIT@@3PAUtagRECT@@A	; BAHIT
	mov	edx, DWORD PTR $T53[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T53[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T53[ebp+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR $T53[ebp+12]
	mov	DWORD PTR [ecx+12], eax

; 1690 : 							BAHIT[4] = { 915,200,995,700 };

	mov	DWORD PTR $T52[ebp], 915		; 00000393H
	mov	DWORD PTR $T52[ebp+4], 200		; 000000c8H
	mov	DWORD PTR $T52[ebp+8], 995		; 000003e3H
	mov	DWORD PTR $T52[ebp+12], 700		; 000002bcH
	mov	eax, 16					; 00000010H
	shl	eax, 2
	add	eax, OFFSET ?BAHIT@@3PAUtagRECT@@A	; BAHIT
	mov	ecx, DWORD PTR $T52[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T52[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR $T52[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR $T52[ebp+12]
	mov	DWORD PTR [eax+12], edx

; 1691 : 							Timer[6]++;

	mov	eax, 4
	imul	ecx, eax, 6
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	add	edx, 1
	mov	eax, 4
	imul	ecx, eax, 6
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
	jmp	SHORT $LN332@DXW_MainLo
$LN330@DXW_MainLo:

; 1692 : 						}
; 1693 : 						else if (BAframe < 10 && Timer[6] >= 3)

	cmp	DWORD PTR ?BAframe@@3HA, 10		; BAframe, 0000000aH
	jge	SHORT $LN332@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 6
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 3
	jl	SHORT $LN332@DXW_MainLo

; 1694 : 						{
; 1695 : 							BAframe++;

	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	add	eax, 1
	mov	DWORD PTR ?BAframe@@3HA, eax		; BAframe

; 1696 : 							Timer[6] = 0;

	mov	eax, 4
	imul	ecx, eax, 6
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0
$LN332@DXW_MainLo:

; 1697 : 						}
; 1698 : 						if (BAframe >= 13)

	cmp	DWORD PTR ?BAframe@@3HA, 13		; BAframe, 0000000dH
	jl	$LN5@DXW_MainLo

; 1699 : 						{
; 1700 : 							int i = 0;

	mov	DWORD PTR _i$80[ebp], 0

; 1701 : 							for (i = 0; i < 5; i++)

	mov	DWORD PTR _i$80[ebp], 0
	jmp	SHORT $LN6@DXW_MainLo
$LN4@DXW_MainLo:
	mov	eax, DWORD PTR _i$80[ebp]
	add	eax, 1
	mov	DWORD PTR _i$80[ebp], eax
$LN6@DXW_MainLo:
	cmp	DWORD PTR _i$80[ebp], 5
	jge	$LN5@DXW_MainLo

; 1702 : 							{
; 1703 : 								if (RandNum[i] == FALSE)

	mov	eax, DWORD PTR _i$80[ebp]
	cmp	DWORD PTR ?RandNum@@3PAHA[eax*4], 0
	jne	$LN338@DXW_MainLo

; 1704 : 								{
; 1705 : 									if (IntersectRect(&rcDest, &BAHIT[i], &PHIT))

	mov	esi, esp
	push	OFFSET ?PHIT@@3UtagRECT@@A		; PHIT
	mov	eax, DWORD PTR _i$80[ebp]
	shl	eax, 4
	add	eax, OFFSET ?BAHIT@@3PAUtagRECT@@A	; BAHIT
	push	eax
	push	OFFSET ?rcDest@@3UtagRECT@@A		; rcDest
	call	DWORD PTR __imp__IntersectRect@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN338@DXW_MainLo

; 1706 : 									{
; 1707 : 										PlayerHP -= 500;

	mov	eax, DWORD PTR ?PlayerHP@@3HA		; PlayerHP
	sub	eax, 500				; 000001f4H
	mov	DWORD PTR ?PlayerHP@@3HA, eax		; PlayerHP

; 1708 : 										BAHIT[i] = { 0,0,1,1 };

	mov	DWORD PTR $T51[ebp], 0
	mov	DWORD PTR $T51[ebp+4], 0
	mov	DWORD PTR $T51[ebp+8], 1
	mov	DWORD PTR $T51[ebp+12], 1
	mov	eax, DWORD PTR _i$80[ebp]
	shl	eax, 4
	add	eax, OFFSET ?BAHIT@@3PAUtagRECT@@A	; BAHIT
	mov	ecx, DWORD PTR $T51[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T51[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR $T51[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR $T51[ebp+12]
	mov	DWORD PTR [eax+12], edx

; 1709 : 										if (PHplay == FALSE)

	cmp	DWORD PTR ?PHplay@@3HA, 0		; PHplay
	jne	SHORT $LN336@DXW_MainLo

; 1710 : 										{
; 1711 : 											PHplay = TRUE;

	mov	DWORD PTR ?PHplay@@3HA, 1		; PHplay

; 1712 : 											Timer[25] = 3;

	mov	eax, 4
	imul	ecx, eax, 25
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 3

; 1713 : 											PHframe = 0;

	mov	DWORD PTR ?PHframe@@3HA, 0		; PHframe
	jmp	SHORT $LN338@DXW_MainLo
$LN336@DXW_MainLo:

; 1714 : 										}
; 1715 : 										else if (PHplay == TRUE)

	cmp	DWORD PTR ?PHplay@@3HA, 1		; PHplay
	jne	SHORT $LN338@DXW_MainLo

; 1716 : 										{
; 1717 : 											PHplay = TRUE;

	mov	DWORD PTR ?PHplay@@3HA, 1		; PHplay

; 1718 : 											Timer[25] = 3;

	mov	eax, 4
	imul	ecx, eax, 25
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 3

; 1719 : 											PHframe = 0;

	mov	DWORD PTR ?PHframe@@3HA, 0		; PHframe
$LN338@DXW_MainLo:

; 1720 : 										}
; 1721 : 									}
; 1722 : 								}
; 1723 : 							}

	jmp	$LN4@DXW_MainLo
$LN5@DXW_MainLo:

; 1724 : 						}
; 1725 : 						if (BAframe >= 10 && Timer[6] < 2 && BAframe < 19)

	cmp	DWORD PTR ?BAframe@@3HA, 10		; BAframe, 0000000aH
	jl	SHORT $LN339@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 6
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 2
	jge	SHORT $LN339@DXW_MainLo
	cmp	DWORD PTR ?BAframe@@3HA, 19		; BAframe, 00000013H
	jge	SHORT $LN339@DXW_MainLo

; 1726 : 						{
; 1727 : 							Timer[6]++;

	mov	eax, 4
	imul	ecx, eax, 6
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	add	edx, 1
	mov	eax, 4
	imul	ecx, eax, 6
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
	jmp	SHORT $LN341@DXW_MainLo
$LN339@DXW_MainLo:

; 1728 : 						}
; 1729 : 						else if (BAframe >= 10 && Timer[6] >= 2 && BAframe < 19)

	cmp	DWORD PTR ?BAframe@@3HA, 10		; BAframe, 0000000aH
	jl	SHORT $LN341@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 6
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 2
	jl	SHORT $LN341@DXW_MainLo
	cmp	DWORD PTR ?BAframe@@3HA, 19		; BAframe, 00000013H
	jge	SHORT $LN341@DXW_MainLo

; 1730 : 						{
; 1731 : 							BAframe++;

	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	add	eax, 1
	mov	DWORD PTR ?BAframe@@3HA, eax		; BAframe

; 1732 : 							Timer[6] = 0;

	mov	eax, 4
	imul	ecx, eax, 6
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0
$LN341@DXW_MainLo:

; 1733 : 						}
; 1734 : 						switch (Randpat)

	mov	eax, DWORD PTR ?Randpat@@3HA		; Randpat
	mov	DWORD PTR tv1737[ebp], eax
	cmp	DWORD PTR tv1737[ebp], 0
	je	SHORT $LN342@DXW_MainLo
	cmp	DWORD PTR tv1737[ebp], 1
	je	$LN343@DXW_MainLo
	cmp	DWORD PTR tv1737[ebp], 2
	je	$LN344@DXW_MainLo
	jmp	$LN7@DXW_MainLo
$LN342@DXW_MainLo:

; 1735 : 						{
; 1736 : 						case 0:
; 1737 : 							::__PutAnimeSprite(g_BossAtt, -170, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	-170					; ffffff56H
	mov	ecx, DWORD PTR ?g_BossAtt@@3PAUIDirectDrawSurface7@@A ; g_BossAtt
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H

; 1738 : 							::__PutAnimeSprite(g_BossAtt, 270, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	270					; 0000010eH
	mov	ecx, DWORD PTR ?g_BossAtt@@3PAUIDirectDrawSurface7@@A ; g_BossAtt
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H

; 1739 : 							::__PutAnimeSprite(g_BossAtt, 710, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	710					; 000002c6H
	mov	ecx, DWORD PTR ?g_BossAtt@@3PAUIDirectDrawSurface7@@A ; g_BossAtt
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H

; 1740 : 							break;

	jmp	$LN7@DXW_MainLo
$LN343@DXW_MainLo:

; 1741 : 						case 1:
; 1742 : 							::__PutAnimeSprite(g_BossAtt, 50, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	50					; 00000032H
	mov	ecx, DWORD PTR ?g_BossAtt@@3PAUIDirectDrawSurface7@@A ; g_BossAtt
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H

; 1743 : 							::__PutAnimeSprite(g_BossAtt, 490, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	490					; 000001eaH
	mov	ecx, DWORD PTR ?g_BossAtt@@3PAUIDirectDrawSurface7@@A ; g_BossAtt
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H

; 1744 : 							break;

	jmp	$LN7@DXW_MainLo
$LN344@DXW_MainLo:

; 1745 : 						case 2:
; 1746 : 							if (RandNum[0] == TRUE)

	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?RandNum@@3PAHA[ecx], 1
	jne	SHORT $LN345@DXW_MainLo

; 1747 : 							{
; 1748 : 								::__PutAnimeSprite(g_BossAtt2, -170, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	-170					; ffffff56H
	mov	ecx, DWORD PTR ?g_BossAtt2@@3PAUIDirectDrawSurface7@@A ; g_BossAtt2
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H

; 1749 : 							}
; 1750 : 							else

	jmp	SHORT $LN346@DXW_MainLo
$LN345@DXW_MainLo:

; 1751 : 							{
; 1752 : 								::__PutAnimeSprite(g_BossAtt, -170, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	-170					; ffffff56H
	mov	ecx, DWORD PTR ?g_BossAtt@@3PAUIDirectDrawSurface7@@A ; g_BossAtt
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN346@DXW_MainLo:

; 1753 : 							}
; 1754 : 							if (RandNum[1] == TRUE)

	mov	eax, 4
	shl	eax, 0
	cmp	DWORD PTR ?RandNum@@3PAHA[eax], 1
	jne	SHORT $LN347@DXW_MainLo

; 1755 : 							{
; 1756 : 								::__PutAnimeSprite(g_BossAtt2, 50, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	50					; 00000032H
	mov	ecx, DWORD PTR ?g_BossAtt2@@3PAUIDirectDrawSurface7@@A ; g_BossAtt2
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H

; 1757 : 							}
; 1758 : 							else

	jmp	SHORT $LN348@DXW_MainLo
$LN347@DXW_MainLo:

; 1759 : 							{
; 1760 : 								::__PutAnimeSprite(g_BossAtt, 50, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	50					; 00000032H
	mov	ecx, DWORD PTR ?g_BossAtt@@3PAUIDirectDrawSurface7@@A ; g_BossAtt
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN348@DXW_MainLo:

; 1761 : 							}
; 1762 : 							if (RandNum[2] == TRUE)

	mov	eax, 4
	shl	eax, 1
	cmp	DWORD PTR ?RandNum@@3PAHA[eax], 1
	jne	SHORT $LN349@DXW_MainLo

; 1763 : 							{
; 1764 : 								::__PutAnimeSprite(g_BossAtt2, 270, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	270					; 0000010eH
	mov	ecx, DWORD PTR ?g_BossAtt2@@3PAUIDirectDrawSurface7@@A ; g_BossAtt2
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H

; 1765 : 							}
; 1766 : 							else

	jmp	SHORT $LN350@DXW_MainLo
$LN349@DXW_MainLo:

; 1767 : 							{
; 1768 : 								::__PutAnimeSprite(g_BossAtt, 270, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	270					; 0000010eH
	mov	ecx, DWORD PTR ?g_BossAtt@@3PAUIDirectDrawSurface7@@A ; g_BossAtt
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN350@DXW_MainLo:

; 1769 : 							}
; 1770 : 							if (RandNum[3] == TRUE)

	mov	eax, 4
	imul	ecx, eax, 3
	cmp	DWORD PTR ?RandNum@@3PAHA[ecx], 1
	jne	SHORT $LN351@DXW_MainLo

; 1771 : 							{
; 1772 : 								::__PutAnimeSprite(g_BossAtt2, 490, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	490					; 000001eaH
	mov	ecx, DWORD PTR ?g_BossAtt2@@3PAUIDirectDrawSurface7@@A ; g_BossAtt2
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H

; 1773 : 							}
; 1774 : 							else

	jmp	SHORT $LN352@DXW_MainLo
$LN351@DXW_MainLo:

; 1775 : 							{
; 1776 : 								::__PutAnimeSprite(g_BossAtt, 490, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	490					; 000001eaH
	mov	ecx, DWORD PTR ?g_BossAtt@@3PAUIDirectDrawSurface7@@A ; g_BossAtt
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN352@DXW_MainLo:

; 1777 : 							}
; 1778 : 							if (RandNum[4] == TRUE)

	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?RandNum@@3PAHA[eax], 1
	jne	SHORT $LN353@DXW_MainLo

; 1779 : 							{
; 1780 : 								::__PutAnimeSprite(g_BossAtt2, 710, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	710					; 000002c6H
	mov	ecx, DWORD PTR ?g_BossAtt2@@3PAUIDirectDrawSurface7@@A ; g_BossAtt2
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H

; 1781 : 							}
; 1782 : 							else

	jmp	SHORT $LN354@DXW_MainLo
$LN353@DXW_MainLo:

; 1783 : 							{
; 1784 : 								::__PutAnimeSprite(g_BossAtt, 710, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	710					; 000002c6H
	mov	ecx, DWORD PTR ?g_BossAtt@@3PAUIDirectDrawSurface7@@A ; g_BossAtt
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN354@DXW_MainLo:
$LN7@DXW_MainLo:

; 1785 : 							}
; 1786 : 							break;
; 1787 : 						}
; 1788 : 						if (BAframe >= 19)

	cmp	DWORD PTR ?BAframe@@3HA, 19		; BAframe, 00000013H
	jl	$LN357@DXW_MainLo

; 1789 : 						{
; 1790 : 							if (Timer[6] > 2)

	mov	eax, 4
	imul	ecx, eax, 6
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 2
	jle	SHORT $LN356@DXW_MainLo

; 1791 : 							{
; 1792 : 								BAframe = 0;

	mov	DWORD PTR ?BAframe@@3HA, 0		; BAframe

; 1793 : 								Randpat2 = Randpat;

	mov	eax, DWORD PTR ?Randpat@@3HA		; Randpat
	mov	DWORD PTR ?Randpat2@@3HA, eax		; Randpat2

; 1794 : 								g_bBAT = FALSE;

	mov	DWORD PTR ?g_bBAT@@3HA, 0		; g_bBAT

; 1795 : 								Timer[7] = 60;

	mov	eax, 4
	imul	ecx, eax, 7
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 60	; 0000003cH

; 1796 : 								if (P1HP < 250)

	cmp	DWORD PTR ?P1HP@@3HA, 250		; P1HP, 000000faH
	jge	SHORT $LN358@DXW_MainLo

; 1797 : 								{
; 1798 : 									Timer[7] -= 50;

	mov	eax, 4
	imul	ecx, eax, 7
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 50					; 00000032H
	mov	eax, 4
	imul	ecx, eax, 7
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
$LN358@DXW_MainLo:

; 1799 : 								}
; 1800 : 								Maximum = 0;

	mov	DWORD PTR ?Maximum@@3HA, 0		; Maximum

; 1801 : 								RandNum[0, 1, 2, 3, 4] = { 0 };

	mov	eax, 4
	shl	eax, 2
	mov	DWORD PTR ?RandNum@@3PAHA[eax], 0

; 1802 : 							}
; 1803 : 							else

	jmp	SHORT $LN357@DXW_MainLo
$LN356@DXW_MainLo:

; 1804 : 							{
; 1805 : 								Timer[6]++;

	mov	eax, 4
	imul	ecx, eax, 6
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	add	edx, 1
	mov	eax, 4
	imul	ecx, eax, 6
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
$LN357@DXW_MainLo:

; 1806 : 							}
; 1807 : 						}
; 1808 : 					}
; 1809 : 					else

	jmp	$LN329@DXW_MainLo
$LN328@DXW_MainLo:

; 1810 : 					{
; 1811 : 						Randpat = rand() % 3;

	call	_rand
	cdq
	mov	ecx, 3
	idiv	ecx
	mov	DWORD PTR ?Randpat@@3HA, edx		; Randpat

; 1812 : 						if (Randpat == Randpat2)

	mov	eax, DWORD PTR ?Randpat@@3HA		; Randpat
	cmp	eax, DWORD PTR ?Randpat2@@3HA		; Randpat2
	jne	SHORT $LN9@DXW_MainLo

; 1813 : 						{
; 1814 : 							switch (Randpat)

	mov	eax, DWORD PTR ?Randpat@@3HA		; Randpat
	mov	DWORD PTR tv1900[ebp], eax
	cmp	DWORD PTR tv1900[ebp], 0
	je	SHORT $LN360@DXW_MainLo
	cmp	DWORD PTR tv1900[ebp], 1
	je	SHORT $LN361@DXW_MainLo
	cmp	DWORD PTR tv1900[ebp], 2
	je	SHORT $LN362@DXW_MainLo
	jmp	SHORT $LN9@DXW_MainLo
$LN360@DXW_MainLo:

; 1815 : 							{
; 1816 : 							case 0:
; 1817 : 								Randpat = 1;

	mov	DWORD PTR ?Randpat@@3HA, 1		; Randpat

; 1818 : 								break;

	jmp	SHORT $LN9@DXW_MainLo
$LN361@DXW_MainLo:

; 1819 : 							case 1:
; 1820 : 								Randpat = 2;

	mov	DWORD PTR ?Randpat@@3HA, 2		; Randpat

; 1821 : 								break;

	jmp	SHORT $LN9@DXW_MainLo
$LN362@DXW_MainLo:

; 1822 : 							case 2:
; 1823 : 								Randpat = 0;

	mov	DWORD PTR ?Randpat@@3HA, 0		; Randpat
$LN9@DXW_MainLo:

; 1824 : 								break;
; 1825 : 							}
; 1826 : 						}
; 1827 : 						if (Randpat == 2)

	cmp	DWORD PTR ?Randpat@@3HA, 2		; Randpat
	jne	$LN379@DXW_MainLo

; 1828 : 						{
; 1829 : 							RandNum[0] = rand() % 2;

	call	_rand
	and	eax, -2147483647			; 80000001H
	jns	SHORT $LN1010@DXW_MainLo
	dec	eax
	or	eax, -2					; fffffffeH
	inc	eax
$LN1010@DXW_MainLo:
	mov	ecx, 4
	imul	edx, ecx, 0
	mov	DWORD PTR ?RandNum@@3PAHA[edx], eax

; 1830 : 							if (RandNum[0] == 1 && Maximum < 2)

	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?RandNum@@3PAHA[ecx], 1
	jne	SHORT $LN364@DXW_MainLo
	cmp	DWORD PTR ?Maximum@@3HA, 2		; Maximum
	jge	SHORT $LN364@DXW_MainLo

; 1831 : 							{
; 1832 : 								Maximum++;

	mov	eax, DWORD PTR ?Maximum@@3HA		; Maximum
	add	eax, 1
	mov	DWORD PTR ?Maximum@@3HA, eax		; Maximum
	jmp	SHORT $LN366@DXW_MainLo
$LN364@DXW_MainLo:

; 1833 : 							}
; 1834 : 							else if (RandNum[0] == 1 && Maximum >= 2)

	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?RandNum@@3PAHA[ecx], 1
	jne	SHORT $LN366@DXW_MainLo
	cmp	DWORD PTR ?Maximum@@3HA, 2		; Maximum
	jl	SHORT $LN366@DXW_MainLo

; 1835 : 							{
; 1836 : 								RandNum[0] = 0;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?RandNum@@3PAHA[ecx], 0
$LN366@DXW_MainLo:

; 1837 : 							}
; 1838 : 							RandNum[1] = rand() % 2;

	call	_rand
	and	eax, -2147483647			; 80000001H
	jns	SHORT $LN1011@DXW_MainLo
	dec	eax
	or	eax, -2					; fffffffeH
	inc	eax
$LN1011@DXW_MainLo:
	mov	ecx, 4
	shl	ecx, 0
	mov	DWORD PTR ?RandNum@@3PAHA[ecx], eax

; 1839 : 							if (RandNum[1] == 1 && Maximum < 2)

	mov	eax, 4
	shl	eax, 0
	cmp	DWORD PTR ?RandNum@@3PAHA[eax], 1
	jne	SHORT $LN367@DXW_MainLo
	cmp	DWORD PTR ?Maximum@@3HA, 2		; Maximum
	jge	SHORT $LN367@DXW_MainLo

; 1840 : 							{
; 1841 : 								Maximum++;

	mov	eax, DWORD PTR ?Maximum@@3HA		; Maximum
	add	eax, 1
	mov	DWORD PTR ?Maximum@@3HA, eax		; Maximum
	jmp	SHORT $LN369@DXW_MainLo
$LN367@DXW_MainLo:

; 1842 : 							}
; 1843 : 							else if (RandNum[1] == 1 && Maximum >= 2)

	mov	eax, 4
	shl	eax, 0
	cmp	DWORD PTR ?RandNum@@3PAHA[eax], 1
	jne	SHORT $LN369@DXW_MainLo
	cmp	DWORD PTR ?Maximum@@3HA, 2		; Maximum
	jl	SHORT $LN369@DXW_MainLo

; 1844 : 							{
; 1845 : 								RandNum[1] = 0;

	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR ?RandNum@@3PAHA[eax], 0
$LN369@DXW_MainLo:

; 1846 : 							}
; 1847 : 							RandNum[2] = rand() % 2;

	call	_rand
	and	eax, -2147483647			; 80000001H
	jns	SHORT $LN1012@DXW_MainLo
	dec	eax
	or	eax, -2					; fffffffeH
	inc	eax
$LN1012@DXW_MainLo:
	mov	ecx, 4
	shl	ecx, 1
	mov	DWORD PTR ?RandNum@@3PAHA[ecx], eax

; 1848 : 							if (RandNum[2] == 1 && Maximum < 2)

	mov	eax, 4
	shl	eax, 1
	cmp	DWORD PTR ?RandNum@@3PAHA[eax], 1
	jne	SHORT $LN370@DXW_MainLo
	cmp	DWORD PTR ?Maximum@@3HA, 2		; Maximum
	jge	SHORT $LN370@DXW_MainLo

; 1849 : 							{
; 1850 : 								Maximum++;

	mov	eax, DWORD PTR ?Maximum@@3HA		; Maximum
	add	eax, 1
	mov	DWORD PTR ?Maximum@@3HA, eax		; Maximum
	jmp	SHORT $LN372@DXW_MainLo
$LN370@DXW_MainLo:

; 1851 : 							}
; 1852 : 							else if (RandNum[2] == 1 && Maximum >= 2)

	mov	eax, 4
	shl	eax, 1
	cmp	DWORD PTR ?RandNum@@3PAHA[eax], 1
	jne	SHORT $LN372@DXW_MainLo
	cmp	DWORD PTR ?Maximum@@3HA, 2		; Maximum
	jl	SHORT $LN372@DXW_MainLo

; 1853 : 							{
; 1854 : 								RandNum[2] = 0;

	mov	eax, 4
	shl	eax, 1
	mov	DWORD PTR ?RandNum@@3PAHA[eax], 0
$LN372@DXW_MainLo:

; 1855 : 							}
; 1856 : 							RandNum[3] = rand() % 2;

	call	_rand
	and	eax, -2147483647			; 80000001H
	jns	SHORT $LN1013@DXW_MainLo
	dec	eax
	or	eax, -2					; fffffffeH
	inc	eax
$LN1013@DXW_MainLo:
	mov	ecx, 4
	imul	edx, ecx, 3
	mov	DWORD PTR ?RandNum@@3PAHA[edx], eax

; 1857 : 							if (RandNum[3] == 1 && Maximum < 2)

	mov	eax, 4
	imul	ecx, eax, 3
	cmp	DWORD PTR ?RandNum@@3PAHA[ecx], 1
	jne	SHORT $LN373@DXW_MainLo
	cmp	DWORD PTR ?Maximum@@3HA, 2		; Maximum
	jge	SHORT $LN373@DXW_MainLo

; 1858 : 							{
; 1859 : 								Maximum++;

	mov	eax, DWORD PTR ?Maximum@@3HA		; Maximum
	add	eax, 1
	mov	DWORD PTR ?Maximum@@3HA, eax		; Maximum
	jmp	SHORT $LN375@DXW_MainLo
$LN373@DXW_MainLo:

; 1860 : 							}
; 1861 : 							else if (RandNum[3] == 1 && Maximum >= 2)

	mov	eax, 4
	imul	ecx, eax, 3
	cmp	DWORD PTR ?RandNum@@3PAHA[ecx], 1
	jne	SHORT $LN375@DXW_MainLo
	cmp	DWORD PTR ?Maximum@@3HA, 2		; Maximum
	jl	SHORT $LN375@DXW_MainLo

; 1862 : 							{
; 1863 : 								RandNum[3] = 0;

	mov	eax, 4
	imul	ecx, eax, 3
	mov	DWORD PTR ?RandNum@@3PAHA[ecx], 0
$LN375@DXW_MainLo:

; 1864 : 							}
; 1865 : 							RandNum[4] = rand() % 2;

	call	_rand
	and	eax, -2147483647			; 80000001H
	jns	SHORT $LN1014@DXW_MainLo
	dec	eax
	or	eax, -2					; fffffffeH
	inc	eax
$LN1014@DXW_MainLo:
	mov	ecx, 4
	shl	ecx, 2
	mov	DWORD PTR ?RandNum@@3PAHA[ecx], eax

; 1866 : 							if (RandNum[4] == 1 && Maximum < 2)

	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?RandNum@@3PAHA[eax], 1
	jne	SHORT $LN376@DXW_MainLo
	cmp	DWORD PTR ?Maximum@@3HA, 2		; Maximum
	jge	SHORT $LN376@DXW_MainLo

; 1867 : 							{
; 1868 : 								Maximum++;

	mov	eax, DWORD PTR ?Maximum@@3HA		; Maximum
	add	eax, 1
	mov	DWORD PTR ?Maximum@@3HA, eax		; Maximum
	jmp	SHORT $LN378@DXW_MainLo
$LN376@DXW_MainLo:

; 1869 : 							}
; 1870 : 							else if (RandNum[4] == 1 && Maximum >= 2)

	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?RandNum@@3PAHA[eax], 1
	jne	SHORT $LN378@DXW_MainLo
	cmp	DWORD PTR ?Maximum@@3HA, 2		; Maximum
	jl	SHORT $LN378@DXW_MainLo

; 1871 : 							{
; 1872 : 								RandNum[4] = 0;

	mov	eax, 4
	shl	eax, 2
	mov	DWORD PTR ?RandNum@@3PAHA[eax], 0
$LN378@DXW_MainLo:

; 1873 : 							}
; 1874 : 							if (Maximum == 0)

	cmp	DWORD PTR ?Maximum@@3HA, 0		; Maximum
	jne	SHORT $LN379@DXW_MainLo

; 1875 : 							{
; 1876 : 								int n = 0;

	mov	DWORD PTR _n$79[ebp], 0

; 1877 : 								n = rand() % 4;

	call	_rand
	and	eax, -2147483645			; 80000003H
	jns	SHORT $LN1015@DXW_MainLo
	dec	eax
	or	eax, -4					; fffffffcH
	inc	eax
$LN1015@DXW_MainLo:
	mov	DWORD PTR _n$79[ebp], eax

; 1878 : 								RandNum[n] = 1;

	mov	eax, DWORD PTR _n$79[ebp]
	mov	DWORD PTR ?RandNum@@3PAHA[eax*4], 1
$LN379@DXW_MainLo:

; 1879 : 							}
; 1880 : 						}
; 1881 : 						switch (Randpat)

	mov	eax, DWORD PTR ?Randpat@@3HA		; Randpat
	mov	DWORD PTR tv1985[ebp], eax
	cmp	DWORD PTR tv1985[ebp], 0
	je	SHORT $LN380@DXW_MainLo
	cmp	DWORD PTR tv1985[ebp], 1
	je	SHORT $LN381@DXW_MainLo
	jmp	$LN11@DXW_MainLo
$LN380@DXW_MainLo:

; 1882 : 						{
; 1883 : 						case 0:
; 1884 : 							RandNum[0] = 0;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?RandNum@@3PAHA[ecx], 0

; 1885 : 							RandNum[1] = 1;

	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR ?RandNum@@3PAHA[eax], 1

; 1886 : 							RandNum[2] = 0;

	mov	eax, 4
	shl	eax, 1
	mov	DWORD PTR ?RandNum@@3PAHA[eax], 0

; 1887 : 							RandNum[3] = 1;

	mov	eax, 4
	imul	ecx, eax, 3
	mov	DWORD PTR ?RandNum@@3PAHA[ecx], 1

; 1888 : 							RandNum[4] = 0;

	mov	eax, 4
	shl	eax, 2
	mov	DWORD PTR ?RandNum@@3PAHA[eax], 0

; 1889 : 							break;

	jmp	SHORT $LN11@DXW_MainLo
$LN381@DXW_MainLo:

; 1890 : 						case 1:
; 1891 : 							RandNum[0] = 1;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?RandNum@@3PAHA[ecx], 1

; 1892 : 							RandNum[1] = 0;

	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR ?RandNum@@3PAHA[eax], 0

; 1893 : 							RandNum[2] = 1;

	mov	eax, 4
	shl	eax, 1
	mov	DWORD PTR ?RandNum@@3PAHA[eax], 1

; 1894 : 							RandNum[3] = 0;

	mov	eax, 4
	imul	ecx, eax, 3
	mov	DWORD PTR ?RandNum@@3PAHA[ecx], 0

; 1895 : 							RandNum[4] = 1;

	mov	eax, 4
	shl	eax, 2
	mov	DWORD PTR ?RandNum@@3PAHA[eax], 1
$LN11@DXW_MainLo:

; 1896 : 							break;
; 1897 : 						}
; 1898 : 						g_bBAT = TRUE;

	mov	DWORD PTR ?g_bBAT@@3HA, 1		; g_bBAT
$LN329@DXW_MainLo:

; 1899 : 					}
; 1900 : 				}
; 1901 : 			}
; 1902 : 			if (PHplay == TRUE)

	cmp	DWORD PTR ?PHplay@@3HA, 1		; PHplay
	jne	$LN388@DXW_MainLo

; 1903 : 			{
; 1904 : 				if (Timer[25] == 0)

	mov	eax, 4
	imul	ecx, eax, 25
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jne	SHORT $LN383@DXW_MainLo

; 1905 : 				{
; 1906 : 					PHframe++;

	mov	eax, DWORD PTR ?PHframe@@3HA		; PHframe
	add	eax, 1
	mov	DWORD PTR ?PHframe@@3HA, eax		; PHframe

; 1907 : 					Timer[25] = 3;

	mov	eax, 4
	imul	ecx, eax, 25
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 3

; 1908 : 					if (PHframe > 5)

	cmp	DWORD PTR ?PHframe@@3HA, 5		; PHframe
	jle	SHORT $LN385@DXW_MainLo

; 1909 : 					{
; 1910 : 						PHplay = FALSE;

	mov	DWORD PTR ?PHplay@@3HA, 0		; PHplay

; 1911 : 						PHframe = 0;

	mov	DWORD PTR ?PHframe@@3HA, 0		; PHframe

; 1912 : 						Timer[25] = 0;

	mov	eax, 4
	imul	ecx, eax, 25
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0
$LN385@DXW_MainLo:

; 1913 : 					}
; 1914 : 				}

	jmp	SHORT $LN384@DXW_MainLo
$LN383@DXW_MainLo:

; 1915 : 				else { Timer[25] --; }

	mov	eax, 4
	imul	ecx, eax, 25
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 25
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
$LN384@DXW_MainLo:

; 1916 : 				if (PHplay == TRUE)

	cmp	DWORD PTR ?PHplay@@3HA, 1		; PHplay
	jne	SHORT $LN388@DXW_MainLo

; 1917 : 				{
; 1918 : 					if (g_bLookL)

	cmp	DWORD PTR ?g_bLookL@@3HA, 0		; g_bLookL
	je	SHORT $LN387@DXW_MainLo

; 1919 : 					{
; 1920 : 						::__PutAnimeSprite(g_pDDSDPlayerHit, nX - 50, nY - 70, 6, PHframe, 180, 226, 0);

	push	0
	push	226					; 000000e2H
	push	180					; 000000b4H
	mov	eax, DWORD PTR ?PHframe@@3HA		; PHframe
	push	eax
	push	6
	mov	ecx, DWORD PTR _nY$[ebp]
	sub	ecx, 70					; 00000046H
	push	ecx
	mov	edx, DWORD PTR _nX$[ebp]
	sub	edx, 50					; 00000032H
	push	edx
	mov	eax, DWORD PTR ?g_pDDSDPlayerHit@@3PAUIDirectDrawSurface7@@A ; g_pDDSDPlayerHit
	push	eax
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN387@DXW_MainLo:

; 1921 : 					}
; 1922 : 					if (g_bLookR)

	cmp	DWORD PTR ?g_bLookR@@3HA, 0		; g_bLookR
	je	SHORT $LN388@DXW_MainLo

; 1923 : 					{
; 1924 : 						::__PutAnimeSprite(g_pDDSDPlayerHit, nX - 40, nY - 70, 6, PHframe, 180, 226, 0);

	push	0
	push	226					; 000000e2H
	push	180					; 000000b4H
	mov	eax, DWORD PTR ?PHframe@@3HA		; PHframe
	push	eax
	push	6
	mov	ecx, DWORD PTR _nY$[ebp]
	sub	ecx, 70					; 00000046H
	push	ecx
	mov	edx, DWORD PTR _nX$[ebp]
	sub	edx, 40					; 00000028H
	push	edx
	mov	eax, DWORD PTR ?g_pDDSDPlayerHit@@3PAUIDirectDrawSurface7@@A ; g_pDDSDPlayerHit
	push	eax
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN388@DXW_MainLo:

; 1925 : 					}
; 1926 : 				}
; 1927 : 			}
; 1928 : 			if (BHMPlay == TRUE)

	cmp	DWORD PTR ?BHMPlay@@3HA, 1		; BHMPlay
	jne	$LN413@DXW_MainLo

; 1929 : 			{
; 1930 : 				if (Timer[24] == 0 && BHplay[0] ==TRUE)

	mov	eax, 4
	imul	ecx, eax, 24
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jne	$LN390@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?BHplay@@3PAHA[ecx], 1
	jne	$LN390@DXW_MainLo

; 1931 : 				{
; 1932 : 					BHframe[0]++;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR ?BHframe@@3PAHA[ecx]
	add	edx, 1
	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?BHframe@@3PAHA[ecx], edx

; 1933 : 					Timer[24] = 2;

	mov	eax, 4
	imul	ecx, eax, 24
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 2

; 1934 : 					if (BHframe[0] == 6)

	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?BHframe@@3PAHA[ecx], 6
	jne	SHORT $LN392@DXW_MainLo

; 1935 : 					{
; 1936 : 						BHframe[0] = 0;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?BHframe@@3PAHA[ecx], 0

; 1937 : 						Timer[24] = 0;

	mov	eax, 4
	imul	ecx, eax, 24
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0

; 1938 : 						BHplay[0] = FALSE;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?BHplay@@3PAHA[ecx], 0
$LN392@DXW_MainLo:

; 1939 : 					}
; 1940 : 					if (BHframe[0] == 4 && BHplay[1] == FALSE)

	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?BHframe@@3PAHA[ecx], 4
	jne	SHORT $LN393@DXW_MainLo
	mov	eax, 4
	shl	eax, 0
	cmp	DWORD PTR ?BHplay@@3PAHA[eax], 0
	jne	SHORT $LN393@DXW_MainLo

; 1941 : 					{
; 1942 : 						Timer[26] = 2;

	mov	eax, 4
	imul	ecx, eax, 26
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 2

; 1943 : 						BHplay[1] = TRUE;

	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR ?BHplay@@3PAHA[eax], 1
$LN393@DXW_MainLo:

; 1944 : 					}
; 1945 : 				}

	jmp	SHORT $LN394@DXW_MainLo
$LN390@DXW_MainLo:

; 1946 : 				else if (Timer[24] > 0 && BHplay[0] == TRUE) { Timer[24]--; }

	mov	eax, 4
	imul	ecx, eax, 24
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jle	SHORT $LN394@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?BHplay@@3PAHA[ecx], 1
	jne	SHORT $LN394@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 24
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 24
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
$LN394@DXW_MainLo:

; 1947 : 				if (Timer[26] == 0 && BHplay[1] == TRUE)

	mov	eax, 4
	imul	ecx, eax, 26
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jne	$LN395@DXW_MainLo
	mov	eax, 4
	shl	eax, 0
	cmp	DWORD PTR ?BHplay@@3PAHA[eax], 1
	jne	$LN395@DXW_MainLo

; 1948 : 				{
; 1949 : 					BHframe[1]++;

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR ?BHframe@@3PAHA[eax]
	add	ecx, 1
	mov	edx, 4
	shl	edx, 0
	mov	DWORD PTR ?BHframe@@3PAHA[edx], ecx

; 1950 : 					Timer[26] = 2;

	mov	eax, 4
	imul	ecx, eax, 26
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 2

; 1951 : 					if (BHframe[1] == 6)

	mov	eax, 4
	shl	eax, 0
	cmp	DWORD PTR ?BHframe@@3PAHA[eax], 6
	jne	SHORT $LN397@DXW_MainLo

; 1952 : 					{
; 1953 : 						BHframe[1] = 0;

	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR ?BHframe@@3PAHA[eax], 0

; 1954 : 						Timer[26] = 0;

	mov	eax, 4
	imul	ecx, eax, 26
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0

; 1955 : 						BHplay[1] = FALSE;

	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR ?BHplay@@3PAHA[eax], 0
$LN397@DXW_MainLo:

; 1956 : 					}
; 1957 : 					if (BHframe[1] == 4 && BHplay[2] == FALSE)

	mov	eax, 4
	shl	eax, 0
	cmp	DWORD PTR ?BHframe@@3PAHA[eax], 4
	jne	SHORT $LN398@DXW_MainLo
	mov	eax, 4
	shl	eax, 1
	cmp	DWORD PTR ?BHplay@@3PAHA[eax], 0
	jne	SHORT $LN398@DXW_MainLo

; 1958 : 					{
; 1959 : 						Timer[27] = 2;

	mov	eax, 4
	imul	ecx, eax, 27
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 2

; 1960 : 						BHplay[2] = TRUE;

	mov	eax, 4
	shl	eax, 1
	mov	DWORD PTR ?BHplay@@3PAHA[eax], 1
$LN398@DXW_MainLo:

; 1961 : 					}
; 1962 : 				}

	jmp	SHORT $LN399@DXW_MainLo
$LN395@DXW_MainLo:

; 1963 : 				else if (Timer[26] > 0 && BHplay[1] == TRUE){ Timer[26]--; }

	mov	eax, 4
	imul	ecx, eax, 26
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jle	SHORT $LN399@DXW_MainLo
	mov	eax, 4
	shl	eax, 0
	cmp	DWORD PTR ?BHplay@@3PAHA[eax], 1
	jne	SHORT $LN399@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 26
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 26
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
$LN399@DXW_MainLo:

; 1964 : 				if (Timer[27] == 0 && BHplay[2] == TRUE)

	mov	eax, 4
	imul	ecx, eax, 27
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jne	$LN400@DXW_MainLo
	mov	eax, 4
	shl	eax, 1
	cmp	DWORD PTR ?BHplay@@3PAHA[eax], 1
	jne	SHORT $LN400@DXW_MainLo

; 1965 : 				{
; 1966 : 					BHframe[2]++;

	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR ?BHframe@@3PAHA[eax]
	add	ecx, 1
	mov	edx, 4
	shl	edx, 1
	mov	DWORD PTR ?BHframe@@3PAHA[edx], ecx

; 1967 : 					Timer[27] = 2;

	mov	eax, 4
	imul	ecx, eax, 27
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 2

; 1968 : 					if (BHframe[2] == 6)

	mov	eax, 4
	shl	eax, 1
	cmp	DWORD PTR ?BHframe@@3PAHA[eax], 6
	jne	SHORT $LN402@DXW_MainLo

; 1969 : 					{
; 1970 : 						BHframe[2] = 0;

	mov	eax, 4
	shl	eax, 1
	mov	DWORD PTR ?BHframe@@3PAHA[eax], 0

; 1971 : 						Timer[27] = 0;

	mov	eax, 4
	imul	ecx, eax, 27
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0

; 1972 : 						BHplay[2] = FALSE;

	mov	eax, 4
	shl	eax, 1
	mov	DWORD PTR ?BHplay@@3PAHA[eax], 0
$LN402@DXW_MainLo:

; 1973 : 					}
; 1974 : 				}

	jmp	SHORT $LN403@DXW_MainLo
$LN400@DXW_MainLo:

; 1975 : 				else if (Timer[27] > 0 && BHplay[2] == TRUE) { Timer[27]--; }

	mov	eax, 4
	imul	ecx, eax, 27
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jle	SHORT $LN403@DXW_MainLo
	mov	eax, 4
	shl	eax, 1
	cmp	DWORD PTR ?BHplay@@3PAHA[eax], 1
	jne	SHORT $LN403@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 27
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 27
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
$LN403@DXW_MainLo:

; 1976 : 				if (BHplay[0] == FALSE && BHplay[1] == FALSE && BHplay[2] == FALSE)

	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?BHplay@@3PAHA[ecx], 0
	jne	SHORT $LN404@DXW_MainLo
	mov	eax, 4
	shl	eax, 0
	cmp	DWORD PTR ?BHplay@@3PAHA[eax], 0
	jne	SHORT $LN404@DXW_MainLo
	mov	eax, 4
	shl	eax, 1
	cmp	DWORD PTR ?BHplay@@3PAHA[eax], 0
	jne	SHORT $LN404@DXW_MainLo

; 1977 : 				{
; 1978 : 					BHMPlay = FALSE;

	mov	DWORD PTR ?BHMPlay@@3HA, 0		; BHMPlay
$LN404@DXW_MainLo:

; 1979 : 				}
; 1980 : 				if (BHplay[0] == TRUE)

	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?BHplay@@3PAHA[ecx], 1
	jne	$LN407@DXW_MainLo

; 1981 : 				{
; 1982 : 					if (g_bLookL)

	cmp	DWORD PTR ?g_bLookL@@3HA, 0		; g_bLookL
	je	SHORT $LN406@DXW_MainLo

; 1983 : 					{
; 1984 : 						::__PutAnimeSprite(g_pDDSDBossHit, bnX, bnY - 40, 6, BHframe[0], 180, 226, 0);

	push	0
	push	226					; 000000e2H
	push	180					; 000000b4H
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR ?BHframe@@3PAHA[ecx]
	push	edx
	push	6
	mov	eax, DWORD PTR _bnY$[ebp]
	sub	eax, 40					; 00000028H
	push	eax
	mov	ecx, DWORD PTR _bnX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSDBossHit@@3PAUIDirectDrawSurface7@@A ; g_pDDSDBossHit
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN406@DXW_MainLo:

; 1985 : 					}
; 1986 : 					if (g_bLookR)

	cmp	DWORD PTR ?g_bLookR@@3HA, 0		; g_bLookR
	je	SHORT $LN407@DXW_MainLo

; 1987 : 					{
; 1988 : 						::__PutAnimeSprite(g_pDDSDBossHit, bnX + 20, bnY - 40, 6, BHframe[0], 180, 226, 0);

	push	0
	push	226					; 000000e2H
	push	180					; 000000b4H
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR ?BHframe@@3PAHA[ecx]
	push	edx
	push	6
	mov	eax, DWORD PTR _bnY$[ebp]
	sub	eax, 40					; 00000028H
	push	eax
	mov	ecx, DWORD PTR _bnX$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSDBossHit@@3PAUIDirectDrawSurface7@@A ; g_pDDSDBossHit
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN407@DXW_MainLo:

; 1989 : 					}
; 1990 : 				}
; 1991 : 				if (BHplay[1] == TRUE)

	mov	eax, 4
	shl	eax, 0
	cmp	DWORD PTR ?BHplay@@3PAHA[eax], 1
	jne	$LN410@DXW_MainLo

; 1992 : 				{
; 1993 : 					if (g_bLookL)

	cmp	DWORD PTR ?g_bLookL@@3HA, 0		; g_bLookL
	je	SHORT $LN409@DXW_MainLo

; 1994 : 					{
; 1995 : 						::__PutAnimeSprite(g_pDDSDBossHit, bnX, bnY - 40, 6, BHframe[1], 180, 226, 0);

	push	0
	push	226					; 000000e2H
	push	180					; 000000b4H
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR ?BHframe@@3PAHA[eax]
	push	ecx
	push	6
	mov	edx, DWORD PTR _bnY$[ebp]
	sub	edx, 40					; 00000028H
	push	edx
	mov	eax, DWORD PTR _bnX$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?g_pDDSDBossHit@@3PAUIDirectDrawSurface7@@A ; g_pDDSDBossHit
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN409@DXW_MainLo:

; 1996 : 					}
; 1997 : 					if (g_bLookR)

	cmp	DWORD PTR ?g_bLookR@@3HA, 0		; g_bLookR
	je	SHORT $LN410@DXW_MainLo

; 1998 : 					{
; 1999 : 						::__PutAnimeSprite(g_pDDSDBossHit, bnX + 20, bnY - 40, 6, BHframe[1], 180, 226, 0);

	push	0
	push	226					; 000000e2H
	push	180					; 000000b4H
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR ?BHframe@@3PAHA[eax]
	push	ecx
	push	6
	mov	edx, DWORD PTR _bnY$[ebp]
	sub	edx, 40					; 00000028H
	push	edx
	mov	eax, DWORD PTR _bnX$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	mov	ecx, DWORD PTR ?g_pDDSDBossHit@@3PAUIDirectDrawSurface7@@A ; g_pDDSDBossHit
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN410@DXW_MainLo:

; 2000 : 					}
; 2001 : 				}
; 2002 : 				if (BHplay[2] == TRUE)

	mov	eax, 4
	shl	eax, 1
	cmp	DWORD PTR ?BHplay@@3PAHA[eax], 1
	jne	$LN413@DXW_MainLo

; 2003 : 				{
; 2004 : 					if (g_bLookL)

	cmp	DWORD PTR ?g_bLookL@@3HA, 0		; g_bLookL
	je	SHORT $LN412@DXW_MainLo

; 2005 : 					{
; 2006 : 						::__PutAnimeSprite(g_pDDSDBossHit, bnX, bnY - 40, 6, BHframe[2], 180, 226, 0);

	push	0
	push	226					; 000000e2H
	push	180					; 000000b4H
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR ?BHframe@@3PAHA[eax]
	push	ecx
	push	6
	mov	edx, DWORD PTR _bnY$[ebp]
	sub	edx, 40					; 00000028H
	push	edx
	mov	eax, DWORD PTR _bnX$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?g_pDDSDBossHit@@3PAUIDirectDrawSurface7@@A ; g_pDDSDBossHit
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN412@DXW_MainLo:

; 2007 : 					}
; 2008 : 					if (g_bLookR)

	cmp	DWORD PTR ?g_bLookR@@3HA, 0		; g_bLookR
	je	SHORT $LN413@DXW_MainLo

; 2009 : 					{
; 2010 : 						::__PutAnimeSprite(g_pDDSDBossHit, bnX + 20, bnY - 40, 6, BHframe[2], 180, 226, 0);

	push	0
	push	226					; 000000e2H
	push	180					; 000000b4H
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR ?BHframe@@3PAHA[eax]
	push	ecx
	push	6
	mov	edx, DWORD PTR _bnY$[ebp]
	sub	edx, 40					; 00000028H
	push	edx
	mov	eax, DWORD PTR _bnX$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	mov	ecx, DWORD PTR ?g_pDDSDBossHit@@3PAUIDirectDrawSurface7@@A ; g_pDDSDBossHit
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN413@DXW_MainLo:

; 2011 : 					}
; 2012 : 				}
; 2013 : 			}
; 2014 : 			if (P1HP < 1)

	cmp	DWORD PTR ?P1HP@@3HA, 1			; P1HP
	jge	$LN414@DXW_MainLo

; 2015 : 			{
; 2016 : 				if (g_pDS[0])

	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[ecx], 0
	je	SHORT $LN415@DXW_MainLo

; 2017 : 					m_HHSound.Stop(g_pDS[0]);

	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[ecx]
	push	edx
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?Stop@CHHSound@@QAEXPAUIDirectSoundBuffer@@@Z ; CHHSound::Stop
$LN415@DXW_MainLo:

; 2018 : 				p1die = 1;

	mov	DWORD PTR ?p1die@@3HA, 1		; p1die

; 2019 : 				g_nPhaze = 2;

	mov	DWORD PTR ?g_nPhaze@@3HA, 2		; g_nPhaze

; 2020 : 				g_Pos.x = 0;

	mov	DWORD PTR ?g_Pos@@3UtagPOINT@@A, 0

; 2021 : 				g_Pos.y = 500;

	mov	DWORD PTR ?g_Pos@@3UtagPOINT@@A+4, 500	; 000001f4H

; 2022 : 				g_BPos.x = 700;

	mov	DWORD PTR ?g_BPos@@3UtagPOINT@@A, 700	; 000002bcH

; 2023 : 				g_BPos.y = 430;

	mov	DWORD PTR ?g_BPos@@3UtagPOINT@@A+4, 430	; 000001aeH

; 2024 : 				Gravity = 13;

	mov	DWORD PTR ?Gravity@@3HA, 13		; Gravity, 0000000dH

; 2025 : 				g_bSetSpeed = FALSE;

	mov	DWORD PTR ?g_bSetSpeed@@3HA, 0		; g_bSetSpeed

; 2026 : 				g_bJump = FALSE;

	mov	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump

; 2027 : 				g_bJaccel = FALSE;

	mov	DWORD PTR ?g_bJaccel@@3HA, 0		; g_bJaccel

; 2028 : 				g_bJLeft = FALSE;

	mov	DWORD PTR ?g_bJLeft@@3HA, 0		; g_bJLeft

; 2029 : 				g_bJRight = FALSE;

	mov	DWORD PTR ?g_bJRight@@3HA, 0		; g_bJRight

; 2030 : 				g_bCast = FALSE;

	mov	DWORD PTR ?g_bCast@@3HA, 0		; g_bCast

; 2031 : 				g_bCFire = FALSE;

	mov	DWORD PTR ?g_bCFire@@3HA, 0		; g_bCFire

; 2032 : 				g_bCLeft = FALSE;

	mov	DWORD PTR ?g_bCLeft@@3HA, 0		; g_bCLeft

; 2033 : 				g_bCRight = FALSE;

	mov	DWORD PTR ?g_bCRight@@3HA, 0		; g_bCRight

; 2034 : 				CastHit = FALSE;

	mov	DWORD PTR ?CastHit@@3HA, 0		; CastHit

; 2035 : 				Timer[11] = 0;

	mov	eax, 4
	imul	ecx, eax, 11
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0

; 2036 : 				cx = 0;

	mov	DWORD PTR ?cx@@3HA, 0			; cx

; 2037 : 				CAAframe = 0;

	mov	DWORD PTR ?CAAframe@@3HA, 0		; CAAframe

; 2038 : 				Cast = { 0,0,1,1 };

	mov	DWORD PTR $T50[ebp], 0
	mov	DWORD PTR $T50[ebp+4], 0
	mov	DWORD PTR $T50[ebp+8], 1
	mov	DWORD PTR $T50[ebp+12], 1
	mov	eax, DWORD PTR $T50[ebp]
	mov	DWORD PTR ?Cast@@3UtagRECT@@A, eax
	mov	ecx, DWORD PTR $T50[ebp+4]
	mov	DWORD PTR ?Cast@@3UtagRECT@@A+4, ecx
	mov	edx, DWORD PTR $T50[ebp+8]
	mov	DWORD PTR ?Cast@@3UtagRECT@@A+8, edx
	mov	eax, DWORD PTR $T50[ebp+12]
	mov	DWORD PTR ?Cast@@3UtagRECT@@A+12, eax

; 2039 : 				Timer[17] = (rand() % 150) + 200;

	call	_rand
	cdq
	mov	ecx, 150				; 00000096H
	idiv	ecx
	add	edx, 200				; 000000c8H
	mov	eax, 4
	imul	ecx, eax, 17
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx

; 2040 : 				Timer[16] = 0;

	mov	eax, 4
	shl	eax, 4
	mov	DWORD PTR ?Timer@@3PAHA[eax], 0

; 2041 : 				BossAtt = FALSE;

	mov	DWORD PTR ?BossAtt@@3HA, 0		; BossAtt

; 2042 : 				BAframe = 0;

	mov	DWORD PTR ?BAframe@@3HA, 0		; BAframe

; 2043 : 				Randpat2 = Randpat;

	mov	eax, DWORD PTR ?Randpat@@3HA		; Randpat
	mov	DWORD PTR ?Randpat2@@3HA, eax		; Randpat2

; 2044 : 				g_bBAT = FALSE;

	mov	DWORD PTR ?g_bBAT@@3HA, 0		; g_bBAT

; 2045 : 				Timer[7] = 60;

	mov	eax, 4
	imul	ecx, eax, 7
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 60	; 0000003cH

; 2046 : 				Maximum = 0;

	mov	DWORD PTR ?Maximum@@3HA, 0		; Maximum

; 2047 : 				RandNum[0, 1, 2, 3, 4] = { 0 };

	mov	eax, 4
	shl	eax, 2
	mov	DWORD PTR ?RandNum@@3PAHA[eax], 0

; 2048 : 				BAL = FALSE;

	mov	DWORD PTR ?BAL@@3HA, 0			; BAL

; 2049 : 				BAR = FALSE;

	mov	DWORD PTR ?BAR@@3HA, 0			; BAR

; 2050 : 				BKframe = 0;

	mov	DWORD PTR ?BKframe@@3HA, 0		; BKframe

; 2051 : 				KnockHIT = FALSE;

	mov	DWORD PTR ?KnockHIT@@3HA, 0		; KnockHIT

; 2052 : 				Knock = { 0,0,1,1 };

	mov	DWORD PTR $T49[ebp], 0
	mov	DWORD PTR $T49[ebp+4], 0
	mov	DWORD PTR $T49[ebp+8], 1
	mov	DWORD PTR $T49[ebp+12], 1
	mov	eax, DWORD PTR $T49[ebp]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A, eax
	mov	ecx, DWORD PTR $T49[ebp+4]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+4, ecx
	mov	edx, DWORD PTR $T49[ebp+8]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+8, edx
	mov	eax, DWORD PTR $T49[ebp+12]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+12, eax

; 2053 : 				BHplay[0] = FALSE;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?BHplay@@3PAHA[ecx], 0

; 2054 : 				BHplay[1] = FALSE;

	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR ?BHplay@@3PAHA[eax], 0

; 2055 : 				BHplay[2] = FALSE;

	mov	eax, 4
	shl	eax, 1
	mov	DWORD PTR ?BHplay@@3PAHA[eax], 0

; 2056 : 				BHMPlay = FALSE;

	mov	DWORD PTR ?BHMPlay@@3HA, 0		; BHMPlay

; 2057 : 				BHframe[0] = 0;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?BHframe@@3PAHA[ecx], 0

; 2058 : 				BHframe[1] = 0;

	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR ?BHframe@@3PAHA[eax], 0

; 2059 : 				BHframe[2] = 0;

	mov	eax, 4
	shl	eax, 1
	mov	DWORD PTR ?BHframe@@3PAHA[eax], 0

; 2060 : 				Timer[24] = 2;

	mov	eax, 4
	imul	ecx, eax, 24
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 2

; 2061 : 				Timer[26] = 2;

	mov	eax, 4
	imul	ecx, eax, 26
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 2

; 2062 : 				Timer[27] = 2;

	mov	eax, 4
	imul	ecx, eax, 27
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 2
$LN414@DXW_MainLo:

; 2063 : 
; 2064 : 			}
; 2065 : 			//·ºÆ® È®ÀÎ¿ë
; 2066 : 			//::__Lock(g_pDDSBack);
; 2067 : 			//__DrawRect16(PHIT.left, PHIT.top, PHIT.right, PHIT.bottom, wPixel);
; 2068 : 			//__DrawRect16(HIT.left, HIT.top, HIT.right, HIT.bottom, wPixel);
; 2069 : 			//__DrawRect16(Cast.left, Cast.top, Cast.right, Cast.bottom, wPixel);
; 2070 : 			//__DrawRect16(BOSS.left, BOSS.top, BOSS.right, BOSS.bottom, wPixel);
; 2071 : 			//__DrawRect16(Knock.left, Knock.top, Knock.right, Knock.bottom, wPixel);
; 2072 : 			//for (i = 0; i < 5; i++)
; 2073 : 			//{
; 2074 : 			//	__DrawRect16(BAHIT[i].left, BAHIT[i].top, BAHIT[i].right, BAHIT[i].bottom, wPixel);
; 2075 : 			//}
; 2076 : 			//::__Unlock(g_pDDSBack);
; 2077 : 			if (Timer[7] > 0)

	mov	eax, 4
	imul	ecx, eax, 7
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jle	SHORT $LN416@DXW_MainLo

; 2078 : 			{
; 2079 : 				Timer[7]--;

	mov	eax, 4
	imul	ecx, eax, 7
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 7
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
$LN416@DXW_MainLo:

; 2080 : 			}
; 2081 : 			if (Timer[5] > 0)

	mov	eax, 4
	imul	ecx, eax, 5
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jle	SHORT $LN417@DXW_MainLo

; 2082 : 			{
; 2083 : 				Timer[5] -= 1;

	mov	eax, 4
	imul	ecx, eax, 5
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 5
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
	jmp	SHORT $LN419@DXW_MainLo
$LN417@DXW_MainLo:

; 2084 : 			}
; 2085 : 			else if (Timer[5] <= 0 && bossimmu == TRUE)

	mov	eax, 4
	imul	ecx, eax, 5
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jg	SHORT $LN419@DXW_MainLo
	cmp	DWORD PTR ?bossimmu@@3HA, 1		; bossimmu
	jne	SHORT $LN419@DXW_MainLo

; 2086 : 			{
; 2087 : 				bossimmu = FALSE;

	mov	DWORD PTR ?bossimmu@@3HA, 0		; bossimmu

; 2088 : 				Timer[5] = 0;

	mov	eax, 4
	imul	ecx, eax, 5
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0
$LN419@DXW_MainLo:

; 2089 : 			}
; 2090 : 			::__PutSprite(g_pDDSHP, 130, 0);

	push	0
	push	130					; 00000082H
	mov	eax, DWORD PTR ?g_pDDSHP@@3PAUIDirectDrawSurface7@@A ; g_pDDSHP
	push	eax
	call	?__PutSprite@@YAXPAUIDirectDrawSurface7@@HH@Z ; __PutSprite
	add	esp, 12					; 0000000cH

; 2091 : 			if (P1HP > 1)

	cmp	DWORD PTR ?P1HP@@3HA, 1			; P1HP
	jle	SHORT $LN420@DXW_MainLo

; 2092 : 			{
; 2093 : 				::__Putbar(g_pDDSHPbar, 132, 2, P1MHP, P1HP, P1HPrate);

	push	ecx
	movss	xmm0, DWORD PTR ?P1HPrate@@3MA
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?P1HP@@3HA		; P1HP
	push	eax
	mov	ecx, DWORD PTR ?P1MHP@@3HA		; P1MHP
	push	ecx
	push	2
	push	132					; 00000084H
	mov	edx, DWORD PTR ?g_pDDSHPbar@@3PAUIDirectDrawSurface7@@A ; g_pDDSHPbar
	push	edx
	call	?__Putbar@@YAXPAUIDirectDrawSurface7@@HHHHM@Z ; __Putbar
	add	esp, 24					; 00000018H
$LN420@DXW_MainLo:

; 2094 : 			}
; 2095 : 			::__PutSprite(g_pDDSPHP, 400, 737);

	push	737					; 000002e1H
	push	400					; 00000190H
	mov	eax, DWORD PTR ?g_pDDSPHP@@3PAUIDirectDrawSurface7@@A ; g_pDDSPHP
	push	eax
	call	?__PutSprite@@YAXPAUIDirectDrawSurface7@@HH@Z ; __PutSprite
	add	esp, 12					; 0000000cH

; 2096 : 			if (PlayerHP > 1)

	cmp	DWORD PTR ?PlayerHP@@3HA, 1		; PlayerHP
	jle	SHORT $LN421@DXW_MainLo

; 2097 : 			{
; 2098 : 				::__Putbar(g_pDDSPHPbar, 425, 744, PlayerMHP, PlayerHP, PlayerHPrate);

	push	ecx
	movss	xmm0, DWORD PTR ?PlayerHPrate@@3MA
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?PlayerHP@@3HA		; PlayerHP
	push	eax
	mov	ecx, DWORD PTR ?PlayerMHP@@3HA		; PlayerMHP
	push	ecx
	push	744					; 000002e8H
	push	425					; 000001a9H
	mov	edx, DWORD PTR ?g_pDDSPHPbar@@3PAUIDirectDrawSurface7@@A ; g_pDDSPHPbar
	push	edx
	call	?__Putbar@@YAXPAUIDirectDrawSurface7@@HHHHM@Z ; __Putbar
	add	esp, 24					; 00000018H
$LN421@DXW_MainLo:

; 2099 : 			}
; 2100 : 			//////////////////////////////////////////////////////////
; 2101 : 			///// ±âÅ¸Á¤º¸ 
; 2102 : 			DXW_DisplayInfo();

	call	?DXW_DisplayInfo@@YAXXZ			; DXW_DisplayInfo

; 2103 : 			break;

	jmp	$LN2@DXW_MainLo
$LN422@DXW_MainLo:

; 2104 : 			//////////////////////////////////////////////////////////
; 2105 : 			//////////////////////////////////////////////////////////
; 2106 : 			//////////////////////////////////////////////////////////
; 2107 : 			//////////////////////////////////////////////////////////
; 2108 : 			//////////////////////////////////////////////////////////
; 2109 : 			//////////////////////////////////////////////////////////
; 2110 : 			//////////////////////////////////////////////////////////
; 2111 : 			//////////////////////////////////////////////////////////
; 2112 : 			//////////////////////////////////////////////////////////
; 2113 : 			//////////////////////////////////////////////////////////
; 2114 : 			//////////////////////////////////////////////////////////
; 2115 : 			//////////////////////////////////////////////////////////
; 2116 : 				case 2 : if (P2musicstart == TRUE)

	cmp	DWORD PTR ?P2musicstart@@3HA, 1		; P2musicstart
	jne	SHORT $LN423@DXW_MainLo

; 2117 : 				{
; 2118 : 				}
; 2119 : 						else

	jmp	SHORT $LN424@DXW_MainLo
$LN423@DXW_MainLo:

; 2120 : 						{
; 2121 : 							m_HHSound.Play(g_pDS[1], true);

	push	1
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[eax]
	push	ecx
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?Play@CHHSound@@QAEXPAUIDirectSoundBuffer@@_N@Z ; CHHSound::Play

; 2122 : 							P2musicstart = TRUE;

	mov	DWORD PTR ?P2musicstart@@3HA, 1		; P2musicstart
$LN424@DXW_MainLo:

; 2123 : 						}
; 2124 : 						 //¹è°æ
; 2125 : 							 ::__PutImage(g_pDDSBG2, Bx, 0);

	push	0
	mov	eax, DWORD PTR ?Bx@@3HA			; Bx
	push	eax
	mov	ecx, DWORD PTR ?g_pDDSBG2@@3PAUIDirectDrawSurface7@@A ; g_pDDSBG2
	push	ecx
	call	?__PutImage@@YAXPAUIDirectDrawSurface7@@HH@Z ; __PutImage
	add	esp, 12					; 0000000cH

; 2126 : 						 if (Timer[11] > 0)

	mov	eax, 4
	imul	ecx, eax, 11
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jle	SHORT $LN425@DXW_MainLo

; 2127 : 						 {
; 2128 : 							 Timer[11] -= 1;

	mov	eax, 4
	imul	ecx, eax, 11
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 11
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
$LN425@DXW_MainLo:

; 2129 : 						 }
; 2130 : 						 if (Timer[12] > 0)

	mov	eax, 4
	imul	ecx, eax, 12
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jle	SHORT $LN426@DXW_MainLo

; 2131 : 						 {
; 2132 : 							 Timer[12] -= 1;

	mov	eax, 4
	imul	ecx, eax, 12
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 12
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
	jmp	SHORT $LN428@DXW_MainLo
$LN426@DXW_MainLo:

; 2133 : 						 }
; 2134 : 						 else if (Timer[15] > 0)

	mov	eax, 4
	imul	ecx, eax, 15
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jle	SHORT $LN428@DXW_MainLo

; 2135 : 						 {
; 2136 : 							 Timer[15] -= 1;

	mov	eax, 4
	imul	ecx, eax, 15
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 15
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
$LN428@DXW_MainLo:

; 2137 : 						 }
; 2138 : 						 //ÀÌµ¿ ¹× Á¡ÇÁ ·ÎÁ÷
; 2139 : 						 ///////////////////////
; 2140 : 						 ///////////////////////
; 2141 : 						 ///////////////////////
; 2142 : 						 ///////////////////////
; 2143 : 						 //				g_BPos.x += 1;
; 2144 : 						 if (g_BPos.x + 60 < g_Pos.x) //º¸½º ¿À¸¥ÂÊ ÀüÈ¯

	mov	eax, DWORD PTR ?g_BPos@@3UtagPOINT@@A
	add	eax, 60					; 0000003cH
	cmp	eax, DWORD PTR ?g_Pos@@3UtagPOINT@@A
	jge	SHORT $LN429@DXW_MainLo

; 2145 : 						 {
; 2146 : 							 g_bBLR = TRUE;

	mov	DWORD PTR ?g_bBLR@@3HA, 1		; g_bBLR

; 2147 : 							 g_bBLL = FALSE;

	mov	DWORD PTR ?g_bBLL@@3HA, 0		; g_bBLL
	jmp	SHORT $LN431@DXW_MainLo
$LN429@DXW_MainLo:

; 2148 : 						 }
; 2149 : 						 else if (g_BPos.x > g_Pos.x) //º¸½º ¿ÞÂÊ ÀüÈ¯

	mov	eax, DWORD PTR ?g_BPos@@3UtagPOINT@@A
	cmp	eax, DWORD PTR ?g_Pos@@3UtagPOINT@@A
	jle	SHORT $LN431@DXW_MainLo

; 2150 : 						 {
; 2151 : 							 g_bBLR = FALSE;

	mov	DWORD PTR ?g_bBLR@@3HA, 0		; g_bBLR

; 2152 : 							 g_bBLL = TRUE;

	mov	DWORD PTR ?g_bBLL@@3HA, 1		; g_bBLL
$LN431@DXW_MainLo:

; 2153 : 						 }
; 2154 : 						 if (g_BPos.x + 300 < g_Pos.x) //º¸½º ¿À¸¥ÂÊ ÀÌµ¿

	mov	eax, DWORD PTR ?g_BPos@@3UtagPOINT@@A
	add	eax, 300				; 0000012cH
	cmp	eax, DWORD PTR ?g_Pos@@3UtagPOINT@@A
	jge	SHORT $LN432@DXW_MainLo

; 2155 : 						 {
; 2156 : 							 if (BossAtt == FALSE)

	cmp	DWORD PTR ?BossAtt@@3HA, 0		; BossAtt
	jne	SHORT $LN434@DXW_MainLo

; 2157 : 							 {
; 2158 : 								 g_BPos.x += 1;

	mov	eax, DWORD PTR ?g_BPos@@3UtagPOINT@@A
	add	eax, 1
	mov	DWORD PTR ?g_BPos@@3UtagPOINT@@A, eax
$LN434@DXW_MainLo:

; 2159 : 							 }
; 2160 : 							 g_bBLR = TRUE;

	mov	DWORD PTR ?g_bBLR@@3HA, 1		; g_bBLR

; 2161 : 							 g_bBLL = FALSE;

	mov	DWORD PTR ?g_bBLL@@3HA, 0		; g_bBLL
	jmp	SHORT $LN435@DXW_MainLo
$LN432@DXW_MainLo:

; 2162 : 						 }
; 2163 : 						 else if (g_BPos.x - 200 > g_Pos.x) //º¸½º ¿ÞÂÊ ÀÌµ¿

	mov	eax, DWORD PTR ?g_BPos@@3UtagPOINT@@A
	sub	eax, 200				; 000000c8H
	cmp	eax, DWORD PTR ?g_Pos@@3UtagPOINT@@A
	jle	SHORT $LN435@DXW_MainLo

; 2164 : 						 {
; 2165 : 							 if (BossAtt == FALSE)

	cmp	DWORD PTR ?BossAtt@@3HA, 0		; BossAtt
	jne	SHORT $LN436@DXW_MainLo

; 2166 : 							 {
; 2167 : 								 g_BPos.x -= 1;

	mov	eax, DWORD PTR ?g_BPos@@3UtagPOINT@@A
	sub	eax, 1
	mov	DWORD PTR ?g_BPos@@3UtagPOINT@@A, eax
$LN436@DXW_MainLo:

; 2168 : 							 }
; 2169 : 							 g_bBLR = FALSE;

	mov	DWORD PTR ?g_bBLR@@3HA, 0		; g_bBLR

; 2170 : 							 g_bBLL = TRUE;

	mov	DWORD PTR ?g_bBLL@@3HA, 1		; g_bBLL
$LN435@DXW_MainLo:

; 2171 : 						 }
; 2172 : 						 if (::GetKeyState(0x58) & 0x80 && g_bAtt == FALSE && g_bRush == FALSE) //°ø°Ý ·ÎÁ÷

	mov	esi, esp
	push	88					; 00000058H
	call	DWORD PTR __imp__GetKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 128				; 00000080H
	je	$LN441@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	$LN441@DXW_MainLo
	cmp	DWORD PTR ?g_bRush@@3HA, 0		; g_bRush
	jne	$LN441@DXW_MainLo

; 2173 : 						 {
; 2174 : 							 if (g_bLookR == TRUE)

	cmp	DWORD PTR ?g_bLookR@@3HA, 1		; g_bLookR
	jne	SHORT $LN438@DXW_MainLo

; 2175 : 							 {
; 2176 : 								 g_bAR = TRUE;

	mov	DWORD PTR ?g_bAR@@3HA, 1		; g_bAR

; 2177 : 								 g_bAtt = TRUE;

	mov	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt

; 2178 : 								 Aframe = 12;

	mov	DWORD PTR ?Aframe@@3HA, 12		; Aframe, 0000000cH

; 2179 : 								 if (g_pDS[3])

	mov	eax, 4
	imul	ecx, eax, 3
	cmp	DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[ecx], 0
	je	SHORT $LN440@DXW_MainLo

; 2180 : 									 m_HHSound.Stop(g_pDS[3]);

	mov	eax, 4
	imul	ecx, eax, 3
	mov	edx, DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[ecx]
	push	edx
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?Stop@CHHSound@@QAEXPAUIDirectSoundBuffer@@@Z ; CHHSound::Stop
$LN440@DXW_MainLo:

; 2181 : 								 m_HHSound.Play(g_pDS[3], false);

	push	0
	mov	eax, 4
	imul	ecx, eax, 3
	mov	edx, DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[ecx]
	push	edx
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?Play@CHHSound@@QAEXPAUIDirectSoundBuffer@@_N@Z ; CHHSound::Play
	jmp	SHORT $LN441@DXW_MainLo
$LN438@DXW_MainLo:

; 2182 : 							 }
; 2183 : 							 else if (g_bLookL == TRUE)

	cmp	DWORD PTR ?g_bLookL@@3HA, 1		; g_bLookL
	jne	SHORT $LN441@DXW_MainLo

; 2184 : 							 {
; 2185 : 								 g_bAL = TRUE;

	mov	DWORD PTR ?g_bAL@@3HA, 1		; g_bAL

; 2186 : 								 g_bAtt = TRUE;

	mov	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt

; 2187 : 								 Aframe = 0;

	mov	DWORD PTR ?Aframe@@3HA, 0		; Aframe

; 2188 : 								 if (g_pDS[3])

	mov	eax, 4
	imul	ecx, eax, 3
	cmp	DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[ecx], 0
	je	SHORT $LN442@DXW_MainLo

; 2189 : 									 m_HHSound.Stop(g_pDS[3]);

	mov	eax, 4
	imul	ecx, eax, 3
	mov	edx, DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[ecx]
	push	edx
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?Stop@CHHSound@@QAEXPAUIDirectSoundBuffer@@@Z ; CHHSound::Stop
$LN442@DXW_MainLo:

; 2190 : 								 m_HHSound.Play(g_pDS[3], false);

	push	0
	mov	eax, 4
	imul	ecx, eax, 3
	mov	edx, DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[ecx]
	push	edx
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?Play@CHHSound@@QAEXPAUIDirectSoundBuffer@@_N@Z ; CHHSound::Play
$LN441@DXW_MainLo:

; 2191 : 							 }
; 2192 : 						 }
; 2193 : 						 //ÀÌµ¿ ¹× Á¡ÇÁ ·ÎÁ÷ ³¡
; 2194 : 						 //// Ç¥¸é Å¬¸®¾î	
; 2195 : 						 //_FillSurface(g_pDDSBack, 0x00000000);
; 2196 : 						 nX = g_Pos.x;

	mov	eax, DWORD PTR ?g_Pos@@3UtagPOINT@@A
	mov	DWORD PTR _nX$[ebp], eax

; 2197 : 						 nY = g_Pos.y;

	mov	eax, DWORD PTR ?g_Pos@@3UtagPOINT@@A+4
	mov	DWORD PTR _nY$[ebp], eax

; 2198 : 						 bnX = g_BPos.x;

	mov	eax, DWORD PTR ?g_BPos@@3UtagPOINT@@A
	mov	DWORD PTR _bnX$[ebp], eax

; 2199 : 						 bnY = g_BPos.y;

	mov	eax, DWORD PTR ?g_BPos@@3UtagPOINT@@A+4
	mov	DWORD PTR _bnY$[ebp], eax

; 2200 : 						 SnX = nX;

	mov	eax, DWORD PTR _nX$[ebp]
	mov	DWORD PTR _SnX$[ebp], eax

; 2201 : 						 SnY = nY - 65;

	mov	eax, DWORD PTR _nY$[ebp]
	sub	eax, 65					; 00000041H
	mov	DWORD PTR _SnY$[ebp], eax

; 2202 : 						 //Ä³½ºÆÃ ¾Ö´Ï¸ÞÀÌ¼Ç
; 2203 : 						 if (Timer[14] >0)

	mov	eax, 4
	imul	ecx, eax, 14
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jle	SHORT $LN443@DXW_MainLo

; 2204 : 						 { 
; 2205 : 							 Timer[14] -= 1;

	mov	eax, 4
	imul	ecx, eax, 14
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 14
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
$LN443@DXW_MainLo:

; 2206 : 						 }
; 2207 : 						 if (g_bCast == TRUE && g_bBLL == TRUE)

	cmp	DWORD PTR ?g_bCast@@3HA, 1		; g_bCast
	jne	SHORT $LN444@DXW_MainLo
	cmp	DWORD PTR ?g_bBLL@@3HA, 1		; g_bBLL
	jne	SHORT $LN444@DXW_MainLo

; 2208 : 						 {
; 2209 : 							 ::__PutAnimeSprite(g_pDDSCast2, bnX, bnY - 30, 20, CAframe, 192, 192, 0);

	push	0
	push	192					; 000000c0H
	push	192					; 000000c0H
	mov	eax, DWORD PTR ?CAframe@@3HA		; CAframe
	push	eax
	push	20					; 00000014H
	mov	ecx, DWORD PTR _bnY$[ebp]
	sub	ecx, 30					; 0000001eH
	push	ecx
	mov	edx, DWORD PTR _bnX$[ebp]
	push	edx
	mov	eax, DWORD PTR ?g_pDDSCast2@@3PAUIDirectDrawSurface7@@A ; g_pDDSCast2
	push	eax
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN444@DXW_MainLo:

; 2210 : 						 }
; 2211 : 						 if (g_bCast == TRUE && g_bBLR == TRUE)

	cmp	DWORD PTR ?g_bCast@@3HA, 1		; g_bCast
	jne	SHORT $LN445@DXW_MainLo
	cmp	DWORD PTR ?g_bBLR@@3HA, 1		; g_bBLR
	jne	SHORT $LN445@DXW_MainLo

; 2212 : 						 {
; 2213 : 							 ::__PutAnimeSprite(g_pDDSCast2, bnX - 20, bnY - 30, 20, CAframe, 192, 192, 0);

	push	0
	push	192					; 000000c0H
	push	192					; 000000c0H
	mov	eax, DWORD PTR ?CAframe@@3HA		; CAframe
	push	eax
	push	20					; 00000014H
	mov	ecx, DWORD PTR _bnY$[ebp]
	sub	ecx, 30					; 0000001eH
	push	ecx
	mov	edx, DWORD PTR _bnX$[ebp]
	sub	edx, 20					; 00000014H
	push	edx
	mov	eax, DWORD PTR ?g_pDDSCast2@@3PAUIDirectDrawSurface7@@A ; g_pDDSCast2
	push	eax
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN445@DXW_MainLo:

; 2214 : 						 }
; 2215 : 						 if (Timer[10] > 0 && g_bCast == TRUE)

	mov	eax, 4
	imul	ecx, eax, 10
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jle	SHORT $LN446@DXW_MainLo
	cmp	DWORD PTR ?g_bCast@@3HA, 1		; g_bCast
	jne	SHORT $LN446@DXW_MainLo

; 2216 : 						 {
; 2217 : 							 Timer[10] -= 1;

	mov	eax, 4
	imul	ecx, eax, 10
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 10
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
	jmp	SHORT $LN448@DXW_MainLo
$LN446@DXW_MainLo:

; 2218 : 						 }
; 2219 : 						 else if (Timer[10] <= 0 && CAframe <= 19 && g_bCast == TRUE)

	mov	eax, 4
	imul	ecx, eax, 10
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jg	SHORT $LN448@DXW_MainLo
	cmp	DWORD PTR ?CAframe@@3HA, 19		; CAframe, 00000013H
	jg	SHORT $LN448@DXW_MainLo
	cmp	DWORD PTR ?g_bCast@@3HA, 1		; g_bCast
	jne	SHORT $LN448@DXW_MainLo

; 2220 : 						 {
; 2221 : 							 CAframe++;

	mov	eax, DWORD PTR ?CAframe@@3HA		; CAframe
	add	eax, 1
	mov	DWORD PTR ?CAframe@@3HA, eax		; CAframe

; 2222 : 							 Timer[10] = 2;

	mov	eax, 4
	imul	ecx, eax, 10
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 2
$LN448@DXW_MainLo:

; 2223 : 						 }
; 2224 : 						 if (CAframe == 20)

	cmp	DWORD PTR ?CAframe@@3HA, 20		; CAframe, 00000014H
	jne	SHORT $LN449@DXW_MainLo

; 2225 : 						 {
; 2226 : 							 Timer[10] = 0;

	mov	eax, 4
	imul	ecx, eax, 10
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0

; 2227 : 							 CAframe = 0;

	mov	DWORD PTR ?CAframe@@3HA, 0		; CAframe
$LN449@DXW_MainLo:

; 2228 : 						 }
; 2229 : 						 //ÇÃ·¹ÀÌ¾î ÇÇ°Ý·ºÆ® ¼³Á¤
; 2230 : 						 if (g_bLookL)

	cmp	DWORD PTR ?g_bLookL@@3HA, 0		; g_bLookL
	je	SHORT $LN450@DXW_MainLo

; 2231 : 						 {
; 2232 : 							 PHIT = { nX + 11,nY + 10,nX + 45,nY + 80 };

	mov	eax, DWORD PTR _nX$[ebp]
	add	eax, 11					; 0000000bH
	mov	DWORD PTR $T48[ebp], eax
	mov	ecx, DWORD PTR _nY$[ebp]
	add	ecx, 10					; 0000000aH
	mov	DWORD PTR $T48[ebp+4], ecx
	mov	edx, DWORD PTR _nX$[ebp]
	add	edx, 45					; 0000002dH
	mov	DWORD PTR $T48[ebp+8], edx
	mov	eax, DWORD PTR _nY$[ebp]
	add	eax, 80					; 00000050H
	mov	DWORD PTR $T48[ebp+12], eax
	mov	ecx, DWORD PTR $T48[ebp]
	mov	DWORD PTR ?PHIT@@3UtagRECT@@A, ecx
	mov	edx, DWORD PTR $T48[ebp+4]
	mov	DWORD PTR ?PHIT@@3UtagRECT@@A+4, edx
	mov	eax, DWORD PTR $T48[ebp+8]
	mov	DWORD PTR ?PHIT@@3UtagRECT@@A+8, eax
	mov	ecx, DWORD PTR $T48[ebp+12]
	mov	DWORD PTR ?PHIT@@3UtagRECT@@A+12, ecx
	jmp	SHORT $LN452@DXW_MainLo
$LN450@DXW_MainLo:

; 2233 : 						 }
; 2234 : 						 else if (g_bLookR)

	cmp	DWORD PTR ?g_bLookR@@3HA, 0		; g_bLookR
	je	SHORT $LN452@DXW_MainLo

; 2235 : 						 {
; 2236 : 							 PHIT = { nX + 25,nY + 10,nX + 58,nY + 80 };

	mov	eax, DWORD PTR _nX$[ebp]
	add	eax, 25					; 00000019H
	mov	DWORD PTR $T47[ebp], eax
	mov	ecx, DWORD PTR _nY$[ebp]
	add	ecx, 10					; 0000000aH
	mov	DWORD PTR $T47[ebp+4], ecx
	mov	edx, DWORD PTR _nX$[ebp]
	add	edx, 58					; 0000003aH
	mov	DWORD PTR $T47[ebp+8], edx
	mov	eax, DWORD PTR _nY$[ebp]
	add	eax, 80					; 00000050H
	mov	DWORD PTR $T47[ebp+12], eax
	mov	ecx, DWORD PTR $T47[ebp]
	mov	DWORD PTR ?PHIT@@3UtagRECT@@A, ecx
	mov	edx, DWORD PTR $T47[ebp+4]
	mov	DWORD PTR ?PHIT@@3UtagRECT@@A+4, edx
	mov	eax, DWORD PTR $T47[ebp+8]
	mov	DWORD PTR ?PHIT@@3UtagRECT@@A+8, eax
	mov	ecx, DWORD PTR $T47[ebp+12]
	mov	DWORD PTR ?PHIT@@3UtagRECT@@A+12, ecx
$LN452@DXW_MainLo:

; 2237 : 						 }
; 2238 : 						 if (IntersectRect(&rcDest, &Cast, &PHIT))

	mov	esi, esp
	push	OFFSET ?PHIT@@3UtagRECT@@A		; PHIT
	push	OFFSET ?Cast@@3UtagRECT@@A		; Cast
	push	OFFSET ?rcDest@@3UtagRECT@@A		; rcDest
	call	DWORD PTR __imp__IntersectRect@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN453@DXW_MainLo

; 2239 : 						 {
; 2240 : 							 PlayerHP -= 1000;

	mov	eax, DWORD PTR ?PlayerHP@@3HA		; PlayerHP
	sub	eax, 1000				; 000003e8H
	mov	DWORD PTR ?PlayerHP@@3HA, eax		; PlayerHP
$LN453@DXW_MainLo:

; 2241 : 						 }
; 2242 : 						 //// º¸½º ½ºÅÄµù
; 2243 : 
; 2244 : 						 if (Timer[17] == 0 && BossAtt == FALSE)

	mov	eax, 4
	imul	ecx, eax, 17
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jne	SHORT $LN454@DXW_MainLo
	cmp	DWORD PTR ?BossAtt@@3HA, 0		; BossAtt
	jne	SHORT $LN454@DXW_MainLo

; 2245 : 						 {
; 2246 : 							 Timer[16] = 4;

	mov	eax, 4
	shl	eax, 4
	mov	DWORD PTR ?Timer@@3PAHA[eax], 4

; 2247 : 							 BossAtt = TRUE;

	mov	DWORD PTR ?BossAtt@@3HA, 1		; BossAtt

; 2248 : 							 if (g_bBLL == TRUE)

	cmp	DWORD PTR ?g_bBLL@@3HA, 1		; g_bBLL
	jne	SHORT $LN456@DXW_MainLo

; 2249 : 							 {
; 2250 : 								 BKframe = 0;

	mov	DWORD PTR ?BKframe@@3HA, 0		; BKframe

; 2251 : 								 BAL = TRUE;

	mov	DWORD PTR ?BAL@@3HA, 1			; BAL

; 2252 : 								 BAR = FALSE;

	mov	DWORD PTR ?BAR@@3HA, 0			; BAR
	jmp	SHORT $LN457@DXW_MainLo
$LN456@DXW_MainLo:

; 2253 : 							 }
; 2254 : 							 else { BKframe = 16; BAR = TRUE; BAL = FALSE; }

	mov	DWORD PTR ?BKframe@@3HA, 16		; BKframe, 00000010H
	mov	DWORD PTR ?BAR@@3HA, 1			; BAR
	mov	DWORD PTR ?BAL@@3HA, 0			; BAL
$LN457@DXW_MainLo:
	jmp	SHORT $LN458@DXW_MainLo
$LN454@DXW_MainLo:

; 2255 : 						 }
; 2256 : 						 else if (Timer[17] > 0)

	mov	eax, 4
	imul	ecx, eax, 17
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jle	SHORT $LN458@DXW_MainLo

; 2257 : 						 {
; 2258 : 							 Timer[17] -= 1;

	mov	eax, 4
	imul	ecx, eax, 17
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 17
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
$LN458@DXW_MainLo:

; 2259 : 						 }
; 2260 : 						 if (BossAtt == TRUE)

	cmp	DWORD PTR ?BossAtt@@3HA, 1		; BossAtt
	jne	$LN476@DXW_MainLo

; 2261 : 						 {
; 2262 : 							 if (BAL == TRUE)

	cmp	DWORD PTR ?BAL@@3HA, 1			; BAL
	jne	SHORT $LN460@DXW_MainLo

; 2263 : 							 {
; 2264 : 								 ::__PutAnimeSprite(g_pDDSDragAtt, bnX - 513, bnY - 99, 17, BKframe, 720, 315, 0);

	push	0
	push	315					; 0000013bH
	push	720					; 000002d0H
	mov	eax, DWORD PTR ?BKframe@@3HA		; BKframe
	push	eax
	push	17					; 00000011H
	mov	ecx, DWORD PTR _bnY$[ebp]
	sub	ecx, 99					; 00000063H
	push	ecx
	mov	edx, DWORD PTR _bnX$[ebp]
	sub	edx, 513				; 00000201H
	push	edx
	mov	eax, DWORD PTR ?g_pDDSDragAtt@@3PAUIDirectDrawSurface7@@A ; g_pDDSDragAtt
	push	eax
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	SHORT $LN462@DXW_MainLo
$LN460@DXW_MainLo:

; 2265 : 							 }
; 2266 : 							 else if (BAR == TRUE)

	cmp	DWORD PTR ?BAR@@3HA, 1			; BAR
	jne	SHORT $LN462@DXW_MainLo

; 2267 : 							 {
; 2268 : 								 ::__PutAnimeSprite(g_pDDSDragAttR, bnX - 15, bnY - 99, 17, BKframe, 720, 315, 0);

	push	0
	push	315					; 0000013bH
	push	720					; 000002d0H
	mov	eax, DWORD PTR ?BKframe@@3HA		; BKframe
	push	eax
	push	17					; 00000011H
	mov	ecx, DWORD PTR _bnY$[ebp]
	sub	ecx, 99					; 00000063H
	push	ecx
	mov	edx, DWORD PTR _bnX$[ebp]
	sub	edx, 15					; 0000000fH
	push	edx
	mov	eax, DWORD PTR ?g_pDDSDragAttR@@3PAUIDirectDrawSurface7@@A ; g_pDDSDragAttR
	push	eax
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN462@DXW_MainLo:

; 2269 : 							 }
; 2270 : 							 if (Timer[16] > 0)

	mov	eax, 4
	shl	eax, 4
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 0
	jle	SHORT $LN463@DXW_MainLo

; 2271 : 							 {
; 2272 : 								 Timer[16] -= 1;

	mov	eax, 4
	shl	eax, 4
	mov	ecx, DWORD PTR ?Timer@@3PAHA[eax]
	sub	ecx, 1
	mov	edx, 4
	shl	edx, 4
	mov	DWORD PTR ?Timer@@3PAHA[edx], ecx
	jmp	$LN474@DXW_MainLo
$LN463@DXW_MainLo:

; 2273 : 							 }
; 2274 : 							 else if (Timer[16] == 0)

	mov	eax, 4
	shl	eax, 4
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 0
	jne	$LN474@DXW_MainLo

; 2275 : 							 {
; 2276 : 								 if (BAL == TRUE)

	cmp	DWORD PTR ?BAL@@3HA, 1			; BAL
	jne	SHORT $LN466@DXW_MainLo

; 2277 : 								 {
; 2278 : 									 BKframe++;

	mov	eax, DWORD PTR ?BKframe@@3HA		; BKframe
	add	eax, 1
	mov	DWORD PTR ?BKframe@@3HA, eax		; BKframe
	jmp	SHORT $LN468@DXW_MainLo
$LN466@DXW_MainLo:

; 2279 : 								 }
; 2280 : 								 else if (BAR == TRUE)

	cmp	DWORD PTR ?BAR@@3HA, 1			; BAR
	jne	SHORT $LN468@DXW_MainLo

; 2281 : 								 {
; 2282 : 									 BKframe--;

	mov	eax, DWORD PTR ?BKframe@@3HA		; BKframe
	sub	eax, 1
	mov	DWORD PTR ?BKframe@@3HA, eax		; BKframe
$LN468@DXW_MainLo:

; 2283 : 								 }
; 2284 : 								 if (BKframe < 8 && BAL == TRUE)

	cmp	DWORD PTR ?BKframe@@3HA, 8		; BKframe
	jge	SHORT $LN469@DXW_MainLo
	cmp	DWORD PTR ?BAL@@3HA, 1			; BAL
	jne	SHORT $LN469@DXW_MainLo

; 2285 : 								 {
; 2286 : 									 Timer[16] = 5;

	mov	eax, 4
	shl	eax, 4
	mov	DWORD PTR ?Timer@@3PAHA[eax], 5
	jmp	SHORT $LN471@DXW_MainLo
$LN469@DXW_MainLo:

; 2287 : 								 }
; 2288 : 								 else if (BKframe > 8 && BAL == TRUE)

	cmp	DWORD PTR ?BKframe@@3HA, 8		; BKframe
	jle	SHORT $LN471@DXW_MainLo
	cmp	DWORD PTR ?BAL@@3HA, 1			; BAL
	jne	SHORT $LN471@DXW_MainLo

; 2289 : 								 {
; 2290 : 									 Timer[16] = 4;

	mov	eax, 4
	shl	eax, 4
	mov	DWORD PTR ?Timer@@3PAHA[eax], 4
$LN471@DXW_MainLo:

; 2291 : 								 }
; 2292 : 								 if (BKframe > 9 && BAR == TRUE)

	cmp	DWORD PTR ?BKframe@@3HA, 9		; BKframe
	jle	SHORT $LN472@DXW_MainLo
	cmp	DWORD PTR ?BAR@@3HA, 1			; BAR
	jne	SHORT $LN472@DXW_MainLo

; 2293 : 								 {
; 2294 : 									 Timer[16] = 5;

	mov	eax, 4
	shl	eax, 4
	mov	DWORD PTR ?Timer@@3PAHA[eax], 5
	jmp	SHORT $LN474@DXW_MainLo
$LN472@DXW_MainLo:

; 2295 : 								 }
; 2296 : 								 else if (BKframe < 9 && BAR == TRUE)

	cmp	DWORD PTR ?BKframe@@3HA, 9		; BKframe
	jge	SHORT $LN474@DXW_MainLo
	cmp	DWORD PTR ?BAR@@3HA, 1			; BAR
	jne	SHORT $LN474@DXW_MainLo

; 2297 : 								 {
; 2298 : 									 Timer[16] = 4;

	mov	eax, 4
	shl	eax, 4
	mov	DWORD PTR ?Timer@@3PAHA[eax], 4
$LN474@DXW_MainLo:

; 2299 : 								 }
; 2300 : 							 }
; 2301 : 							 if (BKframe == 16 && BAL == TRUE)

	cmp	DWORD PTR ?BKframe@@3HA, 16		; BKframe, 00000010H
	jne	$LN475@DXW_MainLo
	cmp	DWORD PTR ?BAL@@3HA, 1			; BAL
	jne	$LN475@DXW_MainLo

; 2302 : 							 {
; 2303 : 								 Timer[17] = (rand() % 150) + 200;

	call	_rand
	cdq
	mov	ecx, 150				; 00000096H
	idiv	ecx
	add	edx, 200				; 000000c8H
	mov	eax, 4
	imul	ecx, eax, 17
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx

; 2304 : 								 Timer[16] = 0;

	mov	eax, 4
	shl	eax, 4
	mov	DWORD PTR ?Timer@@3PAHA[eax], 0

; 2305 : 								 BossAtt = FALSE;

	mov	DWORD PTR ?BossAtt@@3HA, 0		; BossAtt

; 2306 : 								 BAL = FALSE;

	mov	DWORD PTR ?BAL@@3HA, 0			; BAL

; 2307 : 								 BAR = FALSE;

	mov	DWORD PTR ?BAR@@3HA, 0			; BAR

; 2308 : 								 KnockHIT = FALSE;

	mov	DWORD PTR ?KnockHIT@@3HA, 0		; KnockHIT

; 2309 : 								 BKframe = 0;

	mov	DWORD PTR ?BKframe@@3HA, 0		; BKframe

; 2310 : 								 Knock = { 0,0,1,1 };

	mov	DWORD PTR $T46[ebp], 0
	mov	DWORD PTR $T46[ebp+4], 0
	mov	DWORD PTR $T46[ebp+8], 1
	mov	DWORD PTR $T46[ebp+12], 1
	mov	eax, DWORD PTR $T46[ebp]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A, eax
	mov	ecx, DWORD PTR $T46[ebp+4]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+4, ecx
	mov	edx, DWORD PTR $T46[ebp+8]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+8, edx
	mov	eax, DWORD PTR $T46[ebp+12]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+12, eax
$LN475@DXW_MainLo:

; 2311 : 							 }
; 2312 : 							 if (BKframe == 0 && BAR == TRUE)

	cmp	DWORD PTR ?BKframe@@3HA, 0		; BKframe
	jne	$LN476@DXW_MainLo
	cmp	DWORD PTR ?BAR@@3HA, 1			; BAR
	jne	$LN476@DXW_MainLo

; 2313 : 							 {
; 2314 : 								 Timer[17] = (rand() % 150) + 200;

	call	_rand
	cdq
	mov	ecx, 150				; 00000096H
	idiv	ecx
	add	edx, 200				; 000000c8H
	mov	eax, 4
	imul	ecx, eax, 17
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx

; 2315 : 								 Timer[16] = 0;

	mov	eax, 4
	shl	eax, 4
	mov	DWORD PTR ?Timer@@3PAHA[eax], 0

; 2316 : 								 BossAtt = FALSE;

	mov	DWORD PTR ?BossAtt@@3HA, 0		; BossAtt

; 2317 : 								 BAL = FALSE;

	mov	DWORD PTR ?BAL@@3HA, 0			; BAL

; 2318 : 								 BAR = FALSE;

	mov	DWORD PTR ?BAR@@3HA, 0			; BAR

; 2319 : 								 BKframe = 0;

	mov	DWORD PTR ?BKframe@@3HA, 0		; BKframe

; 2320 : 								 KnockHIT = FALSE;

	mov	DWORD PTR ?KnockHIT@@3HA, 0		; KnockHIT

; 2321 : 								 Knock = { 0,0,1,1 };

	mov	DWORD PTR $T45[ebp], 0
	mov	DWORD PTR $T45[ebp+4], 0
	mov	DWORD PTR $T45[ebp+8], 1
	mov	DWORD PTR $T45[ebp+12], 1
	mov	eax, DWORD PTR $T45[ebp]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A, eax
	mov	ecx, DWORD PTR $T45[ebp+4]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+4, ecx
	mov	edx, DWORD PTR $T45[ebp+8]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+8, edx
	mov	eax, DWORD PTR $T45[ebp+12]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+12, eax
$LN476@DXW_MainLo:

; 2322 : 							 }
; 2323 : 						 }
; 2324 : 						 if (BKframe > 7 && BAL == TRUE && KnockHIT == FALSE)

	cmp	DWORD PTR ?BKframe@@3HA, 7		; BKframe
	jle	SHORT $LN477@DXW_MainLo
	cmp	DWORD PTR ?BAL@@3HA, 1			; BAL
	jne	SHORT $LN477@DXW_MainLo
	cmp	DWORD PTR ?KnockHIT@@3HA, 0		; KnockHIT
	jne	SHORT $LN477@DXW_MainLo

; 2325 : 						 {
; 2326 : 							 Knock = { bnX - 483 ,bnY - 20,bnX + 40,bnY + 140 };

	mov	eax, DWORD PTR _bnX$[ebp]
	sub	eax, 483				; 000001e3H
	mov	DWORD PTR $T44[ebp], eax
	mov	ecx, DWORD PTR _bnY$[ebp]
	sub	ecx, 20					; 00000014H
	mov	DWORD PTR $T44[ebp+4], ecx
	mov	edx, DWORD PTR _bnX$[ebp]
	add	edx, 40					; 00000028H
	mov	DWORD PTR $T44[ebp+8], edx
	mov	eax, DWORD PTR _bnY$[ebp]
	add	eax, 140				; 0000008cH
	mov	DWORD PTR $T44[ebp+12], eax
	mov	ecx, DWORD PTR $T44[ebp]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A, ecx
	mov	edx, DWORD PTR $T44[ebp+4]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+4, edx
	mov	eax, DWORD PTR $T44[ebp+8]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+8, eax
	mov	ecx, DWORD PTR $T44[ebp+12]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+12, ecx
$LN477@DXW_MainLo:

; 2327 : 						 }
; 2328 : 						 if (BKframe < 8 && BAR == TRUE && KnockHIT == FALSE)

	cmp	DWORD PTR ?BKframe@@3HA, 8		; BKframe
	jge	SHORT $LN478@DXW_MainLo
	cmp	DWORD PTR ?BAR@@3HA, 1			; BAR
	jne	SHORT $LN478@DXW_MainLo
	cmp	DWORD PTR ?KnockHIT@@3HA, 0		; KnockHIT
	jne	SHORT $LN478@DXW_MainLo

; 2329 : 						 {
; 2330 : 							 Knock = { bnX + 130 ,bnY - 20,bnX + 653,bnY + 140 };

	mov	eax, DWORD PTR _bnX$[ebp]
	add	eax, 130				; 00000082H
	mov	DWORD PTR $T43[ebp], eax
	mov	ecx, DWORD PTR _bnY$[ebp]
	sub	ecx, 20					; 00000014H
	mov	DWORD PTR $T43[ebp+4], ecx
	mov	edx, DWORD PTR _bnX$[ebp]
	add	edx, 653				; 0000028dH
	mov	DWORD PTR $T43[ebp+8], edx
	mov	eax, DWORD PTR _bnY$[ebp]
	add	eax, 140				; 0000008cH
	mov	DWORD PTR $T43[ebp+12], eax
	mov	ecx, DWORD PTR $T43[ebp]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A, ecx
	mov	edx, DWORD PTR $T43[ebp+4]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+4, edx
	mov	eax, DWORD PTR $T43[ebp+8]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+8, eax
	mov	ecx, DWORD PTR $T43[ebp+12]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+12, ecx
$LN478@DXW_MainLo:

; 2331 : 						 }
; 2332 : 						 if (BKframe > 12 && BAL == TRUE)

	cmp	DWORD PTR ?BKframe@@3HA, 12		; BKframe, 0000000cH
	jle	SHORT $LN479@DXW_MainLo
	cmp	DWORD PTR ?BAL@@3HA, 1			; BAL
	jne	SHORT $LN479@DXW_MainLo

; 2333 : 						 {
; 2334 : 							 Knock = { 0,0,1,1 };

	mov	DWORD PTR $T42[ebp], 0
	mov	DWORD PTR $T42[ebp+4], 0
	mov	DWORD PTR $T42[ebp+8], 1
	mov	DWORD PTR $T42[ebp+12], 1
	mov	eax, DWORD PTR $T42[ebp]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A, eax
	mov	ecx, DWORD PTR $T42[ebp+4]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+4, ecx
	mov	edx, DWORD PTR $T42[ebp+8]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+8, edx
	mov	eax, DWORD PTR $T42[ebp+12]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+12, eax
$LN479@DXW_MainLo:

; 2335 : 						 }
; 2336 : 						 if (BKframe < 5 && BAR == TRUE)

	cmp	DWORD PTR ?BKframe@@3HA, 5		; BKframe
	jge	SHORT $LN480@DXW_MainLo
	cmp	DWORD PTR ?BAR@@3HA, 1			; BAR
	jne	SHORT $LN480@DXW_MainLo

; 2337 : 						 {
; 2338 : 							Knock = { 0,0,1,1 };

	mov	DWORD PTR $T41[ebp], 0
	mov	DWORD PTR $T41[ebp+4], 0
	mov	DWORD PTR $T41[ebp+8], 1
	mov	DWORD PTR $T41[ebp+12], 1
	mov	eax, DWORD PTR $T41[ebp]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A, eax
	mov	ecx, DWORD PTR $T41[ebp+4]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+4, ecx
	mov	edx, DWORD PTR $T41[ebp+8]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+8, edx
	mov	eax, DWORD PTR $T41[ebp+12]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+12, eax
$LN480@DXW_MainLo:

; 2339 : 						 }
; 2340 : 						 if (IntersectRect(&rcDest, &Knock, &PHIT))

	mov	esi, esp
	push	OFFSET ?PHIT@@3UtagRECT@@A		; PHIT
	push	OFFSET ?Knock@@3UtagRECT@@A		; Knock
	push	OFFSET ?rcDest@@3UtagRECT@@A		; rcDest
	call	DWORD PTR __imp__IntersectRect@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN494@DXW_MainLo

; 2341 : 						 {
; 2342 : 							 if (BAR == TRUE && Knockback == FALSE)

	cmp	DWORD PTR ?BAR@@3HA, 1			; BAR
	jne	$LN482@DXW_MainLo
	cmp	DWORD PTR ?Knockback@@3HA, 0		; Knockback
	jne	$LN482@DXW_MainLo

; 2343 : 							 {
; 2344 : 								 Knockspd = 40;

	mov	DWORD PTR ?Knockspd@@3HA, 40		; Knockspd, 00000028H

; 2345 : 								 Knockback = TRUE;

	mov	DWORD PTR ?Knockback@@3HA, 1		; Knockback

; 2346 : 								 PlayerHP -= 1000;

	mov	eax, DWORD PTR ?PlayerHP@@3HA		; PlayerHP
	sub	eax, 1000				; 000003e8H
	mov	DWORD PTR ?PlayerHP@@3HA, eax		; PlayerHP

; 2347 : 								 KnockHIT = TRUE;

	mov	DWORD PTR ?KnockHIT@@3HA, 1		; KnockHIT

; 2348 : 								 Knock = { 0,0,1,1 };

	mov	DWORD PTR $T40[ebp], 0
	mov	DWORD PTR $T40[ebp+4], 0
	mov	DWORD PTR $T40[ebp+8], 1
	mov	DWORD PTR $T40[ebp+12], 1
	mov	eax, DWORD PTR $T40[ebp]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A, eax
	mov	ecx, DWORD PTR $T40[ebp+4]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+4, ecx
	mov	edx, DWORD PTR $T40[ebp+8]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+8, edx
	mov	eax, DWORD PTR $T40[ebp+12]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+12, eax

; 2349 : 								 if (PHplay == FALSE)

	cmp	DWORD PTR ?PHplay@@3HA, 0		; PHplay
	jne	SHORT $LN484@DXW_MainLo

; 2350 : 								 {
; 2351 : 									 PHplay = TRUE;

	mov	DWORD PTR ?PHplay@@3HA, 1		; PHplay

; 2352 : 									 Timer[25] = 3;

	mov	eax, 4
	imul	ecx, eax, 25
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 3

; 2353 : 									 PHframe = 0;

	mov	DWORD PTR ?PHframe@@3HA, 0		; PHframe
	jmp	SHORT $LN486@DXW_MainLo
$LN484@DXW_MainLo:

; 2354 : 								 }
; 2355 : 								 else if (PHplay == TRUE)

	cmp	DWORD PTR ?PHplay@@3HA, 1		; PHplay
	jne	SHORT $LN486@DXW_MainLo

; 2356 : 								 {
; 2357 : 									 PHplay = TRUE;

	mov	DWORD PTR ?PHplay@@3HA, 1		; PHplay

; 2358 : 									 Timer[25] = 3;

	mov	eax, 4
	imul	ecx, eax, 25
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 3

; 2359 : 									 PHframe = 0;

	mov	DWORD PTR ?PHframe@@3HA, 0		; PHframe
$LN486@DXW_MainLo:

; 2360 : 								 }
; 2361 : 								 if (g_bRush == TRUE)

	cmp	DWORD PTR ?g_bRush@@3HA, 1		; g_bRush
	jne	SHORT $LN487@DXW_MainLo

; 2362 : 								 {
; 2363 : 									 g_bRush = FALSE;

	mov	DWORD PTR ?g_bRush@@3HA, 0		; g_bRush

; 2364 : 									 g_bRushL = FALSE;

	mov	DWORD PTR ?g_bRushL@@3HA, 0		; g_bRushL

; 2365 : 									 g_bRushR = FALSE;

	mov	DWORD PTR ?g_bRushR@@3HA, 0		; g_bRushR

; 2366 : 									 Timer[9] = 20;

	mov	eax, 4
	imul	ecx, eax, 9
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 20	; 00000014H

; 2367 : 									 Timer[8] = 0;

	mov	eax, 4
	shl	eax, 3
	mov	DWORD PTR ?Timer@@3PAHA[eax], 0

; 2368 : 									 Cframe = 0;

	mov	DWORD PTR ?Cframe@@3HA, 0		; Cframe
$LN487@DXW_MainLo:

; 2369 : 								 }
; 2370 : 
; 2371 : 								 if (g_bJump == TRUE)

	cmp	DWORD PTR ?g_bJump@@3HA, 1		; g_bJump
	jne	SHORT $LN488@DXW_MainLo

; 2372 : 								 {
; 2373 : 									 Knockspd = 45;

	mov	DWORD PTR ?Knockspd@@3HA, 45		; Knockspd, 0000002dH
$LN488@DXW_MainLo:

; 2374 : 								 }
; 2375 : 							 }

	jmp	$LN494@DXW_MainLo
$LN482@DXW_MainLo:

; 2376 : 							 else if (BAL == TRUE && Knockback == FALSE)

	cmp	DWORD PTR ?BAL@@3HA, 1			; BAL
	jne	$LN494@DXW_MainLo
	cmp	DWORD PTR ?Knockback@@3HA, 0		; Knockback
	jne	$LN494@DXW_MainLo

; 2377 : 							 {
; 2378 : 								 Knockspd = -40;

	mov	DWORD PTR ?Knockspd@@3HA, -40		; Knockspd, ffffffd8H

; 2379 : 								 Knockback = TRUE;

	mov	DWORD PTR ?Knockback@@3HA, 1		; Knockback

; 2380 : 								 KnockHIT = TRUE;

	mov	DWORD PTR ?KnockHIT@@3HA, 1		; KnockHIT

; 2381 : 								 PlayerHP -= 1000;

	mov	eax, DWORD PTR ?PlayerHP@@3HA		; PlayerHP
	sub	eax, 1000				; 000003e8H
	mov	DWORD PTR ?PlayerHP@@3HA, eax		; PlayerHP

; 2382 : 								 Knock = { 0,0,1,1 };

	mov	DWORD PTR $T39[ebp], 0
	mov	DWORD PTR $T39[ebp+4], 0
	mov	DWORD PTR $T39[ebp+8], 1
	mov	DWORD PTR $T39[ebp+12], 1
	mov	eax, DWORD PTR $T39[ebp]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A, eax
	mov	ecx, DWORD PTR $T39[ebp+4]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+4, ecx
	mov	edx, DWORD PTR $T39[ebp+8]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+8, edx
	mov	eax, DWORD PTR $T39[ebp+12]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+12, eax

; 2383 : 								 if (PHplay == FALSE)

	cmp	DWORD PTR ?PHplay@@3HA, 0		; PHplay
	jne	SHORT $LN490@DXW_MainLo

; 2384 : 								 {
; 2385 : 									 PHplay = TRUE;

	mov	DWORD PTR ?PHplay@@3HA, 1		; PHplay

; 2386 : 									 Timer[25] = 3;

	mov	eax, 4
	imul	ecx, eax, 25
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 3

; 2387 : 									 PHframe = 0;

	mov	DWORD PTR ?PHframe@@3HA, 0		; PHframe
	jmp	SHORT $LN492@DXW_MainLo
$LN490@DXW_MainLo:

; 2388 : 								 }
; 2389 : 								 else if (PHplay == TRUE)

	cmp	DWORD PTR ?PHplay@@3HA, 1		; PHplay
	jne	SHORT $LN492@DXW_MainLo

; 2390 : 								 {
; 2391 : 									 PHplay = TRUE;

	mov	DWORD PTR ?PHplay@@3HA, 1		; PHplay

; 2392 : 									 Timer[25] = 3;

	mov	eax, 4
	imul	ecx, eax, 25
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 3

; 2393 : 									 PHframe = 0;

	mov	DWORD PTR ?PHframe@@3HA, 0		; PHframe
$LN492@DXW_MainLo:

; 2394 : 								 }
; 2395 : 								 if (g_bRush == TRUE)

	cmp	DWORD PTR ?g_bRush@@3HA, 1		; g_bRush
	jne	SHORT $LN493@DXW_MainLo

; 2396 : 								 {
; 2397 : 									 g_bRush = FALSE;

	mov	DWORD PTR ?g_bRush@@3HA, 0		; g_bRush

; 2398 : 									 g_bRushL = FALSE;

	mov	DWORD PTR ?g_bRushL@@3HA, 0		; g_bRushL

; 2399 : 									 g_bRushR = FALSE;

	mov	DWORD PTR ?g_bRushR@@3HA, 0		; g_bRushR

; 2400 : 									 Timer[9] = 20;

	mov	eax, 4
	imul	ecx, eax, 9
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 20	; 00000014H

; 2401 : 									 Timer[8] = 0;

	mov	eax, 4
	shl	eax, 3
	mov	DWORD PTR ?Timer@@3PAHA[eax], 0

; 2402 : 									 Cframe = 0;

	mov	DWORD PTR ?Cframe@@3HA, 0		; Cframe
$LN493@DXW_MainLo:

; 2403 : 								 }
; 2404 : 								 if (g_bJump == TRUE)

	cmp	DWORD PTR ?g_bJump@@3HA, 1		; g_bJump
	jne	SHORT $LN494@DXW_MainLo

; 2405 : 								 {
; 2406 : 									 Knockspd = -45;

	mov	DWORD PTR ?Knockspd@@3HA, -45		; Knockspd, ffffffd3H
$LN494@DXW_MainLo:

; 2407 : 								 }
; 2408 : 							 }
; 2409 : 						 }
; 2410 : 						 if (p2die == FALSE && BossAtt ==FALSE)

	cmp	DWORD PTR ?p2die@@3HA, 0		; p2die
	jne	$LN501@DXW_MainLo
	cmp	DWORD PTR ?BossAtt@@3HA, 0		; BossAtt
	jne	$LN501@DXW_MainLo

; 2411 : 						 {
; 2412 : 							 BOSS = { bnX + 10 ,bnY,bnX + 170,bnY + 148 };

	mov	eax, DWORD PTR _bnX$[ebp]
	add	eax, 10					; 0000000aH
	mov	DWORD PTR $T38[ebp], eax
	mov	ecx, DWORD PTR _bnY$[ebp]
	mov	DWORD PTR $T38[ebp+4], ecx
	mov	edx, DWORD PTR _bnX$[ebp]
	add	edx, 170				; 000000aaH
	mov	DWORD PTR $T38[ebp+8], edx
	mov	eax, DWORD PTR _bnY$[ebp]
	add	eax, 148				; 00000094H
	mov	DWORD PTR $T38[ebp+12], eax
	mov	ecx, DWORD PTR $T38[ebp]
	mov	DWORD PTR ?BOSS@@3UtagRECT@@A, ecx
	mov	edx, DWORD PTR $T38[ebp+4]
	mov	DWORD PTR ?BOSS@@3UtagRECT@@A+4, edx
	mov	eax, DWORD PTR $T38[ebp+8]
	mov	DWORD PTR ?BOSS@@3UtagRECT@@A+8, eax
	mov	ecx, DWORD PTR $T38[ebp+12]
	mov	DWORD PTR ?BOSS@@3UtagRECT@@A+12, ecx

; 2413 : 							 if (Timer[1] >= 8)

	mov	eax, 4
	shl	eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 8
	jl	SHORT $LN496@DXW_MainLo

; 2414 : 							 {
; 2415 : 								 Timer[1] = 0;

	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR ?Timer@@3PAHA[eax], 0

; 2416 : 								 Bframe++;

	mov	eax, DWORD PTR ?Bframe@@3HA		; Bframe
	add	eax, 1
	mov	DWORD PTR ?Bframe@@3HA, eax		; Bframe

; 2417 : 								 if (Bframe >= 7)

	cmp	DWORD PTR ?Bframe@@3HA, 7		; Bframe
	jl	SHORT $LN498@DXW_MainLo

; 2418 : 								 {
; 2419 : 									 Bframe = 0;

	mov	DWORD PTR ?Bframe@@3HA, 0		; Bframe
$LN498@DXW_MainLo:

; 2420 : 								 }
; 2421 : 							 }

	jmp	SHORT $LN497@DXW_MainLo
$LN496@DXW_MainLo:

; 2422 : 							 else { Timer[1]++; }

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR ?Timer@@3PAHA[eax]
	add	ecx, 1
	mov	edx, 4
	shl	edx, 0
	mov	DWORD PTR ?Timer@@3PAHA[edx], ecx
$LN497@DXW_MainLo:

; 2423 : 							 if (g_bBLL == TRUE)

	cmp	DWORD PTR ?g_bBLL@@3HA, 1		; g_bBLL
	jne	SHORT $LN499@DXW_MainLo

; 2424 : 							 {
; 2425 : 								 ::__PutAnimeSprite(g_pDDSTwo, bnX, bnY, 8, Bframe, 174, 148, 0);

	push	0
	push	148					; 00000094H
	push	174					; 000000aeH
	mov	eax, DWORD PTR ?Bframe@@3HA		; Bframe
	push	eax
	push	8
	mov	ecx, DWORD PTR _bnY$[ebp]
	push	ecx
	mov	edx, DWORD PTR _bnX$[ebp]
	push	edx
	mov	eax, DWORD PTR ?g_pDDSTwo@@3PAUIDirectDrawSurface7@@A ; g_pDDSTwo
	push	eax
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	SHORT $LN501@DXW_MainLo
$LN499@DXW_MainLo:

; 2426 : 							 }
; 2427 : 							 else if (g_bBLR == TRUE)

	cmp	DWORD PTR ?g_bBLR@@3HA, 1		; g_bBLR
	jne	SHORT $LN501@DXW_MainLo

; 2428 : 							 {
; 2429 : 								 ::__PutAnimeSprite(g_pDDSTwoR, bnX, bnY, 8, Bframe, 174, 148, 0);

	push	0
	push	148					; 00000094H
	push	174					; 000000aeH
	mov	eax, DWORD PTR ?Bframe@@3HA		; Bframe
	push	eax
	push	8
	mov	ecx, DWORD PTR _bnY$[ebp]
	push	ecx
	mov	edx, DWORD PTR _bnX$[ebp]
	push	edx
	mov	eax, DWORD PTR ?g_pDDSTwoR@@3PAUIDirectDrawSurface7@@A ; g_pDDSTwoR
	push	eax
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN501@DXW_MainLo:

; 2430 : 							 }
; 2431 : 						 }
; 2432 : 						 if (Timer[0] >= 26)

	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 26	; 0000001aH
	jl	SHORT $LN502@DXW_MainLo

; 2433 : 						 {
; 2434 : 							 Timer[0] = 0;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0
$LN502@DXW_MainLo:

; 2435 : 						 }
; 2436 : 						 //Ä³¸¯ÅÍ µ¹Áø ¾Ö´Ï¸ÞÀÌ¼Ç
; 2437 : 						 if (g_bRush == FALSE)

	cmp	DWORD PTR ?g_bRush@@3HA, 0		; g_bRush
	jne	$LN543@DXW_MainLo

; 2438 : 						 {
; 2439 : 							 //½ºÅÄµù
; 2440 : 							 if (g_bLookL == 1 && g_bJump == 0 && g_bLeft == 0 && g_bRight == 0 && g_bAtt == FALSE)

	cmp	DWORD PTR ?g_bLookL@@3HA, 1		; g_bLookL
	jne	SHORT $LN504@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN504@DXW_MainLo
	cmp	DWORD PTR ?g_bLeft@@3HA, 0		; g_bLeft
	jne	SHORT $LN504@DXW_MainLo
	cmp	DWORD PTR ?g_bRight@@3HA, 0		; g_bRight
	jne	SHORT $LN504@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	SHORT $LN504@DXW_MainLo

; 2441 : 							 {
; 2442 : 								 ::__PutAnimeSprite(g_pDDSOne, nX, nY, 9, 0, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	0
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A ; g_pDDSOne
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	SHORT $LN506@DXW_MainLo
$LN504@DXW_MainLo:

; 2443 : 							 }
; 2444 : 							 else if (g_bLookR == 1 && g_bJump == 0 && g_bLeft == 0 && g_bRight == 0 && g_bAtt == FALSE)

	cmp	DWORD PTR ?g_bLookR@@3HA, 1		; g_bLookR
	jne	SHORT $LN506@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN506@DXW_MainLo
	cmp	DWORD PTR ?g_bLeft@@3HA, 0		; g_bLeft
	jne	SHORT $LN506@DXW_MainLo
	cmp	DWORD PTR ?g_bRight@@3HA, 0		; g_bRight
	jne	SHORT $LN506@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	SHORT $LN506@DXW_MainLo

; 2445 : 							 {
; 2446 : 								 ::__PutAnimeSprite(g_pDDSOneR, nX, nY, 9, 8, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	8
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A ; g_pDDSOneR
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN506@DXW_MainLo:

; 2447 : 							 }
; 2448 : 							 //Á¡ÇÁ
; 2449 : 							 if (g_bLookL == 1 && g_bJump == 1 && g_bAtt == FALSE)

	cmp	DWORD PTR ?g_bLookL@@3HA, 1		; g_bLookL
	jne	SHORT $LN507@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 1		; g_bJump
	jne	SHORT $LN507@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	SHORT $LN507@DXW_MainLo

; 2450 : 							 {
; 2451 : 								 ::__PutAnimeSprite(g_pDDSOne, nX, nY, 9, 3, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	3
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A ; g_pDDSOne
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	SHORT $LN509@DXW_MainLo
$LN507@DXW_MainLo:

; 2452 : 							 }
; 2453 : 							 else if (g_bLookR == 1 && g_bJump == 1 && g_bAtt == FALSE)

	cmp	DWORD PTR ?g_bLookR@@3HA, 1		; g_bLookR
	jne	SHORT $LN509@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 1		; g_bJump
	jne	SHORT $LN509@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	SHORT $LN509@DXW_MainLo

; 2454 : 							 {
; 2455 : 								 ::__PutAnimeSprite(g_pDDSOneR, nX, nY, 9, 5, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	5
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A ; g_pDDSOneR
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN509@DXW_MainLo:

; 2456 : 							 }
; 2457 : 							 //¹«ºù
; 2458 : 							 if (g_bLeft == 1 && g_bJump == 0 && Timer[0] < 5 && g_bJump == 0 && g_bAtt == FALSE)

	cmp	DWORD PTR ?g_bLeft@@3HA, 1		; g_bLeft
	jne	SHORT $LN510@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN510@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 5
	jge	SHORT $LN510@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN510@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	SHORT $LN510@DXW_MainLo

; 2459 : 							 {
; 2460 : 								 ::__PutAnimeSprite(g_pDDSOne, nX, nY, 9, 1, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	1
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A ; g_pDDSOne
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	$LN516@DXW_MainLo
$LN510@DXW_MainLo:

; 2461 : 							 }
; 2462 : 							 else if (g_bLeft == 1 && g_bJump == 0 && Timer[0] >= 5 && Timer[0] < 12 && g_bAtt == FALSE)

	cmp	DWORD PTR ?g_bLeft@@3HA, 1		; g_bLeft
	jne	SHORT $LN512@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN512@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 5
	jl	SHORT $LN512@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 12	; 0000000cH
	jge	SHORT $LN512@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	SHORT $LN512@DXW_MainLo

; 2463 : 							 {
; 2464 : 								 ::__PutAnimeSprite(g_pDDSOne, nX, nY, 9, 0, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	0
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A ; g_pDDSOne
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	$LN516@DXW_MainLo
$LN512@DXW_MainLo:

; 2465 : 							 }
; 2466 : 							 else if (g_bLeft == 1 && g_bJump == 0 && Timer[0] >= 12 && Timer[0] < 19 && g_bAtt == FALSE)

	cmp	DWORD PTR ?g_bLeft@@3HA, 1		; g_bLeft
	jne	SHORT $LN514@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN514@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 12	; 0000000cH
	jl	SHORT $LN514@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 19	; 00000013H
	jge	SHORT $LN514@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	SHORT $LN514@DXW_MainLo

; 2467 : 							 {
; 2468 : 								 ::__PutAnimeSprite(g_pDDSOne, nX, nY, 9, 2, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	2
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A ; g_pDDSOne
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	SHORT $LN516@DXW_MainLo
$LN514@DXW_MainLo:

; 2469 : 							 }
; 2470 : 							 else if (g_bLeft == 1 && g_bJump == 0 && Timer[0] >= 19 && g_bAtt == FALSE)

	cmp	DWORD PTR ?g_bLeft@@3HA, 1		; g_bLeft
	jne	SHORT $LN516@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN516@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 19	; 00000013H
	jl	SHORT $LN516@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	SHORT $LN516@DXW_MainLo

; 2471 : 							 {
; 2472 : 								 ::__PutAnimeSprite(g_pDDSOne, nX, nY, 9, 0, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	0
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A ; g_pDDSOne
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN516@DXW_MainLo:

; 2473 : 							 }
; 2474 : 							 if (g_bRight == 1 && g_bJump == 0 && Timer[0] < 5 && g_bAtt == FALSE)

	cmp	DWORD PTR ?g_bRight@@3HA, 1		; g_bRight
	jne	SHORT $LN517@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN517@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 5
	jge	SHORT $LN517@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	SHORT $LN517@DXW_MainLo

; 2475 : 							 {
; 2476 : 								 ::__PutAnimeSprite(g_pDDSOneR, nX, nY, 9, 7, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	7
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A ; g_pDDSOneR
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	$LN523@DXW_MainLo
$LN517@DXW_MainLo:

; 2477 : 							 }
; 2478 : 							 else if (g_bRight == 1 && g_bJump == 0 && Timer[0] >= 5 && Timer[0] < 12 && g_bAtt == FALSE)

	cmp	DWORD PTR ?g_bRight@@3HA, 1		; g_bRight
	jne	SHORT $LN519@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN519@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 5
	jl	SHORT $LN519@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 12	; 0000000cH
	jge	SHORT $LN519@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	SHORT $LN519@DXW_MainLo

; 2479 : 							 {
; 2480 : 								 ::__PutAnimeSprite(g_pDDSOneR, nX, nY, 9, 8, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	8
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A ; g_pDDSOneR
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	$LN523@DXW_MainLo
$LN519@DXW_MainLo:

; 2481 : 							 }
; 2482 : 							 else if (g_bRight == 1 && g_bJump == 0 && Timer[0] >= 12 && Timer[0] < 19 && g_bAtt == FALSE)

	cmp	DWORD PTR ?g_bRight@@3HA, 1		; g_bRight
	jne	SHORT $LN521@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN521@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 12	; 0000000cH
	jl	SHORT $LN521@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 19	; 00000013H
	jge	SHORT $LN521@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	SHORT $LN521@DXW_MainLo

; 2483 : 							 {
; 2484 : 								 ::__PutAnimeSprite(g_pDDSOneR, nX, nY, 9, 6, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	6
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A ; g_pDDSOneR
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	SHORT $LN523@DXW_MainLo
$LN521@DXW_MainLo:

; 2485 : 							 }
; 2486 : 							 else if (g_bRight == 1 && g_bJump == 0 && Timer[0] >= 19 && g_bAtt == FALSE)

	cmp	DWORD PTR ?g_bRight@@3HA, 1		; g_bRight
	jne	SHORT $LN523@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN523@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 19	; 00000013H
	jl	SHORT $LN523@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	SHORT $LN523@DXW_MainLo

; 2487 : 							 {
; 2488 : 								 ::__PutAnimeSprite(g_pDDSOneR, nX, nY, 9, 8, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	8
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A ; g_pDDSOneR
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN523@DXW_MainLo:

; 2489 : 							 }
; 2490 : 							 if (g_bAtt == TRUE && g_bAR == TRUE && Timer[4] < 7)

	cmp	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt
	jne	SHORT $LN524@DXW_MainLo
	cmp	DWORD PTR ?g_bAR@@3HA, 1		; g_bAR
	jne	SHORT $LN524@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 7
	jge	SHORT $LN524@DXW_MainLo

; 2491 : 							 {
; 2492 : 								 ::__PutAnimeSprite(g_pDDSOneR, nX, nY, 9, 1, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	1
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A ; g_pDDSOneR
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	$LN532@DXW_MainLo
$LN524@DXW_MainLo:

; 2493 : 							 }
; 2494 : 							 else if (g_bAtt == TRUE && g_bAR == TRUE && Timer[4] >= 7 && Timer[4] < 14)

	cmp	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt
	jne	SHORT $LN526@DXW_MainLo
	cmp	DWORD PTR ?g_bAR@@3HA, 1		; g_bAR
	jne	SHORT $LN526@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 7
	jl	SHORT $LN526@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 14	; 0000000eH
	jge	SHORT $LN526@DXW_MainLo

; 2495 : 							 {
; 2496 : 								 ::__PutAnimeSprite(g_pDDSOneR, nX, nY, 9, 2, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	2
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A ; g_pDDSOneR
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	$LN532@DXW_MainLo
$LN526@DXW_MainLo:

; 2497 : 							 }
; 2498 : 							 else if (g_bAtt == TRUE && g_bAR == TRUE && Timer[4] >= 14 && Timer[4] < 21)

	cmp	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt
	jne	SHORT $LN528@DXW_MainLo
	cmp	DWORD PTR ?g_bAR@@3HA, 1		; g_bAR
	jne	SHORT $LN528@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 14	; 0000000eH
	jl	SHORT $LN528@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 21	; 00000015H
	jge	SHORT $LN528@DXW_MainLo

; 2499 : 							 {
; 2500 : 								 ::__PutAnimeSprite(g_pDDSOneR, nX, nY, 9, 3, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	3
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A ; g_pDDSOneR
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	$LN532@DXW_MainLo
$LN528@DXW_MainLo:

; 2501 : 							 }
; 2502 : 							 else if (g_bAtt == TRUE && g_bAR == TRUE && Timer[4] >= 21 && Timer[4] < 27)

	cmp	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt
	jne	SHORT $LN530@DXW_MainLo
	cmp	DWORD PTR ?g_bAR@@3HA, 1		; g_bAR
	jne	SHORT $LN530@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 21	; 00000015H
	jl	SHORT $LN530@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 27	; 0000001bH
	jge	SHORT $LN530@DXW_MainLo

; 2503 : 							 {
; 2504 : 								 ::__PutAnimeSprite(g_pDDSOneR, nX, nY, 9, 4, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	4
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A ; g_pDDSOneR
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	SHORT $LN532@DXW_MainLo
$LN530@DXW_MainLo:

; 2505 : 							 }
; 2506 : 							 else if (g_bAtt == TRUE && g_bAR == TRUE && Timer[4] >= 27 && Timer[4] < 39)

	cmp	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt
	jne	SHORT $LN532@DXW_MainLo
	cmp	DWORD PTR ?g_bAR@@3HA, 1		; g_bAR
	jne	SHORT $LN532@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 27	; 0000001bH
	jl	SHORT $LN532@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 39	; 00000027H
	jge	SHORT $LN532@DXW_MainLo

; 2507 : 							 {
; 2508 : 								 ::__PutAnimeSprite(g_pDDSOneR, nX, nY, 9, 0, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	0
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A ; g_pDDSOneR
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN532@DXW_MainLo:

; 2509 : 							 }
; 2510 : 							 if (g_bAtt == TRUE && g_bAL == TRUE && Timer[4] < 7)

	cmp	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt
	jne	SHORT $LN533@DXW_MainLo
	cmp	DWORD PTR ?g_bAL@@3HA, 1		; g_bAL
	jne	SHORT $LN533@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 7
	jge	SHORT $LN533@DXW_MainLo

; 2511 : 							 {
; 2512 : 								 ::__PutAnimeSprite(g_pDDSOne, nX, nY, 9, 4, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	4
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A ; g_pDDSOne
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	$LN541@DXW_MainLo
$LN533@DXW_MainLo:

; 2513 : 							 }
; 2514 : 							 else if (g_bAtt == TRUE && g_bAL == TRUE && Timer[4] >= 7 && Timer[4] < 14)

	cmp	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt
	jne	SHORT $LN535@DXW_MainLo
	cmp	DWORD PTR ?g_bAL@@3HA, 1		; g_bAL
	jne	SHORT $LN535@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 7
	jl	SHORT $LN535@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 14	; 0000000eH
	jge	SHORT $LN535@DXW_MainLo

; 2515 : 							 {
; 2516 : 								 ::__PutAnimeSprite(g_pDDSOne, nX, nY, 9, 5, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	5
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A ; g_pDDSOne
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	$LN541@DXW_MainLo
$LN535@DXW_MainLo:

; 2517 : 							 }
; 2518 : 							 else if (g_bAtt == TRUE && g_bAL == TRUE && Timer[4] >= 14 && Timer[4] < 21)

	cmp	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt
	jne	SHORT $LN537@DXW_MainLo
	cmp	DWORD PTR ?g_bAL@@3HA, 1		; g_bAL
	jne	SHORT $LN537@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 14	; 0000000eH
	jl	SHORT $LN537@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 21	; 00000015H
	jge	SHORT $LN537@DXW_MainLo

; 2519 : 							 {
; 2520 : 								 ::__PutAnimeSprite(g_pDDSOne, nX, nY, 9, 6, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	6
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A ; g_pDDSOne
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	$LN541@DXW_MainLo
$LN537@DXW_MainLo:

; 2521 : 							 }
; 2522 : 							 else if (g_bAtt == TRUE && g_bAL == TRUE && Timer[4] >= 21 && Timer[4] < 27)

	cmp	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt
	jne	SHORT $LN539@DXW_MainLo
	cmp	DWORD PTR ?g_bAL@@3HA, 1		; g_bAL
	jne	SHORT $LN539@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 21	; 00000015H
	jl	SHORT $LN539@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 27	; 0000001bH
	jge	SHORT $LN539@DXW_MainLo

; 2523 : 							 {
; 2524 : 								 ::__PutAnimeSprite(g_pDDSOne, nX, nY, 9, 7, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	7
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A ; g_pDDSOne
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	SHORT $LN541@DXW_MainLo
$LN539@DXW_MainLo:

; 2525 : 							 }
; 2526 : 							 else if (g_bAtt == TRUE && g_bAL == TRUE && Timer[4] >= 27 && Timer[4] < 39)

	cmp	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt
	jne	SHORT $LN541@DXW_MainLo
	cmp	DWORD PTR ?g_bAL@@3HA, 1		; g_bAL
	jne	SHORT $LN541@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 27	; 0000001bH
	jl	SHORT $LN541@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 39	; 00000027H
	jge	SHORT $LN541@DXW_MainLo

; 2527 : 							 {
; 2528 : 								 ::__PutAnimeSprite(g_pDDSOne, nX, nY, 9, 8, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	8
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A ; g_pDDSOne
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN541@DXW_MainLo:

; 2529 : 							 }
; 2530 : 							 if (g_bAtt == TRUE && Timer[4] < 38)

	cmp	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt
	jne	SHORT $LN542@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 38	; 00000026H
	jge	SHORT $LN542@DXW_MainLo

; 2531 : 							 {
; 2532 : 								 Timer[4]++;

	mov	eax, 4
	shl	eax, 2
	mov	ecx, DWORD PTR ?Timer@@3PAHA[eax]
	add	ecx, 1
	mov	edx, 4
	shl	edx, 2
	mov	DWORD PTR ?Timer@@3PAHA[edx], ecx

; 2533 : 							 }
; 2534 : 							 else

	jmp	SHORT $LN543@DXW_MainLo
$LN542@DXW_MainLo:

; 2535 : 							 {
; 2536 : 								 Timer[4] = 0;

	mov	eax, 4
	shl	eax, 2
	mov	DWORD PTR ?Timer@@3PAHA[eax], 0
$LN543@DXW_MainLo:

; 2537 : 							 }
; 2538 : 						 }
; 2539 : 						 if (g_bRushL == TRUE)

	cmp	DWORD PTR ?g_bRushL@@3HA, 1		; g_bRushL
	jne	SHORT $LN544@DXW_MainLo

; 2540 : 						 {
; 2541 : 							 ::__PutAnimeSprite(g_pDDSOne, nX, nY, 9, 7, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	7
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A ; g_pDDSOne
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H

; 2542 : 							 ::__PutAnimeSprite(g_pDDSCHARGE, nX - 170, nY - 100, 8, Cframe, 511, 263, 0);

	push	0
	push	263					; 00000107H
	push	511					; 000001ffH
	mov	eax, DWORD PTR ?Cframe@@3HA		; Cframe
	push	eax
	push	8
	mov	ecx, DWORD PTR _nY$[ebp]
	sub	ecx, 100				; 00000064H
	push	ecx
	mov	edx, DWORD PTR _nX$[ebp]
	sub	edx, 170				; 000000aaH
	push	edx
	mov	eax, DWORD PTR ?g_pDDSCHARGE@@3PAUIDirectDrawSurface7@@A ; g_pDDSCHARGE
	push	eax
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	SHORT $LN546@DXW_MainLo
$LN544@DXW_MainLo:

; 2543 : 						 }
; 2544 : 						 else if (g_bRushR == TRUE)

	cmp	DWORD PTR ?g_bRushR@@3HA, 1		; g_bRushR
	jne	SHORT $LN546@DXW_MainLo

; 2545 : 						 {
; 2546 : 							 ::__PutAnimeSprite(g_pDDSOneR, nX, nY, 9, 1, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	1
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A ; g_pDDSOneR
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H

; 2547 : 							 ::__PutAnimeSprite(g_pDDSCHARGER, nX - 250, nY - 100, 8, Cframe, 511, 263, 0);

	push	0
	push	263					; 00000107H
	push	511					; 000001ffH
	mov	eax, DWORD PTR ?Cframe@@3HA		; Cframe
	push	eax
	push	8
	mov	ecx, DWORD PTR _nY$[ebp]
	sub	ecx, 100				; 00000064H
	push	ecx
	mov	edx, DWORD PTR _nX$[ebp]
	sub	edx, 250				; 000000faH
	push	edx
	mov	eax, DWORD PTR ?g_pDDSCHARGER@@3PAUIDirectDrawSurface7@@A ; g_pDDSCHARGER
	push	eax
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN546@DXW_MainLo:

; 2548 : 						 }
; 2549 : 						 if (g_bAtt == TRUE)

	cmp	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt
	jne	$LN556@DXW_MainLo

; 2550 : 						 {
; 2551 : 							 if (g_bAL == TRUE)

	cmp	DWORD PTR ?g_bAL@@3HA, 1		; g_bAL
	jne	$LN548@DXW_MainLo

; 2552 : 							 {
; 2553 : 								 if (g_bHit == FALSE)

	cmp	DWORD PTR ?g_bHit@@3HA, 0		; g_bHit
	jne	SHORT $LN550@DXW_MainLo

; 2554 : 								 {
; 2555 : 									 HIT = { SnX - 130,SnY + 10,SnX + 90,SnY + 180 };

	mov	eax, DWORD PTR _SnX$[ebp]
	sub	eax, 130				; 00000082H
	mov	DWORD PTR $T37[ebp], eax
	mov	ecx, DWORD PTR _SnY$[ebp]
	add	ecx, 10					; 0000000aH
	mov	DWORD PTR $T37[ebp+4], ecx
	mov	edx, DWORD PTR _SnX$[ebp]
	add	edx, 90					; 0000005aH
	mov	DWORD PTR $T37[ebp+8], edx
	mov	eax, DWORD PTR _SnY$[ebp]
	add	eax, 180				; 000000b4H
	mov	DWORD PTR $T37[ebp+12], eax
	mov	ecx, DWORD PTR $T37[ebp]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A, ecx
	mov	edx, DWORD PTR $T37[ebp+4]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A+4, edx
	mov	eax, DWORD PTR $T37[ebp+8]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A+8, eax
	mov	ecx, DWORD PTR $T37[ebp+12]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A+12, ecx

; 2556 : 								 }
; 2557 : 								 else

	jmp	SHORT $LN551@DXW_MainLo
$LN550@DXW_MainLo:

; 2558 : 								 {
; 2559 : 									 HIT = { 0, 0, 1, 1 };

	mov	DWORD PTR $T36[ebp], 0
	mov	DWORD PTR $T36[ebp+4], 0
	mov	DWORD PTR $T36[ebp+8], 1
	mov	DWORD PTR $T36[ebp+12], 1
	mov	eax, DWORD PTR $T36[ebp]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A, eax
	mov	ecx, DWORD PTR $T36[ebp+4]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A+4, ecx
	mov	edx, DWORD PTR $T36[ebp+8]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A+8, edx
	mov	eax, DWORD PTR $T36[ebp+12]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A+12, eax
$LN551@DXW_MainLo:

; 2560 : 								 }
; 2561 : 								 if (Timer[2] < 2)

	mov	eax, 4
	shl	eax, 1
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 2
	jge	SHORT $LN552@DXW_MainLo

; 2562 : 								 {
; 2563 : 									 Timer[2]++;

	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR ?Timer@@3PAHA[eax]
	add	ecx, 1
	mov	edx, 4
	shl	edx, 1
	mov	DWORD PTR ?Timer@@3PAHA[edx], ecx

; 2564 : 								 }
; 2565 : 								 else

	jmp	SHORT $LN555@DXW_MainLo
$LN552@DXW_MainLo:

; 2566 : 								 {
; 2567 : 									 Timer[2] = 0;

	mov	eax, 4
	shl	eax, 1
	mov	DWORD PTR ?Timer@@3PAHA[eax], 0

; 2568 : 									 if (Aframe < 12)

	cmp	DWORD PTR ?Aframe@@3HA, 12		; Aframe, 0000000cH
	jge	SHORT $LN554@DXW_MainLo

; 2569 : 									 {
; 2570 : 										 Aframe++;

	mov	eax, DWORD PTR ?Aframe@@3HA		; Aframe
	add	eax, 1
	mov	DWORD PTR ?Aframe@@3HA, eax		; Aframe
	jmp	SHORT $LN555@DXW_MainLo
$LN554@DXW_MainLo:

; 2571 : 									 }
; 2572 : 									 else { Aframe == 0; g_bAL = FALSE, g_bAR = FALSE, g_bAtt = FALSE; g_bHit = FALSE; }

	mov	DWORD PTR ?g_bAL@@3HA, 0		; g_bAL
	mov	DWORD PTR ?g_bAR@@3HA, 0		; g_bAR
	mov	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	mov	DWORD PTR ?g_bHit@@3HA, 0		; g_bHit
$LN555@DXW_MainLo:

; 2573 : 								 }
; 2574 : 								 ::__PutAnimeSprite(g_pDDSSkill, SnX - 140, SnY, 13, Aframe, 301, 218, 0);

	push	0
	push	218					; 000000daH
	push	301					; 0000012dH
	mov	eax, DWORD PTR ?Aframe@@3HA		; Aframe
	push	eax
	push	13					; 0000000dH
	mov	ecx, DWORD PTR _SnY$[ebp]
	push	ecx
	mov	edx, DWORD PTR _SnX$[ebp]
	sub	edx, 140				; 0000008cH
	push	edx
	mov	eax, DWORD PTR ?g_pDDSSkill@@3PAUIDirectDrawSurface7@@A ; g_pDDSSkill
	push	eax
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	$LN556@DXW_MainLo
$LN548@DXW_MainLo:

; 2575 : 							 }
; 2576 : 							 else if (g_bAR == TRUE)

	cmp	DWORD PTR ?g_bAR@@3HA, 1		; g_bAR
	jne	$LN556@DXW_MainLo

; 2577 : 							 {
; 2578 : 								 if (g_bHit == FALSE)

	cmp	DWORD PTR ?g_bHit@@3HA, 0		; g_bHit
	jne	SHORT $LN557@DXW_MainLo

; 2579 : 								 {
; 2580 : 									 HIT = { SnX - 10,SnY + 10,SnX + 220,SnY + 180 };

	mov	eax, DWORD PTR _SnX$[ebp]
	sub	eax, 10					; 0000000aH
	mov	DWORD PTR $T35[ebp], eax
	mov	ecx, DWORD PTR _SnY$[ebp]
	add	ecx, 10					; 0000000aH
	mov	DWORD PTR $T35[ebp+4], ecx
	mov	edx, DWORD PTR _SnX$[ebp]
	add	edx, 220				; 000000dcH
	mov	DWORD PTR $T35[ebp+8], edx
	mov	eax, DWORD PTR _SnY$[ebp]
	add	eax, 180				; 000000b4H
	mov	DWORD PTR $T35[ebp+12], eax
	mov	ecx, DWORD PTR $T35[ebp]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A, ecx
	mov	edx, DWORD PTR $T35[ebp+4]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A+4, edx
	mov	eax, DWORD PTR $T35[ebp+8]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A+8, eax
	mov	ecx, DWORD PTR $T35[ebp+12]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A+12, ecx

; 2581 : 								 }
; 2582 : 								 else

	jmp	SHORT $LN558@DXW_MainLo
$LN557@DXW_MainLo:

; 2583 : 								 {
; 2584 : 									 HIT = { 0, 0, 1, 1 };

	mov	DWORD PTR $T34[ebp], 0
	mov	DWORD PTR $T34[ebp+4], 0
	mov	DWORD PTR $T34[ebp+8], 1
	mov	DWORD PTR $T34[ebp+12], 1
	mov	eax, DWORD PTR $T34[ebp]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A, eax
	mov	ecx, DWORD PTR $T34[ebp+4]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A+4, ecx
	mov	edx, DWORD PTR $T34[ebp+8]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A+8, edx
	mov	eax, DWORD PTR $T34[ebp+12]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A+12, eax
$LN558@DXW_MainLo:

; 2585 : 								 }
; 2586 : 								 if (Timer[2] < 2)

	mov	eax, 4
	shl	eax, 1
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 2
	jge	SHORT $LN559@DXW_MainLo

; 2587 : 								 {
; 2588 : 									 Timer[2]++;

	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR ?Timer@@3PAHA[eax]
	add	ecx, 1
	mov	edx, 4
	shl	edx, 1
	mov	DWORD PTR ?Timer@@3PAHA[edx], ecx

; 2589 : 								 }
; 2590 : 								 else

	jmp	SHORT $LN562@DXW_MainLo
$LN559@DXW_MainLo:

; 2591 : 								 {
; 2592 : 									 Timer[2] = 0;

	mov	eax, 4
	shl	eax, 1
	mov	DWORD PTR ?Timer@@3PAHA[eax], 0

; 2593 : 									 if (Aframe > 0)

	cmp	DWORD PTR ?Aframe@@3HA, 0		; Aframe
	jle	SHORT $LN561@DXW_MainLo

; 2594 : 									 {
; 2595 : 										 Aframe--;

	mov	eax, DWORD PTR ?Aframe@@3HA		; Aframe
	sub	eax, 1
	mov	DWORD PTR ?Aframe@@3HA, eax		; Aframe
	jmp	SHORT $LN562@DXW_MainLo
$LN561@DXW_MainLo:

; 2596 : 									 }
; 2597 : 									 else { Aframe == 0; g_bAL = FALSE, g_bAR = FALSE, g_bAtt = FALSE; g_bHit = FALSE; }

	mov	DWORD PTR ?g_bAL@@3HA, 0		; g_bAL
	mov	DWORD PTR ?g_bAR@@3HA, 0		; g_bAR
	mov	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	mov	DWORD PTR ?g_bHit@@3HA, 0		; g_bHit
$LN562@DXW_MainLo:

; 2598 : 								 }
; 2599 : 								 ::__PutAnimeSprite(g_pDDSSkillR, SnX - 70, SnY, 13, Aframe, 301, 218, 0);

	push	0
	push	218					; 000000daH
	push	301					; 0000012dH
	mov	eax, DWORD PTR ?Aframe@@3HA		; Aframe
	push	eax
	push	13					; 0000000dH
	mov	ecx, DWORD PTR _SnY$[ebp]
	push	ecx
	mov	edx, DWORD PTR _SnX$[ebp]
	sub	edx, 70					; 00000046H
	push	edx
	mov	eax, DWORD PTR ?g_pDDSSkillR@@3PAUIDirectDrawSurface7@@A ; g_pDDSSkillR
	push	eax
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN556@DXW_MainLo:

; 2600 : 							 }
; 2601 : 						 }
; 2602 : 						 if (bossimmu == FALSE && g_bHit == FALSE)

	cmp	DWORD PTR ?bossimmu@@3HA, 0		; bossimmu
	jne	$LN567@DXW_MainLo
	cmp	DWORD PTR ?g_bHit@@3HA, 0		; g_bHit
	jne	$LN567@DXW_MainLo

; 2603 : 						 {
; 2604 : 							 if (IntersectRect(&rcDest, &BOSS, &HIT))

	mov	esi, esp
	push	OFFSET ?HIT@@3UtagRECT@@A		; HIT
	push	OFFSET ?BOSS@@3UtagRECT@@A		; BOSS
	push	OFFSET ?rcDest@@3UtagRECT@@A		; rcDest
	call	DWORD PTR __imp__IntersectRect@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN567@DXW_MainLo

; 2605 : 							 {
; 2606 : 								 P2HP -= 75;

	mov	eax, DWORD PTR ?P2HP@@3HA		; P2HP
	sub	eax, 75					; 0000004bH
	mov	DWORD PTR ?P2HP@@3HA, eax		; P2HP

; 2607 : 								 bossimmu = TRUE;

	mov	DWORD PTR ?bossimmu@@3HA, 1		; bossimmu

; 2608 : 								 Timer[5] = 20;

	mov	eax, 4
	imul	ecx, eax, 5
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 20	; 00000014H

; 2609 : 								 g_bHit = TRUE;

	mov	DWORD PTR ?g_bHit@@3HA, 1		; g_bHit

; 2610 : 								 if (BHMPlay == FALSE)

	cmp	DWORD PTR ?BHMPlay@@3HA, 0		; BHMPlay
	jne	SHORT $LN565@DXW_MainLo

; 2611 : 								 {
; 2612 : 									 BHMPlay = TRUE;

	mov	DWORD PTR ?BHMPlay@@3HA, 1		; BHMPlay

; 2613 : 									 BHplay[0] = TRUE;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?BHplay@@3PAHA[ecx], 1

; 2614 : 									 Timer[24] = 2;

	mov	eax, 4
	imul	ecx, eax, 24
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 2
	jmp	$LN567@DXW_MainLo
$LN565@DXW_MainLo:

; 2615 : 								 }
; 2616 : 								 else if (BHMPlay == TRUE)

	cmp	DWORD PTR ?BHMPlay@@3HA, 1		; BHMPlay
	jne	$LN567@DXW_MainLo

; 2617 : 								 {
; 2618 : 									 BHplay[0] = TRUE;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?BHplay@@3PAHA[ecx], 1

; 2619 : 									 BHplay[1] = FALSE;

	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR ?BHplay@@3PAHA[eax], 0

; 2620 : 									 BHplay[2] = FALSE;

	mov	eax, 4
	shl	eax, 1
	mov	DWORD PTR ?BHplay@@3PAHA[eax], 0

; 2621 : 									 BHframe[0] = 0;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?BHframe@@3PAHA[ecx], 0

; 2622 : 									 BHframe[1] = 0;

	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR ?BHframe@@3PAHA[eax], 0

; 2623 : 									 BHframe[2] = 0;

	mov	eax, 4
	shl	eax, 1
	mov	DWORD PTR ?BHframe@@3PAHA[eax], 0

; 2624 : 									 Timer[24] = 2;

	mov	eax, 4
	imul	ecx, eax, 24
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 2

; 2625 : 									 Timer[26] = 2;

	mov	eax, 4
	imul	ecx, eax, 26
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 2

; 2626 : 									 Timer[27] = 2;

	mov	eax, 4
	imul	ecx, eax, 27
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 2
$LN567@DXW_MainLo:

; 2627 : 								 }
; 2628 : 							 }
; 2629 : 						 }
; 2630 : 						 if (g_bRight == 1 || g_bLeft == 1 && g_bJump == 0)

	cmp	DWORD PTR ?g_bRight@@3HA, 1		; g_bRight
	je	SHORT $LN570@DXW_MainLo
	cmp	DWORD PTR ?g_bLeft@@3HA, 1		; g_bLeft
	jne	SHORT $LN568@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN568@DXW_MainLo
$LN570@DXW_MainLo:

; 2631 : 						 {
; 2632 : 							 Timer[0] += 1;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	add	edx, 1
	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx

; 2633 : 						 }
; 2634 : 						 else

	jmp	SHORT $LN569@DXW_MainLo
$LN568@DXW_MainLo:

; 2635 : 						 {
; 2636 : 							 Timer[0] = 0;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0
$LN569@DXW_MainLo:

; 2637 : 						 }
; 2638 : 						 if (p2die == 0)

	cmp	DWORD PTR ?p2die@@3HA, 0		; p2die
	jne	$LN574@DXW_MainLo

; 2639 : 						 {
; 2640 : 							 if (Timer[7] == 0)

	mov	eax, 4
	imul	ecx, eax, 7
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jne	$LN574@DXW_MainLo

; 2641 : 							 {
; 2642 : 								 if (g_bBAT == TRUE)

	cmp	DWORD PTR ?g_bBAT@@3HA, 1		; g_bBAT
	jne	$LN573@DXW_MainLo

; 2643 : 								 {
; 2644 : 									 if (BAframe < 10 && Timer[6] < 3)

	cmp	DWORD PTR ?BAframe@@3HA, 10		; BAframe, 0000000aH
	jge	$LN575@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 6
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 3
	jge	$LN575@DXW_MainLo

; 2645 : 									 {
; 2646 : 										 BAHIT[0] = { 35,200,115,700 };

	mov	DWORD PTR $T33[ebp], 35			; 00000023H
	mov	DWORD PTR $T33[ebp+4], 200		; 000000c8H
	mov	DWORD PTR $T33[ebp+8], 115		; 00000073H
	mov	DWORD PTR $T33[ebp+12], 700		; 000002bcH
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 0
	add	ecx, OFFSET ?BAHIT@@3PAUtagRECT@@A	; BAHIT
	mov	edx, DWORD PTR $T33[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T33[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T33[ebp+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR $T33[ebp+12]
	mov	DWORD PTR [ecx+12], eax

; 2647 : 										 BAHIT[1] = { 255,200,335,700 };

	mov	DWORD PTR $T32[ebp], 255		; 000000ffH
	mov	DWORD PTR $T32[ebp+4], 200		; 000000c8H
	mov	DWORD PTR $T32[ebp+8], 335		; 0000014fH
	mov	DWORD PTR $T32[ebp+12], 700		; 000002bcH
	mov	eax, 16					; 00000010H
	shl	eax, 0
	add	eax, OFFSET ?BAHIT@@3PAUtagRECT@@A	; BAHIT
	mov	ecx, DWORD PTR $T32[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T32[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR $T32[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR $T32[ebp+12]
	mov	DWORD PTR [eax+12], edx

; 2648 : 										 BAHIT[2] = { 475,200,555,700 };

	mov	DWORD PTR $T31[ebp], 475		; 000001dbH
	mov	DWORD PTR $T31[ebp+4], 200		; 000000c8H
	mov	DWORD PTR $T31[ebp+8], 555		; 0000022bH
	mov	DWORD PTR $T31[ebp+12], 700		; 000002bcH
	mov	eax, 16					; 00000010H
	shl	eax, 1
	add	eax, OFFSET ?BAHIT@@3PAUtagRECT@@A	; BAHIT
	mov	ecx, DWORD PTR $T31[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T31[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR $T31[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR $T31[ebp+12]
	mov	DWORD PTR [eax+12], edx

; 2649 : 										 BAHIT[3] = { 695,200,775,700 };

	mov	DWORD PTR $T30[ebp], 695		; 000002b7H
	mov	DWORD PTR $T30[ebp+4], 200		; 000000c8H
	mov	DWORD PTR $T30[ebp+8], 775		; 00000307H
	mov	DWORD PTR $T30[ebp+12], 700		; 000002bcH
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 3
	add	ecx, OFFSET ?BAHIT@@3PAUtagRECT@@A	; BAHIT
	mov	edx, DWORD PTR $T30[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T30[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T30[ebp+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR $T30[ebp+12]
	mov	DWORD PTR [ecx+12], eax

; 2650 : 										 BAHIT[4] = { 915,200,995,700 };

	mov	DWORD PTR $T29[ebp], 915		; 00000393H
	mov	DWORD PTR $T29[ebp+4], 200		; 000000c8H
	mov	DWORD PTR $T29[ebp+8], 995		; 000003e3H
	mov	DWORD PTR $T29[ebp+12], 700		; 000002bcH
	mov	eax, 16					; 00000010H
	shl	eax, 2
	add	eax, OFFSET ?BAHIT@@3PAUtagRECT@@A	; BAHIT
	mov	ecx, DWORD PTR $T29[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T29[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR $T29[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR $T29[ebp+12]
	mov	DWORD PTR [eax+12], edx

; 2651 : 										 Timer[6]++;

	mov	eax, 4
	imul	ecx, eax, 6
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	add	edx, 1
	mov	eax, 4
	imul	ecx, eax, 6
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
	jmp	SHORT $LN577@DXW_MainLo
$LN575@DXW_MainLo:

; 2652 : 									 }
; 2653 : 									 else if (BAframe < 10 && Timer[6] >= 3)

	cmp	DWORD PTR ?BAframe@@3HA, 10		; BAframe, 0000000aH
	jge	SHORT $LN577@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 6
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 3
	jl	SHORT $LN577@DXW_MainLo

; 2654 : 									 {
; 2655 : 										 BAframe++;

	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	add	eax, 1
	mov	DWORD PTR ?BAframe@@3HA, eax		; BAframe

; 2656 : 										 Timer[6] = 0;

	mov	eax, 4
	imul	ecx, eax, 6
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0
$LN577@DXW_MainLo:

; 2657 : 									 }
; 2658 : 									 if (BAframe >= 13)

	cmp	DWORD PTR ?BAframe@@3HA, 13		; BAframe, 0000000dH
	jl	$LN591@DXW_MainLo

; 2659 : 									 {
; 2660 : 										 int i = 0;

	mov	DWORD PTR _i$78[ebp], 0

; 2661 : 										 for (i = 0; i < 5; i++)

	mov	DWORD PTR _i$78[ebp], 0
	jmp	SHORT $LN15@DXW_MainLo
$LN13@DXW_MainLo:
	mov	eax, DWORD PTR _i$78[ebp]
	add	eax, 1
	mov	DWORD PTR _i$78[ebp], eax
$LN15@DXW_MainLo:
	cmp	DWORD PTR _i$78[ebp], 5
	jge	$LN14@DXW_MainLo

; 2662 : 										 {
; 2663 : 											 if (RandNum[i] == FALSE)

	mov	eax, DWORD PTR _i$78[ebp]
	cmp	DWORD PTR ?RandNum@@3PAHA[eax*4], 0
	jne	$LN586@DXW_MainLo

; 2664 : 											 {
; 2665 : 												 if (IntersectRect(&rcDest, &BAHIT[i], &PHIT))

	mov	esi, esp
	push	OFFSET ?PHIT@@3UtagRECT@@A		; PHIT
	mov	eax, DWORD PTR _i$78[ebp]
	shl	eax, 4
	add	eax, OFFSET ?BAHIT@@3PAUtagRECT@@A	; BAHIT
	push	eax
	push	OFFSET ?rcDest@@3UtagRECT@@A		; rcDest
	call	DWORD PTR __imp__IntersectRect@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN586@DXW_MainLo

; 2666 : 												 {
; 2667 : 													 if (Mirror == FALSE)

	cmp	DWORD PTR ?Mirror@@3HA, 0		; Mirror
	jne	$LN581@DXW_MainLo

; 2668 : 													 {
; 2669 : 														 PlayerHP -= 500;

	mov	eax, DWORD PTR ?PlayerHP@@3HA		; PlayerHP
	sub	eax, 500				; 000001f4H
	mov	DWORD PTR ?PlayerHP@@3HA, eax		; PlayerHP

; 2670 : 														 BAHIT[i] = { 0,0,1,1 };

	mov	DWORD PTR $T28[ebp], 0
	mov	DWORD PTR $T28[ebp+4], 0
	mov	DWORD PTR $T28[ebp+8], 1
	mov	DWORD PTR $T28[ebp+12], 1
	mov	eax, DWORD PTR _i$78[ebp]
	shl	eax, 4
	add	eax, OFFSET ?BAHIT@@3PAUtagRECT@@A	; BAHIT
	mov	ecx, DWORD PTR $T28[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T28[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR $T28[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR $T28[ebp+12]
	mov	DWORD PTR [eax+12], edx

; 2671 : 														 if (PHplay == FALSE)

	cmp	DWORD PTR ?PHplay@@3HA, 0		; PHplay
	jne	SHORT $LN583@DXW_MainLo

; 2672 : 														 {
; 2673 : 															 PHplay = TRUE;

	mov	DWORD PTR ?PHplay@@3HA, 1		; PHplay

; 2674 : 															 Timer[25] = 3;

	mov	eax, 4
	imul	ecx, eax, 25
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 3

; 2675 : 															 PHframe = 0;

	mov	DWORD PTR ?PHframe@@3HA, 0		; PHframe
	jmp	SHORT $LN585@DXW_MainLo
$LN583@DXW_MainLo:

; 2676 : 														 }
; 2677 : 														 else if (PHplay == TRUE)

	cmp	DWORD PTR ?PHplay@@3HA, 1		; PHplay
	jne	SHORT $LN585@DXW_MainLo

; 2678 : 														 {
; 2679 : 															 PHplay = TRUE;

	mov	DWORD PTR ?PHplay@@3HA, 1		; PHplay

; 2680 : 															 Timer[25] = 3;

	mov	eax, 4
	imul	ecx, eax, 25
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 3

; 2681 : 															 PHframe = 0;

	mov	DWORD PTR ?PHframe@@3HA, 0		; PHframe
$LN585@DXW_MainLo:

; 2682 : 														 }
; 2683 : 													 }

	jmp	SHORT $LN586@DXW_MainLo
$LN581@DXW_MainLo:

; 2684 : 													 else if (Mirror == TRUE)

	cmp	DWORD PTR ?Mirror@@3HA, 1		; Mirror
	jne	SHORT $LN586@DXW_MainLo

; 2685 : 													 {
; 2686 : 														 isSafe = TRUE;

	mov	DWORD PTR ?isSafe@@3HA, 1		; isSafe
$LN586@DXW_MainLo:

; 2687 : 													 }
; 2688 : 												 }
; 2689 : 											 }
; 2690 : 										 }

	jmp	$LN13@DXW_MainLo
$LN14@DXW_MainLo:

; 2691 : 									 if (Mirror == TRUE && isSafe == FALSE)

	cmp	DWORD PTR ?Mirror@@3HA, 1		; Mirror
	jne	$LN591@DXW_MainLo
	cmp	DWORD PTR ?isSafe@@3HA, 0		; isSafe
	jne	$LN591@DXW_MainLo

; 2692 : 									 {
; 2693 : 										 if (Pimmune == 0)

	cmp	DWORD PTR ?Pimmune@@3HA, 0		; Pimmune
	jne	SHORT $LN591@DXW_MainLo

; 2694 : 										 {
; 2695 : 											 PlayerHP -= 1000;

	mov	eax, DWORD PTR ?PlayerHP@@3HA		; PlayerHP
	sub	eax, 1000				; 000003e8H
	mov	DWORD PTR ?PlayerHP@@3HA, eax		; PlayerHP

; 2696 : 											 Pimmune = 1;

	mov	DWORD PTR ?Pimmune@@3HA, 1		; Pimmune

; 2697 : 											 if (PHplay == FALSE)

	cmp	DWORD PTR ?PHplay@@3HA, 0		; PHplay
	jne	SHORT $LN589@DXW_MainLo

; 2698 : 											 {
; 2699 : 												 PHplay = TRUE;

	mov	DWORD PTR ?PHplay@@3HA, 1		; PHplay

; 2700 : 												 Timer[25] = 3;

	mov	eax, 4
	imul	ecx, eax, 25
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 3

; 2701 : 												 PHframe = 0;

	mov	DWORD PTR ?PHframe@@3HA, 0		; PHframe
	jmp	SHORT $LN591@DXW_MainLo
$LN589@DXW_MainLo:

; 2702 : 											 }
; 2703 : 											 else if (PHplay == TRUE)

	cmp	DWORD PTR ?PHplay@@3HA, 1		; PHplay
	jne	SHORT $LN591@DXW_MainLo

; 2704 : 											 {
; 2705 : 												 PHplay = TRUE;

	mov	DWORD PTR ?PHplay@@3HA, 1		; PHplay

; 2706 : 												 Timer[25] = 3;

	mov	eax, 4
	imul	ecx, eax, 25
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 3

; 2707 : 												 PHframe = 0;

	mov	DWORD PTR ?PHframe@@3HA, 0		; PHframe
$LN591@DXW_MainLo:

; 2708 : 											 }
; 2709 : 										 }
; 2710 : 									 }
; 2711 : 									 }
; 2712 : 									 if (BAframe >= 10 && Timer[6] < 2 && BAframe < 19)

	cmp	DWORD PTR ?BAframe@@3HA, 10		; BAframe, 0000000aH
	jl	SHORT $LN592@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 6
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 2
	jge	SHORT $LN592@DXW_MainLo
	cmp	DWORD PTR ?BAframe@@3HA, 19		; BAframe, 00000013H
	jge	SHORT $LN592@DXW_MainLo

; 2713 : 									 {
; 2714 : 										 Timer[6]++;

	mov	eax, 4
	imul	ecx, eax, 6
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	add	edx, 1
	mov	eax, 4
	imul	ecx, eax, 6
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
	jmp	SHORT $LN594@DXW_MainLo
$LN592@DXW_MainLo:

; 2715 : 									 }
; 2716 : 									 else if (BAframe >= 10 && Timer[6] >= 2 && BAframe < 19)

	cmp	DWORD PTR ?BAframe@@3HA, 10		; BAframe, 0000000aH
	jl	SHORT $LN594@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 6
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 2
	jl	SHORT $LN594@DXW_MainLo
	cmp	DWORD PTR ?BAframe@@3HA, 19		; BAframe, 00000013H
	jge	SHORT $LN594@DXW_MainLo

; 2717 : 									 {
; 2718 : 										 BAframe++;

	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	add	eax, 1
	mov	DWORD PTR ?BAframe@@3HA, eax		; BAframe

; 2719 : 										 Timer[6] = 0;

	mov	eax, 4
	imul	ecx, eax, 6
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0
$LN594@DXW_MainLo:

; 2720 : 									 }
; 2721 : 									 switch (Randpat)

	mov	eax, DWORD PTR ?Randpat@@3HA		; Randpat
	mov	DWORD PTR tv3444[ebp], eax
	cmp	DWORD PTR tv3444[ebp], 0
	je	SHORT $LN595@DXW_MainLo
	cmp	DWORD PTR tv3444[ebp], 1
	je	$LN596@DXW_MainLo
	cmp	DWORD PTR tv3444[ebp], 2
	je	$LN597@DXW_MainLo
	jmp	$LN16@DXW_MainLo
$LN595@DXW_MainLo:

; 2722 : 									 {
; 2723 : 									 case 0:
; 2724 : 										 ::__PutAnimeSprite(g_BossAtt, -170, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	-170					; ffffff56H
	mov	ecx, DWORD PTR ?g_BossAtt@@3PAUIDirectDrawSurface7@@A ; g_BossAtt
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H

; 2725 : 										 ::__PutAnimeSprite(g_BossAtt, 270, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	270					; 0000010eH
	mov	ecx, DWORD PTR ?g_BossAtt@@3PAUIDirectDrawSurface7@@A ; g_BossAtt
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H

; 2726 : 										 ::__PutAnimeSprite(g_BossAtt, 710, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	710					; 000002c6H
	mov	ecx, DWORD PTR ?g_BossAtt@@3PAUIDirectDrawSurface7@@A ; g_BossAtt
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H

; 2727 : 										 break;

	jmp	$LN16@DXW_MainLo
$LN596@DXW_MainLo:

; 2728 : 									 case 1:
; 2729 : 										 ::__PutAnimeSprite(g_BossAtt, 50, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	50					; 00000032H
	mov	ecx, DWORD PTR ?g_BossAtt@@3PAUIDirectDrawSurface7@@A ; g_BossAtt
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H

; 2730 : 										 ::__PutAnimeSprite(g_BossAtt, 490, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	490					; 000001eaH
	mov	ecx, DWORD PTR ?g_BossAtt@@3PAUIDirectDrawSurface7@@A ; g_BossAtt
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H

; 2731 : 										 break;

	jmp	$LN16@DXW_MainLo
$LN597@DXW_MainLo:

; 2732 : 									 case 2:
; 2733 : 										 if (RandNum[0] == TRUE)

	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?RandNum@@3PAHA[ecx], 1
	jne	SHORT $LN598@DXW_MainLo

; 2734 : 										 {
; 2735 : 											 ::__PutAnimeSprite(g_BossAtt2, -170, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	-170					; ffffff56H
	mov	ecx, DWORD PTR ?g_BossAtt2@@3PAUIDirectDrawSurface7@@A ; g_BossAtt2
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H

; 2736 : 										 }
; 2737 : 										 else

	jmp	SHORT $LN599@DXW_MainLo
$LN598@DXW_MainLo:

; 2738 : 										 {
; 2739 : 											 ::__PutAnimeSprite(g_BossAtt, -170, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	-170					; ffffff56H
	mov	ecx, DWORD PTR ?g_BossAtt@@3PAUIDirectDrawSurface7@@A ; g_BossAtt
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN599@DXW_MainLo:

; 2740 : 										 }
; 2741 : 										 if (RandNum[1] == TRUE)

	mov	eax, 4
	shl	eax, 0
	cmp	DWORD PTR ?RandNum@@3PAHA[eax], 1
	jne	SHORT $LN600@DXW_MainLo

; 2742 : 										 {
; 2743 : 											 ::__PutAnimeSprite(g_BossAtt2, 50, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	50					; 00000032H
	mov	ecx, DWORD PTR ?g_BossAtt2@@3PAUIDirectDrawSurface7@@A ; g_BossAtt2
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H

; 2744 : 										 }
; 2745 : 										 else

	jmp	SHORT $LN601@DXW_MainLo
$LN600@DXW_MainLo:

; 2746 : 										 {
; 2747 : 											 ::__PutAnimeSprite(g_BossAtt, 50, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	50					; 00000032H
	mov	ecx, DWORD PTR ?g_BossAtt@@3PAUIDirectDrawSurface7@@A ; g_BossAtt
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN601@DXW_MainLo:

; 2748 : 										 }
; 2749 : 										 if (RandNum[2] == TRUE)

	mov	eax, 4
	shl	eax, 1
	cmp	DWORD PTR ?RandNum@@3PAHA[eax], 1
	jne	SHORT $LN602@DXW_MainLo

; 2750 : 										 {
; 2751 : 											 ::__PutAnimeSprite(g_BossAtt2, 270, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	270					; 0000010eH
	mov	ecx, DWORD PTR ?g_BossAtt2@@3PAUIDirectDrawSurface7@@A ; g_BossAtt2
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H

; 2752 : 										 }
; 2753 : 										 else

	jmp	SHORT $LN603@DXW_MainLo
$LN602@DXW_MainLo:

; 2754 : 										 {
; 2755 : 											 ::__PutAnimeSprite(g_BossAtt, 270, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	270					; 0000010eH
	mov	ecx, DWORD PTR ?g_BossAtt@@3PAUIDirectDrawSurface7@@A ; g_BossAtt
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN603@DXW_MainLo:

; 2756 : 										 }
; 2757 : 										 if (RandNum[3] == TRUE)

	mov	eax, 4
	imul	ecx, eax, 3
	cmp	DWORD PTR ?RandNum@@3PAHA[ecx], 1
	jne	SHORT $LN604@DXW_MainLo

; 2758 : 										 {
; 2759 : 											 ::__PutAnimeSprite(g_BossAtt2, 490, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	490					; 000001eaH
	mov	ecx, DWORD PTR ?g_BossAtt2@@3PAUIDirectDrawSurface7@@A ; g_BossAtt2
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H

; 2760 : 										 }
; 2761 : 										 else

	jmp	SHORT $LN605@DXW_MainLo
$LN604@DXW_MainLo:

; 2762 : 										 {
; 2763 : 											 ::__PutAnimeSprite(g_BossAtt, 490, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	490					; 000001eaH
	mov	ecx, DWORD PTR ?g_BossAtt@@3PAUIDirectDrawSurface7@@A ; g_BossAtt
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN605@DXW_MainLo:

; 2764 : 										 }
; 2765 : 										 if (RandNum[4] == TRUE)

	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?RandNum@@3PAHA[eax], 1
	jne	SHORT $LN606@DXW_MainLo

; 2766 : 										 {
; 2767 : 											 ::__PutAnimeSprite(g_BossAtt2, 710, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	710					; 000002c6H
	mov	ecx, DWORD PTR ?g_BossAtt2@@3PAUIDirectDrawSurface7@@A ; g_BossAtt2
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H

; 2768 : 										 }
; 2769 : 										 else

	jmp	SHORT $LN607@DXW_MainLo
$LN606@DXW_MainLo:

; 2770 : 										 {
; 2771 : 											 ::__PutAnimeSprite(g_BossAtt, 710, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	710					; 000002c6H
	mov	ecx, DWORD PTR ?g_BossAtt@@3PAUIDirectDrawSurface7@@A ; g_BossAtt
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN607@DXW_MainLo:
$LN16@DXW_MainLo:

; 2772 : 										 }
; 2773 : 										 break;
; 2774 : 									 }
; 2775 : 									 if (BAframe >= 19)

	cmp	DWORD PTR ?BAframe@@3HA, 19		; BAframe, 00000013H
	jl	$LN610@DXW_MainLo

; 2776 : 									 {
; 2777 : 										 if (Timer[6] > 2)

	mov	eax, 4
	imul	ecx, eax, 6
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 2
	jle	$LN609@DXW_MainLo

; 2778 : 										 {
; 2779 : 											 BAframe = 0;

	mov	DWORD PTR ?BAframe@@3HA, 0		; BAframe

; 2780 : 											 Randpat2 = Randpat;

	mov	eax, DWORD PTR ?Randpat@@3HA		; Randpat
	mov	DWORD PTR ?Randpat2@@3HA, eax		; Randpat2

; 2781 : 											 g_bBAT = FALSE;

	mov	DWORD PTR ?g_bBAT@@3HA, 0		; g_bBAT

; 2782 : 											 Timer[7] = 60;

	mov	eax, 4
	imul	ecx, eax, 7
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 60	; 0000003cH

; 2783 : 											 if (P2HP < 2500)

	cmp	DWORD PTR ?P2HP@@3HA, 2500		; P2HP, 000009c4H
	jge	SHORT $LN611@DXW_MainLo

; 2784 : 											 {
; 2785 : 												 Timer[7] -= 55;

	mov	eax, 4
	imul	ecx, eax, 7
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 55					; 00000037H
	mov	eax, 4
	imul	ecx, eax, 7
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
$LN611@DXW_MainLo:

; 2786 : 											 }
; 2787 : 											 Maximum = 0;

	mov	DWORD PTR ?Maximum@@3HA, 0		; Maximum

; 2788 : 											 RandNum[0, 1, 2, 3, 4] = { 0 };

	mov	eax, 4
	shl	eax, 2
	mov	DWORD PTR ?RandNum@@3PAHA[eax], 0

; 2789 : 											 isSafe = FALSE;

	mov	DWORD PTR ?isSafe@@3HA, 0		; isSafe

; 2790 : 											 Pimmune = 0;

	mov	DWORD PTR ?Pimmune@@3HA, 0		; Pimmune

; 2791 : 											 if (g_bCast == FALSE && Timer[15] == 0)

	cmp	DWORD PTR ?g_bCast@@3HA, 0		; g_bCast
	jne	SHORT $LN612@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 15
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jne	SHORT $LN612@DXW_MainLo

; 2792 : 											 {
; 2793 : 												 g_bCast = TRUE;

	mov	DWORD PTR ?g_bCast@@3HA, 1		; g_bCast

; 2794 : 												 Mirror = TRUE;

	mov	DWORD PTR ?Mirror@@3HA, 1		; Mirror

; 2795 : 												 Timer[13] = 5;

	mov	eax, 4
	imul	ecx, eax, 13
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 5

; 2796 : 												 Timer[14] = 500;

	mov	eax, 4
	imul	ecx, eax, 14
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 500	; 000001f4H
$LN612@DXW_MainLo:

; 2797 : 											 }
; 2798 : 											 if (Timer[14] == 0 && g_bCast == TRUE)

	mov	eax, 4
	imul	ecx, eax, 14
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jne	SHORT $LN613@DXW_MainLo
	cmp	DWORD PTR ?g_bCast@@3HA, 1		; g_bCast
	jne	SHORT $LN613@DXW_MainLo

; 2799 : 											 {
; 2800 : 												 g_bCast = FALSE;

	mov	DWORD PTR ?g_bCast@@3HA, 0		; g_bCast

; 2801 : 												 CAframe = 0;

	mov	DWORD PTR ?CAframe@@3HA, 0		; CAframe

; 2802 : 												 Timer[10] = 0;

	mov	eax, 4
	imul	ecx, eax, 10
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0

; 2803 : 												 Timer[15] = (rand() % 200) + 600;

	call	_rand
	cdq
	mov	ecx, 200				; 000000c8H
	idiv	ecx
	add	edx, 600				; 00000258H
	mov	eax, 4
	imul	ecx, eax, 15
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx

; 2804 : 												 Mirror = FALSE;

	mov	DWORD PTR ?Mirror@@3HA, 0		; Mirror
$LN613@DXW_MainLo:

; 2805 : 											 }
; 2806 : 										 }
; 2807 : 										 else

	jmp	SHORT $LN610@DXW_MainLo
$LN609@DXW_MainLo:

; 2808 : 										 {
; 2809 : 											 Timer[6]++;

	mov	eax, 4
	imul	ecx, eax, 6
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	add	edx, 1
	mov	eax, 4
	imul	ecx, eax, 6
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
$LN610@DXW_MainLo:

; 2810 : 										 }
; 2811 : 									 }
; 2812 : 								 }
; 2813 : 								 else

	jmp	$LN574@DXW_MainLo
$LN573@DXW_MainLo:

; 2814 : 								 {
; 2815 : 									 Randpat = rand() % 3;

	call	_rand
	cdq
	mov	ecx, 3
	idiv	ecx
	mov	DWORD PTR ?Randpat@@3HA, edx		; Randpat

; 2816 : 									 if (Randpat == Randpat2)

	mov	eax, DWORD PTR ?Randpat@@3HA		; Randpat
	cmp	eax, DWORD PTR ?Randpat2@@3HA		; Randpat2
	jne	SHORT $LN18@DXW_MainLo

; 2817 : 									 {
; 2818 : 										 switch (Randpat)

	mov	eax, DWORD PTR ?Randpat@@3HA		; Randpat
	mov	DWORD PTR tv3626[ebp], eax
	cmp	DWORD PTR tv3626[ebp], 0
	je	SHORT $LN615@DXW_MainLo
	cmp	DWORD PTR tv3626[ebp], 1
	je	SHORT $LN616@DXW_MainLo
	cmp	DWORD PTR tv3626[ebp], 2
	je	SHORT $LN617@DXW_MainLo
	jmp	SHORT $LN18@DXW_MainLo
$LN615@DXW_MainLo:

; 2819 : 										 {
; 2820 : 										 case 0:
; 2821 : 											 Randpat = 1;

	mov	DWORD PTR ?Randpat@@3HA, 1		; Randpat

; 2822 : 											 break;

	jmp	SHORT $LN18@DXW_MainLo
$LN616@DXW_MainLo:

; 2823 : 										 case 1:
; 2824 : 											 Randpat = 2;

	mov	DWORD PTR ?Randpat@@3HA, 2		; Randpat

; 2825 : 											 break;

	jmp	SHORT $LN18@DXW_MainLo
$LN617@DXW_MainLo:

; 2826 : 										 case 2:
; 2827 : 											 Randpat = 0;

	mov	DWORD PTR ?Randpat@@3HA, 0		; Randpat
$LN18@DXW_MainLo:

; 2828 : 											 break;
; 2829 : 										 }
; 2830 : 									 }
; 2831 : 									 if (Randpat == 2)

	cmp	DWORD PTR ?Randpat@@3HA, 2		; Randpat
	jne	$LN634@DXW_MainLo

; 2832 : 									 {
; 2833 : 										 RandNum[0] = rand() % 2;

	call	_rand
	and	eax, -2147483647			; 80000001H
	jns	SHORT $LN1016@DXW_MainLo
	dec	eax
	or	eax, -2					; fffffffeH
	inc	eax
$LN1016@DXW_MainLo:
	mov	ecx, 4
	imul	edx, ecx, 0
	mov	DWORD PTR ?RandNum@@3PAHA[edx], eax

; 2834 : 										 if (RandNum[0] == 1 && Maximum < 2)

	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?RandNum@@3PAHA[ecx], 1
	jne	SHORT $LN619@DXW_MainLo
	cmp	DWORD PTR ?Maximum@@3HA, 2		; Maximum
	jge	SHORT $LN619@DXW_MainLo

; 2835 : 										 {
; 2836 : 											 Maximum++;

	mov	eax, DWORD PTR ?Maximum@@3HA		; Maximum
	add	eax, 1
	mov	DWORD PTR ?Maximum@@3HA, eax		; Maximum
	jmp	SHORT $LN621@DXW_MainLo
$LN619@DXW_MainLo:

; 2837 : 										 }
; 2838 : 										 else if (RandNum[0] == 1 && Maximum >= 2)

	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?RandNum@@3PAHA[ecx], 1
	jne	SHORT $LN621@DXW_MainLo
	cmp	DWORD PTR ?Maximum@@3HA, 2		; Maximum
	jl	SHORT $LN621@DXW_MainLo

; 2839 : 										 {
; 2840 : 											 RandNum[0] = 0;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?RandNum@@3PAHA[ecx], 0
$LN621@DXW_MainLo:

; 2841 : 										 }
; 2842 : 										 RandNum[1] = rand() % 2;

	call	_rand
	and	eax, -2147483647			; 80000001H
	jns	SHORT $LN1017@DXW_MainLo
	dec	eax
	or	eax, -2					; fffffffeH
	inc	eax
$LN1017@DXW_MainLo:
	mov	ecx, 4
	shl	ecx, 0
	mov	DWORD PTR ?RandNum@@3PAHA[ecx], eax

; 2843 : 										 if (RandNum[1] == 1 && Maximum < 2)

	mov	eax, 4
	shl	eax, 0
	cmp	DWORD PTR ?RandNum@@3PAHA[eax], 1
	jne	SHORT $LN622@DXW_MainLo
	cmp	DWORD PTR ?Maximum@@3HA, 2		; Maximum
	jge	SHORT $LN622@DXW_MainLo

; 2844 : 										 {
; 2845 : 											 Maximum++;

	mov	eax, DWORD PTR ?Maximum@@3HA		; Maximum
	add	eax, 1
	mov	DWORD PTR ?Maximum@@3HA, eax		; Maximum
	jmp	SHORT $LN624@DXW_MainLo
$LN622@DXW_MainLo:

; 2846 : 										 }
; 2847 : 										 else if (RandNum[1] == 1 && Maximum >= 2)

	mov	eax, 4
	shl	eax, 0
	cmp	DWORD PTR ?RandNum@@3PAHA[eax], 1
	jne	SHORT $LN624@DXW_MainLo
	cmp	DWORD PTR ?Maximum@@3HA, 2		; Maximum
	jl	SHORT $LN624@DXW_MainLo

; 2848 : 										 {
; 2849 : 											 RandNum[1] = 0;

	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR ?RandNum@@3PAHA[eax], 0
$LN624@DXW_MainLo:

; 2850 : 										 }
; 2851 : 										 RandNum[2] = rand() % 2;

	call	_rand
	and	eax, -2147483647			; 80000001H
	jns	SHORT $LN1018@DXW_MainLo
	dec	eax
	or	eax, -2					; fffffffeH
	inc	eax
$LN1018@DXW_MainLo:
	mov	ecx, 4
	shl	ecx, 1
	mov	DWORD PTR ?RandNum@@3PAHA[ecx], eax

; 2852 : 										 if (RandNum[2] == 1 && Maximum < 2)

	mov	eax, 4
	shl	eax, 1
	cmp	DWORD PTR ?RandNum@@3PAHA[eax], 1
	jne	SHORT $LN625@DXW_MainLo
	cmp	DWORD PTR ?Maximum@@3HA, 2		; Maximum
	jge	SHORT $LN625@DXW_MainLo

; 2853 : 										 {
; 2854 : 											 Maximum++;

	mov	eax, DWORD PTR ?Maximum@@3HA		; Maximum
	add	eax, 1
	mov	DWORD PTR ?Maximum@@3HA, eax		; Maximum
	jmp	SHORT $LN627@DXW_MainLo
$LN625@DXW_MainLo:

; 2855 : 										 }
; 2856 : 										 else if (RandNum[2] == 1 && Maximum >= 2)

	mov	eax, 4
	shl	eax, 1
	cmp	DWORD PTR ?RandNum@@3PAHA[eax], 1
	jne	SHORT $LN627@DXW_MainLo
	cmp	DWORD PTR ?Maximum@@3HA, 2		; Maximum
	jl	SHORT $LN627@DXW_MainLo

; 2857 : 										 {
; 2858 : 											 RandNum[2] = 0;

	mov	eax, 4
	shl	eax, 1
	mov	DWORD PTR ?RandNum@@3PAHA[eax], 0
$LN627@DXW_MainLo:

; 2859 : 										 }
; 2860 : 										 RandNum[3] = rand() % 2;

	call	_rand
	and	eax, -2147483647			; 80000001H
	jns	SHORT $LN1019@DXW_MainLo
	dec	eax
	or	eax, -2					; fffffffeH
	inc	eax
$LN1019@DXW_MainLo:
	mov	ecx, 4
	imul	edx, ecx, 3
	mov	DWORD PTR ?RandNum@@3PAHA[edx], eax

; 2861 : 										 if (RandNum[3] == 1 && Maximum < 2)

	mov	eax, 4
	imul	ecx, eax, 3
	cmp	DWORD PTR ?RandNum@@3PAHA[ecx], 1
	jne	SHORT $LN628@DXW_MainLo
	cmp	DWORD PTR ?Maximum@@3HA, 2		; Maximum
	jge	SHORT $LN628@DXW_MainLo

; 2862 : 										 {
; 2863 : 											 Maximum++;

	mov	eax, DWORD PTR ?Maximum@@3HA		; Maximum
	add	eax, 1
	mov	DWORD PTR ?Maximum@@3HA, eax		; Maximum
	jmp	SHORT $LN630@DXW_MainLo
$LN628@DXW_MainLo:

; 2864 : 										 }
; 2865 : 										 else if (RandNum[3] == 1 && Maximum >= 2)

	mov	eax, 4
	imul	ecx, eax, 3
	cmp	DWORD PTR ?RandNum@@3PAHA[ecx], 1
	jne	SHORT $LN630@DXW_MainLo
	cmp	DWORD PTR ?Maximum@@3HA, 2		; Maximum
	jl	SHORT $LN630@DXW_MainLo

; 2866 : 										 {
; 2867 : 											 RandNum[3] = 0;

	mov	eax, 4
	imul	ecx, eax, 3
	mov	DWORD PTR ?RandNum@@3PAHA[ecx], 0
$LN630@DXW_MainLo:

; 2868 : 										 }
; 2869 : 										 RandNum[4] = rand() % 2;

	call	_rand
	and	eax, -2147483647			; 80000001H
	jns	SHORT $LN1020@DXW_MainLo
	dec	eax
	or	eax, -2					; fffffffeH
	inc	eax
$LN1020@DXW_MainLo:
	mov	ecx, 4
	shl	ecx, 2
	mov	DWORD PTR ?RandNum@@3PAHA[ecx], eax

; 2870 : 										 if (RandNum[4] == 1 && Maximum < 2)

	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?RandNum@@3PAHA[eax], 1
	jne	SHORT $LN631@DXW_MainLo
	cmp	DWORD PTR ?Maximum@@3HA, 2		; Maximum
	jge	SHORT $LN631@DXW_MainLo

; 2871 : 										 {
; 2872 : 											 Maximum++;

	mov	eax, DWORD PTR ?Maximum@@3HA		; Maximum
	add	eax, 1
	mov	DWORD PTR ?Maximum@@3HA, eax		; Maximum
	jmp	SHORT $LN633@DXW_MainLo
$LN631@DXW_MainLo:

; 2873 : 										 }
; 2874 : 										 else if (RandNum[4] == 1 && Maximum >= 2)

	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?RandNum@@3PAHA[eax], 1
	jne	SHORT $LN633@DXW_MainLo
	cmp	DWORD PTR ?Maximum@@3HA, 2		; Maximum
	jl	SHORT $LN633@DXW_MainLo

; 2875 : 										 {
; 2876 : 											 RandNum[4] = 0;

	mov	eax, 4
	shl	eax, 2
	mov	DWORD PTR ?RandNum@@3PAHA[eax], 0
$LN633@DXW_MainLo:

; 2877 : 										 }
; 2878 : 										 if (Maximum == 0)

	cmp	DWORD PTR ?Maximum@@3HA, 0		; Maximum
	jne	SHORT $LN634@DXW_MainLo

; 2879 : 										 {
; 2880 : 											 int n = 0;

	mov	DWORD PTR _n$77[ebp], 0

; 2881 : 											 n = rand() % 4;

	call	_rand
	and	eax, -2147483645			; 80000003H
	jns	SHORT $LN1021@DXW_MainLo
	dec	eax
	or	eax, -4					; fffffffcH
	inc	eax
$LN1021@DXW_MainLo:
	mov	DWORD PTR _n$77[ebp], eax

; 2882 : 											 RandNum[n] = 1;

	mov	eax, DWORD PTR _n$77[ebp]
	mov	DWORD PTR ?RandNum@@3PAHA[eax*4], 1
$LN634@DXW_MainLo:

; 2883 : 										 }
; 2884 : 									 }
; 2885 : 									 switch (Randpat)

	mov	eax, DWORD PTR ?Randpat@@3HA		; Randpat
	mov	DWORD PTR tv3711[ebp], eax
	cmp	DWORD PTR tv3711[ebp], 0
	je	SHORT $LN635@DXW_MainLo
	cmp	DWORD PTR tv3711[ebp], 1
	je	SHORT $LN636@DXW_MainLo
	jmp	$LN20@DXW_MainLo
$LN635@DXW_MainLo:

; 2886 : 									 {
; 2887 : 									 case 0:
; 2888 : 										 RandNum[0] = 0;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?RandNum@@3PAHA[ecx], 0

; 2889 : 										 RandNum[1] = 1;

	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR ?RandNum@@3PAHA[eax], 1

; 2890 : 										 RandNum[2] = 0;

	mov	eax, 4
	shl	eax, 1
	mov	DWORD PTR ?RandNum@@3PAHA[eax], 0

; 2891 : 										 RandNum[3] = 1;

	mov	eax, 4
	imul	ecx, eax, 3
	mov	DWORD PTR ?RandNum@@3PAHA[ecx], 1

; 2892 : 										 RandNum[4] = 0;

	mov	eax, 4
	shl	eax, 2
	mov	DWORD PTR ?RandNum@@3PAHA[eax], 0

; 2893 : 										 break;

	jmp	SHORT $LN20@DXW_MainLo
$LN636@DXW_MainLo:

; 2894 : 									 case 1:
; 2895 : 										 RandNum[0] = 1;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?RandNum@@3PAHA[ecx], 1

; 2896 : 										 RandNum[1] = 0;

	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR ?RandNum@@3PAHA[eax], 0

; 2897 : 										 RandNum[2] = 1;

	mov	eax, 4
	shl	eax, 1
	mov	DWORD PTR ?RandNum@@3PAHA[eax], 1

; 2898 : 										 RandNum[3] = 0;

	mov	eax, 4
	imul	ecx, eax, 3
	mov	DWORD PTR ?RandNum@@3PAHA[ecx], 0

; 2899 : 										 RandNum[4] = 1;

	mov	eax, 4
	shl	eax, 2
	mov	DWORD PTR ?RandNum@@3PAHA[eax], 1
$LN20@DXW_MainLo:

; 2900 : 										 break;
; 2901 : 									 }
; 2902 : 									 g_bBAT = TRUE;

	mov	DWORD PTR ?g_bBAT@@3HA, 1		; g_bBAT
$LN574@DXW_MainLo:

; 2903 : 								 }
; 2904 : 							 }
; 2905 : 						 }
; 2906 : 						 if (PHplay == TRUE)

	cmp	DWORD PTR ?PHplay@@3HA, 1		; PHplay
	jne	$LN643@DXW_MainLo

; 2907 : 						 {
; 2908 : 							 if (Timer[25] == 0)

	mov	eax, 4
	imul	ecx, eax, 25
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jne	SHORT $LN638@DXW_MainLo

; 2909 : 							 {
; 2910 : 								 PHframe++;

	mov	eax, DWORD PTR ?PHframe@@3HA		; PHframe
	add	eax, 1
	mov	DWORD PTR ?PHframe@@3HA, eax		; PHframe

; 2911 : 								 Timer[25] = 3;

	mov	eax, 4
	imul	ecx, eax, 25
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 3

; 2912 : 								 if (PHframe > 5)

	cmp	DWORD PTR ?PHframe@@3HA, 5		; PHframe
	jle	SHORT $LN640@DXW_MainLo

; 2913 : 								 {
; 2914 : 									 PHplay = FALSE;

	mov	DWORD PTR ?PHplay@@3HA, 0		; PHplay

; 2915 : 									 PHframe = 0;

	mov	DWORD PTR ?PHframe@@3HA, 0		; PHframe

; 2916 : 									 Timer[25] = 0;

	mov	eax, 4
	imul	ecx, eax, 25
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0
$LN640@DXW_MainLo:

; 2917 : 								 }
; 2918 : 							 }

	jmp	SHORT $LN639@DXW_MainLo
$LN638@DXW_MainLo:

; 2919 : 							 else { Timer[25] --; }

	mov	eax, 4
	imul	ecx, eax, 25
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 25
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
$LN639@DXW_MainLo:

; 2920 : 							 if (PHplay == TRUE)

	cmp	DWORD PTR ?PHplay@@3HA, 1		; PHplay
	jne	SHORT $LN643@DXW_MainLo

; 2921 : 							 {
; 2922 : 								 if (g_bLookL)

	cmp	DWORD PTR ?g_bLookL@@3HA, 0		; g_bLookL
	je	SHORT $LN642@DXW_MainLo

; 2923 : 								 {
; 2924 : 									 ::__PutAnimeSprite(g_pDDSDPlayerHit, nX - 50, nY - 70, 6, PHframe, 180, 226, 0);

	push	0
	push	226					; 000000e2H
	push	180					; 000000b4H
	mov	eax, DWORD PTR ?PHframe@@3HA		; PHframe
	push	eax
	push	6
	mov	ecx, DWORD PTR _nY$[ebp]
	sub	ecx, 70					; 00000046H
	push	ecx
	mov	edx, DWORD PTR _nX$[ebp]
	sub	edx, 50					; 00000032H
	push	edx
	mov	eax, DWORD PTR ?g_pDDSDPlayerHit@@3PAUIDirectDrawSurface7@@A ; g_pDDSDPlayerHit
	push	eax
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN642@DXW_MainLo:

; 2925 : 								 }
; 2926 : 								 if (g_bLookR)

	cmp	DWORD PTR ?g_bLookR@@3HA, 0		; g_bLookR
	je	SHORT $LN643@DXW_MainLo

; 2927 : 								 {
; 2928 : 									 ::__PutAnimeSprite(g_pDDSDPlayerHit, nX - 40, nY - 70, 6, PHframe, 180, 226, 0);

	push	0
	push	226					; 000000e2H
	push	180					; 000000b4H
	mov	eax, DWORD PTR ?PHframe@@3HA		; PHframe
	push	eax
	push	6
	mov	ecx, DWORD PTR _nY$[ebp]
	sub	ecx, 70					; 00000046H
	push	ecx
	mov	edx, DWORD PTR _nX$[ebp]
	sub	edx, 40					; 00000028H
	push	edx
	mov	eax, DWORD PTR ?g_pDDSDPlayerHit@@3PAUIDirectDrawSurface7@@A ; g_pDDSDPlayerHit
	push	eax
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN643@DXW_MainLo:

; 2929 : 								 }
; 2930 : 							 }
; 2931 : 						 }
; 2932 : 						 if (BHMPlay == TRUE)

	cmp	DWORD PTR ?BHMPlay@@3HA, 1		; BHMPlay
	jne	$LN668@DXW_MainLo

; 2933 : 						 {
; 2934 : 							 if (Timer[24] == 0 && BHplay[0] == TRUE)

	mov	eax, 4
	imul	ecx, eax, 24
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jne	$LN645@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?BHplay@@3PAHA[ecx], 1
	jne	$LN645@DXW_MainLo

; 2935 : 							 {
; 2936 : 								 BHframe[0]++;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR ?BHframe@@3PAHA[ecx]
	add	edx, 1
	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?BHframe@@3PAHA[ecx], edx

; 2937 : 								 Timer[24] = 2;

	mov	eax, 4
	imul	ecx, eax, 24
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 2

; 2938 : 								 if (BHframe[0] == 6)

	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?BHframe@@3PAHA[ecx], 6
	jne	SHORT $LN647@DXW_MainLo

; 2939 : 								 {
; 2940 : 									 BHframe[0] = 0;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?BHframe@@3PAHA[ecx], 0

; 2941 : 									 Timer[24] = 0;

	mov	eax, 4
	imul	ecx, eax, 24
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0

; 2942 : 									 BHplay[0] = FALSE;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?BHplay@@3PAHA[ecx], 0
$LN647@DXW_MainLo:

; 2943 : 								 }
; 2944 : 								 if (BHframe[0] == 4 && BHplay[1] == FALSE)

	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?BHframe@@3PAHA[ecx], 4
	jne	SHORT $LN648@DXW_MainLo
	mov	eax, 4
	shl	eax, 0
	cmp	DWORD PTR ?BHplay@@3PAHA[eax], 0
	jne	SHORT $LN648@DXW_MainLo

; 2945 : 								 {
; 2946 : 									 Timer[26] = 2;

	mov	eax, 4
	imul	ecx, eax, 26
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 2

; 2947 : 									 BHplay[1] = TRUE;

	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR ?BHplay@@3PAHA[eax], 1
$LN648@DXW_MainLo:

; 2948 : 								 }
; 2949 : 							 }

	jmp	SHORT $LN649@DXW_MainLo
$LN645@DXW_MainLo:

; 2950 : 							 else if (Timer[24] > 0 && BHplay[0] == TRUE) { Timer[24]--; }

	mov	eax, 4
	imul	ecx, eax, 24
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jle	SHORT $LN649@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?BHplay@@3PAHA[ecx], 1
	jne	SHORT $LN649@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 24
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 24
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
$LN649@DXW_MainLo:

; 2951 : 							 if (Timer[26] == 0 && BHplay[1] == TRUE)

	mov	eax, 4
	imul	ecx, eax, 26
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jne	$LN650@DXW_MainLo
	mov	eax, 4
	shl	eax, 0
	cmp	DWORD PTR ?BHplay@@3PAHA[eax], 1
	jne	$LN650@DXW_MainLo

; 2952 : 							 {
; 2953 : 								 BHframe[1]++;

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR ?BHframe@@3PAHA[eax]
	add	ecx, 1
	mov	edx, 4
	shl	edx, 0
	mov	DWORD PTR ?BHframe@@3PAHA[edx], ecx

; 2954 : 								 Timer[26] = 2;

	mov	eax, 4
	imul	ecx, eax, 26
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 2

; 2955 : 								 if (BHframe[1] == 6)

	mov	eax, 4
	shl	eax, 0
	cmp	DWORD PTR ?BHframe@@3PAHA[eax], 6
	jne	SHORT $LN652@DXW_MainLo

; 2956 : 								 {
; 2957 : 									 BHframe[1] = 0;

	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR ?BHframe@@3PAHA[eax], 0

; 2958 : 									 Timer[26] = 0;

	mov	eax, 4
	imul	ecx, eax, 26
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0

; 2959 : 									 BHplay[1] = FALSE;

	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR ?BHplay@@3PAHA[eax], 0
$LN652@DXW_MainLo:

; 2960 : 								 }
; 2961 : 								 if (BHframe[1] == 4 && BHplay[2] == FALSE)

	mov	eax, 4
	shl	eax, 0
	cmp	DWORD PTR ?BHframe@@3PAHA[eax], 4
	jne	SHORT $LN653@DXW_MainLo
	mov	eax, 4
	shl	eax, 1
	cmp	DWORD PTR ?BHplay@@3PAHA[eax], 0
	jne	SHORT $LN653@DXW_MainLo

; 2962 : 								 {
; 2963 : 									 Timer[27] = 2;

	mov	eax, 4
	imul	ecx, eax, 27
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 2

; 2964 : 									 BHplay[2] = TRUE;

	mov	eax, 4
	shl	eax, 1
	mov	DWORD PTR ?BHplay@@3PAHA[eax], 1
$LN653@DXW_MainLo:

; 2965 : 								 }
; 2966 : 							 }

	jmp	SHORT $LN654@DXW_MainLo
$LN650@DXW_MainLo:

; 2967 : 							 else if (Timer[26] > 0 && BHplay[1] == TRUE) { Timer[26]--; }

	mov	eax, 4
	imul	ecx, eax, 26
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jle	SHORT $LN654@DXW_MainLo
	mov	eax, 4
	shl	eax, 0
	cmp	DWORD PTR ?BHplay@@3PAHA[eax], 1
	jne	SHORT $LN654@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 26
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 26
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
$LN654@DXW_MainLo:

; 2968 : 							 if (Timer[27] == 0 && BHplay[2] == TRUE)

	mov	eax, 4
	imul	ecx, eax, 27
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jne	$LN655@DXW_MainLo
	mov	eax, 4
	shl	eax, 1
	cmp	DWORD PTR ?BHplay@@3PAHA[eax], 1
	jne	SHORT $LN655@DXW_MainLo

; 2969 : 							 {
; 2970 : 								 BHframe[2]++;

	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR ?BHframe@@3PAHA[eax]
	add	ecx, 1
	mov	edx, 4
	shl	edx, 1
	mov	DWORD PTR ?BHframe@@3PAHA[edx], ecx

; 2971 : 								 Timer[27] = 2;

	mov	eax, 4
	imul	ecx, eax, 27
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 2

; 2972 : 								 if (BHframe[2] == 6)

	mov	eax, 4
	shl	eax, 1
	cmp	DWORD PTR ?BHframe@@3PAHA[eax], 6
	jne	SHORT $LN657@DXW_MainLo

; 2973 : 								 {
; 2974 : 									 BHframe[2] = 0;

	mov	eax, 4
	shl	eax, 1
	mov	DWORD PTR ?BHframe@@3PAHA[eax], 0

; 2975 : 									 Timer[27] = 0;

	mov	eax, 4
	imul	ecx, eax, 27
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0

; 2976 : 									 BHplay[2] = FALSE;

	mov	eax, 4
	shl	eax, 1
	mov	DWORD PTR ?BHplay@@3PAHA[eax], 0
$LN657@DXW_MainLo:

; 2977 : 								 }
; 2978 : 							 }

	jmp	SHORT $LN658@DXW_MainLo
$LN655@DXW_MainLo:

; 2979 : 							 else if (Timer[27] > 0 && BHplay[2] == TRUE) { Timer[27]--; }

	mov	eax, 4
	imul	ecx, eax, 27
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jle	SHORT $LN658@DXW_MainLo
	mov	eax, 4
	shl	eax, 1
	cmp	DWORD PTR ?BHplay@@3PAHA[eax], 1
	jne	SHORT $LN658@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 27
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 27
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
$LN658@DXW_MainLo:

; 2980 : 							 if (BHplay[0] == FALSE && BHplay[1] == FALSE && BHplay[2] == FALSE)

	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?BHplay@@3PAHA[ecx], 0
	jne	SHORT $LN659@DXW_MainLo
	mov	eax, 4
	shl	eax, 0
	cmp	DWORD PTR ?BHplay@@3PAHA[eax], 0
	jne	SHORT $LN659@DXW_MainLo
	mov	eax, 4
	shl	eax, 1
	cmp	DWORD PTR ?BHplay@@3PAHA[eax], 0
	jne	SHORT $LN659@DXW_MainLo

; 2981 : 							 {
; 2982 : 								 BHMPlay = FALSE;

	mov	DWORD PTR ?BHMPlay@@3HA, 0		; BHMPlay
$LN659@DXW_MainLo:

; 2983 : 							 }
; 2984 : 							 if (BHplay[0] == TRUE)

	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?BHplay@@3PAHA[ecx], 1
	jne	$LN662@DXW_MainLo

; 2985 : 							 {
; 2986 : 								 if (g_bLookL)

	cmp	DWORD PTR ?g_bLookL@@3HA, 0		; g_bLookL
	je	SHORT $LN661@DXW_MainLo

; 2987 : 								 {
; 2988 : 									 ::__PutAnimeSprite(g_pDDSDBossHit, bnX, bnY - 40, 6, BHframe[0], 180, 226, 0);

	push	0
	push	226					; 000000e2H
	push	180					; 000000b4H
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR ?BHframe@@3PAHA[ecx]
	push	edx
	push	6
	mov	eax, DWORD PTR _bnY$[ebp]
	sub	eax, 40					; 00000028H
	push	eax
	mov	ecx, DWORD PTR _bnX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSDBossHit@@3PAUIDirectDrawSurface7@@A ; g_pDDSDBossHit
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN661@DXW_MainLo:

; 2989 : 								 }
; 2990 : 								 if (g_bLookR)

	cmp	DWORD PTR ?g_bLookR@@3HA, 0		; g_bLookR
	je	SHORT $LN662@DXW_MainLo

; 2991 : 								 {
; 2992 : 									 ::__PutAnimeSprite(g_pDDSDBossHit, bnX + 20, bnY - 40, 6, BHframe[0], 180, 226, 0);

	push	0
	push	226					; 000000e2H
	push	180					; 000000b4H
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR ?BHframe@@3PAHA[ecx]
	push	edx
	push	6
	mov	eax, DWORD PTR _bnY$[ebp]
	sub	eax, 40					; 00000028H
	push	eax
	mov	ecx, DWORD PTR _bnX$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSDBossHit@@3PAUIDirectDrawSurface7@@A ; g_pDDSDBossHit
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN662@DXW_MainLo:

; 2993 : 								 }
; 2994 : 							 }
; 2995 : 							 if (BHplay[1] == TRUE)

	mov	eax, 4
	shl	eax, 0
	cmp	DWORD PTR ?BHplay@@3PAHA[eax], 1
	jne	$LN665@DXW_MainLo

; 2996 : 							 {
; 2997 : 								 if (g_bLookL)

	cmp	DWORD PTR ?g_bLookL@@3HA, 0		; g_bLookL
	je	SHORT $LN664@DXW_MainLo

; 2998 : 								 {
; 2999 : 									 ::__PutAnimeSprite(g_pDDSDBossHit, bnX, bnY - 40, 6, BHframe[1], 180, 226, 0);

	push	0
	push	226					; 000000e2H
	push	180					; 000000b4H
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR ?BHframe@@3PAHA[eax]
	push	ecx
	push	6
	mov	edx, DWORD PTR _bnY$[ebp]
	sub	edx, 40					; 00000028H
	push	edx
	mov	eax, DWORD PTR _bnX$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?g_pDDSDBossHit@@3PAUIDirectDrawSurface7@@A ; g_pDDSDBossHit
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN664@DXW_MainLo:

; 3000 : 								 }
; 3001 : 								 if (g_bLookR)

	cmp	DWORD PTR ?g_bLookR@@3HA, 0		; g_bLookR
	je	SHORT $LN665@DXW_MainLo

; 3002 : 								 {
; 3003 : 									 ::__PutAnimeSprite(g_pDDSDBossHit, bnX + 20, bnY - 40, 6, BHframe[1], 180, 226, 0);

	push	0
	push	226					; 000000e2H
	push	180					; 000000b4H
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR ?BHframe@@3PAHA[eax]
	push	ecx
	push	6
	mov	edx, DWORD PTR _bnY$[ebp]
	sub	edx, 40					; 00000028H
	push	edx
	mov	eax, DWORD PTR _bnX$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	mov	ecx, DWORD PTR ?g_pDDSDBossHit@@3PAUIDirectDrawSurface7@@A ; g_pDDSDBossHit
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN665@DXW_MainLo:

; 3004 : 								 }
; 3005 : 							 }
; 3006 : 							 if (BHplay[2] == TRUE)

	mov	eax, 4
	shl	eax, 1
	cmp	DWORD PTR ?BHplay@@3PAHA[eax], 1
	jne	$LN668@DXW_MainLo

; 3007 : 							 {
; 3008 : 								 if (g_bLookL)

	cmp	DWORD PTR ?g_bLookL@@3HA, 0		; g_bLookL
	je	SHORT $LN667@DXW_MainLo

; 3009 : 								 {
; 3010 : 									 ::__PutAnimeSprite(g_pDDSDBossHit, bnX, bnY - 40, 6, BHframe[2], 180, 226, 0);

	push	0
	push	226					; 000000e2H
	push	180					; 000000b4H
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR ?BHframe@@3PAHA[eax]
	push	ecx
	push	6
	mov	edx, DWORD PTR _bnY$[ebp]
	sub	edx, 40					; 00000028H
	push	edx
	mov	eax, DWORD PTR _bnX$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?g_pDDSDBossHit@@3PAUIDirectDrawSurface7@@A ; g_pDDSDBossHit
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN667@DXW_MainLo:

; 3011 : 								 }
; 3012 : 								 if (g_bLookR)

	cmp	DWORD PTR ?g_bLookR@@3HA, 0		; g_bLookR
	je	SHORT $LN668@DXW_MainLo

; 3013 : 								 {
; 3014 : 									 ::__PutAnimeSprite(g_pDDSDBossHit, bnX + 20, bnY - 40, 6, BHframe[2], 180, 226, 0);

	push	0
	push	226					; 000000e2H
	push	180					; 000000b4H
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR ?BHframe@@3PAHA[eax]
	push	ecx
	push	6
	mov	edx, DWORD PTR _bnY$[ebp]
	sub	edx, 40					; 00000028H
	push	edx
	mov	eax, DWORD PTR _bnX$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	mov	ecx, DWORD PTR ?g_pDDSDBossHit@@3PAUIDirectDrawSurface7@@A ; g_pDDSDBossHit
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN668@DXW_MainLo:

; 3015 : 								 }
; 3016 : 							 }
; 3017 : 						 }
; 3018 : 						 if (P2HP < 1)

	cmp	DWORD PTR ?P2HP@@3HA, 1			; P2HP
	jge	$LN669@DXW_MainLo

; 3019 : 						 {
; 3020 : 							 if (g_pDS[1])

	mov	eax, 4
	shl	eax, 0
	cmp	DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[eax], 0
	je	SHORT $LN670@DXW_MainLo

; 3021 : 								 m_HHSound.Stop(g_pDS[1]);

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[eax]
	push	ecx
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?Stop@CHHSound@@QAEXPAUIDirectSoundBuffer@@@Z ; CHHSound::Stop
$LN670@DXW_MainLo:

; 3022 : 							 p2die = 1;

	mov	DWORD PTR ?p2die@@3HA, 1		; p2die

; 3023 : 							 g_nPhaze = 3;

	mov	DWORD PTR ?g_nPhaze@@3HA, 3		; g_nPhaze

; 3024 : 							 g_Pos.x = 0;

	mov	DWORD PTR ?g_Pos@@3UtagPOINT@@A, 0

; 3025 : 							 g_Pos.y = 550;

	mov	DWORD PTR ?g_Pos@@3UtagPOINT@@A+4, 550	; 00000226H

; 3026 : 							 g_BPos.x = 700;

	mov	DWORD PTR ?g_BPos@@3UtagPOINT@@A, 700	; 000002bcH

; 3027 : 							 g_BPos.y = 480;

	mov	DWORD PTR ?g_BPos@@3UtagPOINT@@A+4, 480	; 000001e0H

; 3028 : 							 Gravity = 13;

	mov	DWORD PTR ?Gravity@@3HA, 13		; Gravity, 0000000dH

; 3029 : 							 g_bSetSpeed = FALSE;

	mov	DWORD PTR ?g_bSetSpeed@@3HA, 0		; g_bSetSpeed

; 3030 : 							 g_bJump = FALSE;

	mov	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump

; 3031 : 							 g_bJaccel = FALSE;

	mov	DWORD PTR ?g_bJaccel@@3HA, 0		; g_bJaccel

; 3032 : 							 g_bJLeft = FALSE;

	mov	DWORD PTR ?g_bJLeft@@3HA, 0		; g_bJLeft

; 3033 : 							 g_bJRight = FALSE;

	mov	DWORD PTR ?g_bJRight@@3HA, 0		; g_bJRight

; 3034 : 							 g_bCast = FALSE;

	mov	DWORD PTR ?g_bCast@@3HA, 0		; g_bCast

; 3035 : 							 g_bCFire = FALSE;

	mov	DWORD PTR ?g_bCFire@@3HA, 0		; g_bCFire

; 3036 : 							 g_bCLeft = FALSE;

	mov	DWORD PTR ?g_bCLeft@@3HA, 0		; g_bCLeft

; 3037 : 							 g_bCRight = FALSE;

	mov	DWORD PTR ?g_bCRight@@3HA, 0		; g_bCRight

; 3038 : 							 CastHit = FALSE;

	mov	DWORD PTR ?CastHit@@3HA, 0		; CastHit

; 3039 : 							 Timer[11] = 0;

	mov	eax, 4
	imul	ecx, eax, 11
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0

; 3040 : 							 cx = 0;

	mov	DWORD PTR ?cx@@3HA, 0			; cx

; 3041 : 							 CAAframe = 0;

	mov	DWORD PTR ?CAAframe@@3HA, 0		; CAAframe

; 3042 : 							 Cast = { 0,0,1,1 };

	mov	DWORD PTR $T27[ebp], 0
	mov	DWORD PTR $T27[ebp+4], 0
	mov	DWORD PTR $T27[ebp+8], 1
	mov	DWORD PTR $T27[ebp+12], 1
	mov	eax, DWORD PTR $T27[ebp]
	mov	DWORD PTR ?Cast@@3UtagRECT@@A, eax
	mov	ecx, DWORD PTR $T27[ebp+4]
	mov	DWORD PTR ?Cast@@3UtagRECT@@A+4, ecx
	mov	edx, DWORD PTR $T27[ebp+8]
	mov	DWORD PTR ?Cast@@3UtagRECT@@A+8, edx
	mov	eax, DWORD PTR $T27[ebp+12]
	mov	DWORD PTR ?Cast@@3UtagRECT@@A+12, eax

; 3043 : 							 Timer[17] = (rand() % 150) + 200;

	call	_rand
	cdq
	mov	ecx, 150				; 00000096H
	idiv	ecx
	add	edx, 200				; 000000c8H
	mov	eax, 4
	imul	ecx, eax, 17
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx

; 3044 : 							 Timer[16] = 0;

	mov	eax, 4
	shl	eax, 4
	mov	DWORD PTR ?Timer@@3PAHA[eax], 0

; 3045 : 							 BossAtt = FALSE;

	mov	DWORD PTR ?BossAtt@@3HA, 0		; BossAtt

; 3046 : 							 BAL = FALSE;

	mov	DWORD PTR ?BAL@@3HA, 0			; BAL

; 3047 : 							 BAR = FALSE;

	mov	DWORD PTR ?BAR@@3HA, 0			; BAR

; 3048 : 							 BKframe = 0;

	mov	DWORD PTR ?BKframe@@3HA, 0		; BKframe

; 3049 : 							 KnockHIT = FALSE;

	mov	DWORD PTR ?KnockHIT@@3HA, 0		; KnockHIT

; 3050 : 							 Knock = { 0,0,1,1 };

	mov	DWORD PTR $T26[ebp], 0
	mov	DWORD PTR $T26[ebp+4], 0
	mov	DWORD PTR $T26[ebp+8], 1
	mov	DWORD PTR $T26[ebp+12], 1
	mov	eax, DWORD PTR $T26[ebp]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A, eax
	mov	ecx, DWORD PTR $T26[ebp+4]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+4, ecx
	mov	edx, DWORD PTR $T26[ebp+8]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+8, edx
	mov	eax, DWORD PTR $T26[ebp+12]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+12, eax

; 3051 : 							 BAframe = 0;

	mov	DWORD PTR ?BAframe@@3HA, 0		; BAframe

; 3052 : 							 Randpat2 = Randpat;

	mov	eax, DWORD PTR ?Randpat@@3HA		; Randpat
	mov	DWORD PTR ?Randpat2@@3HA, eax		; Randpat2

; 3053 : 							 g_bBAT = FALSE;

	mov	DWORD PTR ?g_bBAT@@3HA, 0		; g_bBAT

; 3054 : 							 Timer[7] = 60;

	mov	eax, 4
	imul	ecx, eax, 7
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 60	; 0000003cH

; 3055 : 							 Maximum = 0;

	mov	DWORD PTR ?Maximum@@3HA, 0		; Maximum

; 3056 : 							 RandNum[0, 1, 2, 3, 4] = { 0 };

	mov	eax, 4
	shl	eax, 2
	mov	DWORD PTR ?RandNum@@3PAHA[eax], 0

; 3057 : 							 BHplay[0] = FALSE;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?BHplay@@3PAHA[ecx], 0

; 3058 : 							 BHplay[1] = FALSE;

	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR ?BHplay@@3PAHA[eax], 0

; 3059 : 							 BHplay[2] = FALSE;

	mov	eax, 4
	shl	eax, 1
	mov	DWORD PTR ?BHplay@@3PAHA[eax], 0

; 3060 : 							 BHMPlay = FALSE;

	mov	DWORD PTR ?BHMPlay@@3HA, 0		; BHMPlay

; 3061 : 							 BHframe[0] = 0;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?BHframe@@3PAHA[ecx], 0

; 3062 : 							 BHframe[1] = 0;

	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR ?BHframe@@3PAHA[eax], 0

; 3063 : 							 BHframe[2] = 0;

	mov	eax, 4
	shl	eax, 1
	mov	DWORD PTR ?BHframe@@3PAHA[eax], 0

; 3064 : 							 Timer[24] = 2;

	mov	eax, 4
	imul	ecx, eax, 24
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 2

; 3065 : 							 Timer[26] = 2;

	mov	eax, 4
	imul	ecx, eax, 26
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 2

; 3066 : 							 Timer[27] = 2;

	mov	eax, 4
	imul	ecx, eax, 27
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 2
$LN669@DXW_MainLo:

; 3067 : 
; 3068 : 						 }
; 3069 : 						 //·ºÆ® È®ÀÎ¿ë
; 3070 : 						 //::__Lock(g_pDDSBack);
; 3071 : 						// __DrawRect16(PHIT.left, PHIT.top, PHIT.right, PHIT.bottom, wPixel);
; 3072 : 						// __DrawRect16(HIT.left, HIT.top, HIT.right, HIT.bottom, wPixel);
; 3073 : 						// __DrawRect16(Cast.left, Cast.top, Cast.right, Cast.bottom, wPixel);
; 3074 : 						// __DrawRect16(BOSS.left, BOSS.top, BOSS.right, BOSS.bottom, wPixel);
; 3075 : 						 //__DrawRect16(Knock.left, Knock.top, Knock.right, Knock.bottom, wPixel);
; 3076 : 						// for (i = 0; i < 5; i++)
; 3077 : 						// {
; 3078 : 						// __DrawRect16(BAHIT[i].left, BAHIT[i].top, BAHIT[i].right, BAHIT[i].bottom, wPixel);
; 3079 : 						// }
; 3080 : 						 //::__Unlock(g_pDDSBack);
; 3081 : 						 
; 3082 : 						 if (Timer[7] > 0)

	mov	eax, 4
	imul	ecx, eax, 7
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jle	SHORT $LN671@DXW_MainLo

; 3083 : 						 {
; 3084 : 							 Timer[7]--;

	mov	eax, 4
	imul	ecx, eax, 7
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 7
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
$LN671@DXW_MainLo:

; 3085 : 						 }
; 3086 : 						 if (Timer[5] > 0)

	mov	eax, 4
	imul	ecx, eax, 5
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jle	SHORT $LN672@DXW_MainLo

; 3087 : 						 {
; 3088 : 							 Timer[5] -= 1;

	mov	eax, 4
	imul	ecx, eax, 5
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 5
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
	jmp	SHORT $LN674@DXW_MainLo
$LN672@DXW_MainLo:

; 3089 : 						 }
; 3090 : 						 else if (Timer[5] <= 0 && bossimmu == TRUE)

	mov	eax, 4
	imul	ecx, eax, 5
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jg	SHORT $LN674@DXW_MainLo
	cmp	DWORD PTR ?bossimmu@@3HA, 1		; bossimmu
	jne	SHORT $LN674@DXW_MainLo

; 3091 : 						 {
; 3092 : 							 bossimmu = FALSE;

	mov	DWORD PTR ?bossimmu@@3HA, 0		; bossimmu

; 3093 : 							 Timer[5] = 0;

	mov	eax, 4
	imul	ecx, eax, 5
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0
$LN674@DXW_MainLo:

; 3094 : 						 }
; 3095 : 						 ::__PutSprite(g_pDDSHP, 130, 0);

	push	0
	push	130					; 00000082H
	mov	eax, DWORD PTR ?g_pDDSHP@@3PAUIDirectDrawSurface7@@A ; g_pDDSHP
	push	eax
	call	?__PutSprite@@YAXPAUIDirectDrawSurface7@@HH@Z ; __PutSprite
	add	esp, 12					; 0000000cH

; 3096 : 						 if (P2HP > 1)

	cmp	DWORD PTR ?P2HP@@3HA, 1			; P2HP
	jle	SHORT $LN675@DXW_MainLo

; 3097 : 						 {
; 3098 : 							 ::__Putbar(g_pDDSHPbar, 132, 2, P2MHP, P2HP, P2HPrate);

	push	ecx
	movss	xmm0, DWORD PTR ?P2HPrate@@3MA
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?P2HP@@3HA		; P2HP
	push	eax
	mov	ecx, DWORD PTR ?P2MHP@@3HA		; P2MHP
	push	ecx
	push	2
	push	132					; 00000084H
	mov	edx, DWORD PTR ?g_pDDSHPbar@@3PAUIDirectDrawSurface7@@A ; g_pDDSHPbar
	push	edx
	call	?__Putbar@@YAXPAUIDirectDrawSurface7@@HHHHM@Z ; __Putbar
	add	esp, 24					; 00000018H
$LN675@DXW_MainLo:

; 3099 : 						 }
; 3100 : 						 ::__PutSprite(g_pDDSPHP, 400, 737);

	push	737					; 000002e1H
	push	400					; 00000190H
	mov	eax, DWORD PTR ?g_pDDSPHP@@3PAUIDirectDrawSurface7@@A ; g_pDDSPHP
	push	eax
	call	?__PutSprite@@YAXPAUIDirectDrawSurface7@@HH@Z ; __PutSprite
	add	esp, 12					; 0000000cH

; 3101 : 						 if (PlayerHP > 1)

	cmp	DWORD PTR ?PlayerHP@@3HA, 1		; PlayerHP
	jle	SHORT $LN676@DXW_MainLo

; 3102 : 						 {
; 3103 : 							 ::__Putbar(g_pDDSPHPbar, 425, 744, PlayerMHP, PlayerHP, PlayerHPrate);

	push	ecx
	movss	xmm0, DWORD PTR ?PlayerHPrate@@3MA
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?PlayerHP@@3HA		; PlayerHP
	push	eax
	mov	ecx, DWORD PTR ?PlayerMHP@@3HA		; PlayerMHP
	push	ecx
	push	744					; 000002e8H
	push	425					; 000001a9H
	mov	edx, DWORD PTR ?g_pDDSPHPbar@@3PAUIDirectDrawSurface7@@A ; g_pDDSPHPbar
	push	edx
	call	?__Putbar@@YAXPAUIDirectDrawSurface7@@HHHHM@Z ; __Putbar
	add	esp, 24					; 00000018H
$LN676@DXW_MainLo:

; 3104 : 						 }
; 3105 : 						 //////////////////////////////////////////////////////////
; 3106 : 						 ///// ±âÅ¸Á¤º¸ 
; 3107 : 						 DXW_DisplayInfo();

	call	?DXW_DisplayInfo@@YAXXZ			; DXW_DisplayInfo

; 3108 : 						 break;

	jmp	$LN2@DXW_MainLo
$LN677@DXW_MainLo:

; 3109 : 						 //////////////////////////////////////////////////////////
; 3110 : 						 //////////////////////////////////////////////////////////
; 3111 : 						 //////////////////////////////////////////////////////////
; 3112 : 						 //////////////////////////////////////////////////////////
; 3113 : 						 //////////////////////////////////////////////////////////
; 3114 : 						 //////////////////////////////////////////////////////////
; 3115 : 						 //////////////////////////////////////////////////////////
; 3116 : 						 //////////////////////////////////////////////////////////
; 3117 : 						 //////////////////////////////////////////////////////////
; 3118 : 						 //////////////////////////////////////////////////////////
; 3119 : 						 //////////////////////////////////////////////////////////
; 3120 : 						 //////////////////////////////////////////////////////////
; 3121 : 				case 3 : 
; 3122 : 					if (p3musicstart == TRUE)

	cmp	DWORD PTR ?p3musicstart@@3HA, 1		; p3musicstart
	jne	SHORT $LN678@DXW_MainLo

; 3123 : 										{
; 3124 : 										}
; 3125 : 												else

	jmp	SHORT $LN679@DXW_MainLo
$LN678@DXW_MainLo:

; 3126 : 												{
; 3127 : 													m_HHSound.Play(g_pDS[2], true);

	push	1
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[eax]
	push	ecx
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?Play@CHHSound@@QAEXPAUIDirectSoundBuffer@@_N@Z ; CHHSound::Play

; 3128 : 													p3musicstart = TRUE;

	mov	DWORD PTR ?p3musicstart@@3HA, 1		; p3musicstart
$LN679@DXW_MainLo:

; 3129 : 												}
; 3130 : 												//¹è°æ
; 3131 : 													::__PutImage(g_pDDSBG3, Bx, 0);

	push	0
	mov	eax, DWORD PTR ?Bx@@3HA			; Bx
	push	eax
	mov	ecx, DWORD PTR ?g_pDDSBG3@@3PAUIDirectDrawSurface7@@A ; g_pDDSBG3
	push	ecx
	call	?__PutImage@@YAXPAUIDirectDrawSurface7@@HH@Z ; __PutImage
	add	esp, 12					; 0000000cH

; 3132 : 												if (Timer[11] > 0)

	mov	eax, 4
	imul	ecx, eax, 11
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jle	SHORT $LN680@DXW_MainLo

; 3133 : 												{
; 3134 : 													Timer[11] -= 1;

	mov	eax, 4
	imul	ecx, eax, 11
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 11
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
$LN680@DXW_MainLo:

; 3135 : 												}
; 3136 : 												if (Timer[12] > 0)

	mov	eax, 4
	imul	ecx, eax, 12
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jle	SHORT $LN681@DXW_MainLo

; 3137 : 												{
; 3138 : 													Timer[12] -= 1;

	mov	eax, 4
	imul	ecx, eax, 12
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 12
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
$LN681@DXW_MainLo:

; 3139 : 												}
; 3140 : 												//ÀÌµ¿ ¹× Á¡ÇÁ ·ÎÁ÷
; 3141 : 												///////////////////////
; 3142 : 												///////////////////////
; 3143 : 												///////////////////////
; 3144 : 												///////////////////////
; 3145 : 												//				g_BPos.x += 1;
; 3146 : 
; 3147 : 												if (g_BPos.x + 60 < g_Pos.x) //º¸½º ¿À¸¥ÂÊ ÀüÈ¯

	mov	eax, DWORD PTR ?g_BPos@@3UtagPOINT@@A
	add	eax, 60					; 0000003cH
	cmp	eax, DWORD PTR ?g_Pos@@3UtagPOINT@@A
	jge	SHORT $LN682@DXW_MainLo

; 3148 : 												{
; 3149 : 													g_bBLR = TRUE;

	mov	DWORD PTR ?g_bBLR@@3HA, 1		; g_bBLR

; 3150 : 													g_bBLL = FALSE;

	mov	DWORD PTR ?g_bBLL@@3HA, 0		; g_bBLL
	jmp	SHORT $LN684@DXW_MainLo
$LN682@DXW_MainLo:

; 3151 : 												}
; 3152 : 												else if (g_BPos.x > g_Pos.x - 60) //º¸½º ¿ÞÂÊ ÀüÈ¯

	mov	eax, DWORD PTR ?g_Pos@@3UtagPOINT@@A
	sub	eax, 60					; 0000003cH
	cmp	DWORD PTR ?g_BPos@@3UtagPOINT@@A, eax
	jle	SHORT $LN684@DXW_MainLo

; 3153 : 												{
; 3154 : 													g_bBLR = FALSE;

	mov	DWORD PTR ?g_bBLR@@3HA, 0		; g_bBLR

; 3155 : 													g_bBLL = TRUE;

	mov	DWORD PTR ?g_bBLL@@3HA, 1		; g_bBLL
$LN684@DXW_MainLo:

; 3156 : 												}
; 3157 : 												if (g_BPos.x + 300 < g_Pos.x) //º¸½º ¿À¸¥ÂÊ ÀÌµ¿

	mov	eax, DWORD PTR ?g_BPos@@3UtagPOINT@@A
	add	eax, 300				; 0000012cH
	cmp	eax, DWORD PTR ?g_Pos@@3UtagPOINT@@A
	jge	SHORT $LN685@DXW_MainLo

; 3158 : 												{
; 3159 : 													if (BossAtt == FALSE && g_bGatt == FALSE)

	cmp	DWORD PTR ?BossAtt@@3HA, 0		; BossAtt
	jne	SHORT $LN687@DXW_MainLo
	cmp	DWORD PTR ?g_bGatt@@3HA, 0		; g_bGatt
	jne	SHORT $LN687@DXW_MainLo

; 3160 : 													{
; 3161 : 														g_BPos.x += 1;

	mov	eax, DWORD PTR ?g_BPos@@3UtagPOINT@@A
	add	eax, 1
	mov	DWORD PTR ?g_BPos@@3UtagPOINT@@A, eax
$LN687@DXW_MainLo:

; 3162 : 													}
; 3163 : 													g_bBLR = TRUE;

	mov	DWORD PTR ?g_bBLR@@3HA, 1		; g_bBLR

; 3164 : 													g_bBLL = FALSE;

	mov	DWORD PTR ?g_bBLL@@3HA, 0		; g_bBLL
	jmp	SHORT $LN688@DXW_MainLo
$LN685@DXW_MainLo:

; 3165 : 												}
; 3166 : 												else if (g_BPos.x - 200 > g_Pos.x) //º¸½º ¿ÞÂÊ ÀÌµ¿

	mov	eax, DWORD PTR ?g_BPos@@3UtagPOINT@@A
	sub	eax, 200				; 000000c8H
	cmp	eax, DWORD PTR ?g_Pos@@3UtagPOINT@@A
	jle	SHORT $LN688@DXW_MainLo

; 3167 : 												{
; 3168 : 													if (BossAtt == FALSE && g_bGatt == FALSE)

	cmp	DWORD PTR ?BossAtt@@3HA, 0		; BossAtt
	jne	SHORT $LN689@DXW_MainLo
	cmp	DWORD PTR ?g_bGatt@@3HA, 0		; g_bGatt
	jne	SHORT $LN689@DXW_MainLo

; 3169 : 													{
; 3170 : 														g_BPos.x -= 1;

	mov	eax, DWORD PTR ?g_BPos@@3UtagPOINT@@A
	sub	eax, 1
	mov	DWORD PTR ?g_BPos@@3UtagPOINT@@A, eax
$LN689@DXW_MainLo:

; 3171 : 													}
; 3172 : 													g_bBLR = FALSE;

	mov	DWORD PTR ?g_bBLR@@3HA, 0		; g_bBLR

; 3173 : 													g_bBLL = TRUE;

	mov	DWORD PTR ?g_bBLL@@3HA, 1		; g_bBLL
$LN688@DXW_MainLo:

; 3174 : 												}
; 3175 : 												if (::GetKeyState(0x58) & 0x80 && g_bAtt == FALSE && g_bRush == FALSE) //°ø°Ý ·ÎÁ÷

	mov	esi, esp
	push	88					; 00000058H
	call	DWORD PTR __imp__GetKeyState@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cwde
	and	eax, 128				; 00000080H
	je	$LN694@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	$LN694@DXW_MainLo
	cmp	DWORD PTR ?g_bRush@@3HA, 0		; g_bRush
	jne	$LN694@DXW_MainLo

; 3176 : 												{
; 3177 : 													if (g_bLookR == TRUE)

	cmp	DWORD PTR ?g_bLookR@@3HA, 1		; g_bLookR
	jne	SHORT $LN691@DXW_MainLo

; 3178 : 													{
; 3179 : 														g_bAR = TRUE;

	mov	DWORD PTR ?g_bAR@@3HA, 1		; g_bAR

; 3180 : 														g_bAtt = TRUE;

	mov	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt

; 3181 : 														Aframe = 12;

	mov	DWORD PTR ?Aframe@@3HA, 12		; Aframe, 0000000cH

; 3182 : 														if (g_pDS[3])

	mov	eax, 4
	imul	ecx, eax, 3
	cmp	DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[ecx], 0
	je	SHORT $LN693@DXW_MainLo

; 3183 : 															m_HHSound.Stop(g_pDS[3]);

	mov	eax, 4
	imul	ecx, eax, 3
	mov	edx, DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[ecx]
	push	edx
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?Stop@CHHSound@@QAEXPAUIDirectSoundBuffer@@@Z ; CHHSound::Stop
$LN693@DXW_MainLo:

; 3184 : 														m_HHSound.Play(g_pDS[3], false);

	push	0
	mov	eax, 4
	imul	ecx, eax, 3
	mov	edx, DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[ecx]
	push	edx
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?Play@CHHSound@@QAEXPAUIDirectSoundBuffer@@_N@Z ; CHHSound::Play
	jmp	SHORT $LN694@DXW_MainLo
$LN691@DXW_MainLo:

; 3185 : 													}
; 3186 : 													else if (g_bLookL == TRUE)

	cmp	DWORD PTR ?g_bLookL@@3HA, 1		; g_bLookL
	jne	SHORT $LN694@DXW_MainLo

; 3187 : 													{
; 3188 : 														g_bAL = TRUE;

	mov	DWORD PTR ?g_bAL@@3HA, 1		; g_bAL

; 3189 : 														g_bAtt = TRUE;

	mov	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt

; 3190 : 														Aframe = 0;

	mov	DWORD PTR ?Aframe@@3HA, 0		; Aframe

; 3191 : 														if (g_pDS[3])

	mov	eax, 4
	imul	ecx, eax, 3
	cmp	DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[ecx], 0
	je	SHORT $LN695@DXW_MainLo

; 3192 : 															m_HHSound.Stop(g_pDS[3]);

	mov	eax, 4
	imul	ecx, eax, 3
	mov	edx, DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[ecx]
	push	edx
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?Stop@CHHSound@@QAEXPAUIDirectSoundBuffer@@@Z ; CHHSound::Stop
$LN695@DXW_MainLo:

; 3193 : 														m_HHSound.Play(g_pDS[3], false);

	push	0
	mov	eax, 4
	imul	ecx, eax, 3
	mov	edx, DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[ecx]
	push	edx
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?Play@CHHSound@@QAEXPAUIDirectSoundBuffer@@_N@Z ; CHHSound::Play
$LN694@DXW_MainLo:

; 3194 : 													}
; 3195 : 												}
; 3196 : 												//ÀÌµ¿ ¹× Á¡ÇÁ ·ÎÁ÷ ³¡
; 3197 : 												//// Ç¥¸é Å¬¸®¾î	
; 3198 : 												//_FillSurface(g_pDDSBack, 0x00000000);
; 3199 : 												nX = g_Pos.x;

	mov	eax, DWORD PTR ?g_Pos@@3UtagPOINT@@A
	mov	DWORD PTR _nX$[ebp], eax

; 3200 : 												nY = g_Pos.y;

	mov	eax, DWORD PTR ?g_Pos@@3UtagPOINT@@A+4
	mov	DWORD PTR _nY$[ebp], eax

; 3201 : 												bnX = g_BPos.x;

	mov	eax, DWORD PTR ?g_BPos@@3UtagPOINT@@A
	mov	DWORD PTR _bnX$[ebp], eax

; 3202 : 												bnY = g_BPos.y;

	mov	eax, DWORD PTR ?g_BPos@@3UtagPOINT@@A+4
	mov	DWORD PTR _bnY$[ebp], eax

; 3203 : 												SnX = nX;

	mov	eax, DWORD PTR _nX$[ebp]
	mov	DWORD PTR _SnX$[ebp], eax

; 3204 : 												SnY = nY - 65;

	mov	eax, DWORD PTR _nY$[ebp]
	sub	eax, 65					; 00000041H
	mov	DWORD PTR _SnY$[ebp], eax

; 3205 : 												//ÇÃ·¹ÀÌ¾î ÇÇ°Ý·ºÆ® ¼³Á¤
; 3206 : 												if (g_bLookL)

	cmp	DWORD PTR ?g_bLookL@@3HA, 0		; g_bLookL
	je	SHORT $LN696@DXW_MainLo

; 3207 : 												{
; 3208 : 													PHIT = { nX + 11,nY + 10,nX + 45,nY + 80 };

	mov	eax, DWORD PTR _nX$[ebp]
	add	eax, 11					; 0000000bH
	mov	DWORD PTR $T25[ebp], eax
	mov	ecx, DWORD PTR _nY$[ebp]
	add	ecx, 10					; 0000000aH
	mov	DWORD PTR $T25[ebp+4], ecx
	mov	edx, DWORD PTR _nX$[ebp]
	add	edx, 45					; 0000002dH
	mov	DWORD PTR $T25[ebp+8], edx
	mov	eax, DWORD PTR _nY$[ebp]
	add	eax, 80					; 00000050H
	mov	DWORD PTR $T25[ebp+12], eax
	mov	ecx, DWORD PTR $T25[ebp]
	mov	DWORD PTR ?PHIT@@3UtagRECT@@A, ecx
	mov	edx, DWORD PTR $T25[ebp+4]
	mov	DWORD PTR ?PHIT@@3UtagRECT@@A+4, edx
	mov	eax, DWORD PTR $T25[ebp+8]
	mov	DWORD PTR ?PHIT@@3UtagRECT@@A+8, eax
	mov	ecx, DWORD PTR $T25[ebp+12]
	mov	DWORD PTR ?PHIT@@3UtagRECT@@A+12, ecx
	jmp	SHORT $LN698@DXW_MainLo
$LN696@DXW_MainLo:

; 3209 : 												}
; 3210 : 												else if (g_bLookR)

	cmp	DWORD PTR ?g_bLookR@@3HA, 0		; g_bLookR
	je	SHORT $LN698@DXW_MainLo

; 3211 : 												{
; 3212 : 													PHIT = { nX + 25,nY + 10,nX + 58,nY + 80 };

	mov	eax, DWORD PTR _nX$[ebp]
	add	eax, 25					; 00000019H
	mov	DWORD PTR $T24[ebp], eax
	mov	ecx, DWORD PTR _nY$[ebp]
	add	ecx, 10					; 0000000aH
	mov	DWORD PTR $T24[ebp+4], ecx
	mov	edx, DWORD PTR _nX$[ebp]
	add	edx, 58					; 0000003aH
	mov	DWORD PTR $T24[ebp+8], edx
	mov	eax, DWORD PTR _nY$[ebp]
	add	eax, 80					; 00000050H
	mov	DWORD PTR $T24[ebp+12], eax
	mov	ecx, DWORD PTR $T24[ebp]
	mov	DWORD PTR ?PHIT@@3UtagRECT@@A, ecx
	mov	edx, DWORD PTR $T24[ebp+4]
	mov	DWORD PTR ?PHIT@@3UtagRECT@@A+4, edx
	mov	eax, DWORD PTR $T24[ebp+8]
	mov	DWORD PTR ?PHIT@@3UtagRECT@@A+8, eax
	mov	ecx, DWORD PTR $T24[ebp+12]
	mov	DWORD PTR ?PHIT@@3UtagRECT@@A+12, ecx
$LN698@DXW_MainLo:

; 3213 : 												}
; 3214 : 												//// º¸½º ½ºÅÄµù
; 3215 : 												if (Timer[20] == 0 && BossAtt == FALSE && g_bGatt == FALSE && g_bSpike == FALSE)

	mov	eax, 4
	imul	ecx, eax, 20
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jne	$LN699@DXW_MainLo
	cmp	DWORD PTR ?BossAtt@@3HA, 0		; BossAtt
	jne	SHORT $LN699@DXW_MainLo
	cmp	DWORD PTR ?g_bGatt@@3HA, 0		; g_bGatt
	jne	SHORT $LN699@DXW_MainLo
	cmp	DWORD PTR ?g_bSpike@@3HA, 0		; g_bSpike
	jne	SHORT $LN699@DXW_MainLo

; 3216 : 												{
; 3217 : 													Timer[21] = 4;

	mov	eax, 4
	imul	ecx, eax, 21
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 4

; 3218 : 													g_bGatt = TRUE;

	mov	DWORD PTR ?g_bGatt@@3HA, 1		; g_bGatt

; 3219 : 													if (g_bBLL == TRUE)

	cmp	DWORD PTR ?g_bBLL@@3HA, 1		; g_bBLL
	jne	SHORT $LN701@DXW_MainLo

; 3220 : 													{
; 3221 : 														GAframe = 0;

	mov	DWORD PTR ?GAframe@@3HA, 0		; GAframe

; 3222 : 														BALL = TRUE;

	mov	DWORD PTR ?BALL@@3HA, 1			; BALL

; 3223 : 														BARR = FALSE;

	mov	DWORD PTR ?BARR@@3HA, 0			; BARR
	jmp	SHORT $LN702@DXW_MainLo
$LN701@DXW_MainLo:

; 3224 : 													}
; 3225 : 													else { GAframe = 30; BARR = TRUE; BALL = FALSE; }

	mov	DWORD PTR ?GAframe@@3HA, 30		; GAframe, 0000001eH
	mov	DWORD PTR ?BARR@@3HA, 1			; BARR
	mov	DWORD PTR ?BALL@@3HA, 0			; BALL
$LN702@DXW_MainLo:
	jmp	SHORT $LN703@DXW_MainLo
$LN699@DXW_MainLo:

; 3226 : 												}
; 3227 : 												else if (Timer[20] > 0)

	mov	eax, 4
	imul	ecx, eax, 20
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jle	SHORT $LN703@DXW_MainLo

; 3228 : 												{
; 3229 : 													Timer[20] -= 1;

	mov	eax, 4
	imul	ecx, eax, 20
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 20
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
$LN703@DXW_MainLo:

; 3230 : 												}
; 3231 : 												if (g_bGatt == TRUE)

	cmp	DWORD PTR ?g_bGatt@@3HA, 1		; g_bGatt
	jne	$LN753@DXW_MainLo

; 3232 : 												{
; 3233 : 													if (BALL == TRUE)

	cmp	DWORD PTR ?BALL@@3HA, 1			; BALL
	jne	SHORT $LN705@DXW_MainLo

; 3234 : 													{
; 3235 : 														::__PutAnimeSprite(g_pDDSBoss3Att3, bnX - 503, bnY - 515, 31, GAframe, 1137, 798, 0);

	push	0
	push	798					; 0000031eH
	push	1137					; 00000471H
	mov	eax, DWORD PTR ?GAframe@@3HA		; GAframe
	push	eax
	push	31					; 0000001fH
	mov	ecx, DWORD PTR _bnY$[ebp]
	sub	ecx, 515				; 00000203H
	push	ecx
	mov	edx, DWORD PTR _bnX$[ebp]
	sub	edx, 503				; 000001f7H
	push	edx
	mov	eax, DWORD PTR ?g_pDDSBoss3Att3@@3PAUIDirectDrawSurface7@@A ; g_pDDSBoss3Att3
	push	eax
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	SHORT $LN707@DXW_MainLo
$LN705@DXW_MainLo:

; 3236 : 													}
; 3237 : 													else if (BARR == TRUE)

	cmp	DWORD PTR ?BARR@@3HA, 1			; BARR
	jne	SHORT $LN707@DXW_MainLo

; 3238 : 													{
; 3239 : 														::__PutAnimeSprite(g_pDDSBoss3AttR3, bnX - 457, bnY - 515, 31, GAframe, 1137, 798, 0);

	push	0
	push	798					; 0000031eH
	push	1137					; 00000471H
	mov	eax, DWORD PTR ?GAframe@@3HA		; GAframe
	push	eax
	push	31					; 0000001fH
	mov	ecx, DWORD PTR _bnY$[ebp]
	sub	ecx, 515				; 00000203H
	push	ecx
	mov	edx, DWORD PTR _bnX$[ebp]
	sub	edx, 457				; 000001c9H
	push	edx
	mov	eax, DWORD PTR ?g_pDDSBoss3AttR3@@3PAUIDirectDrawSurface7@@A ; g_pDDSBoss3AttR3
	push	eax
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN707@DXW_MainLo:

; 3240 : 													}
; 3241 : 													if (Timer[21] > 0)

	mov	eax, 4
	imul	ecx, eax, 21
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jle	SHORT $LN708@DXW_MainLo

; 3242 : 													{
; 3243 : 														Timer[21] -= 1;

	mov	eax, 4
	imul	ecx, eax, 21
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 21
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
	jmp	$LN739@DXW_MainLo
$LN708@DXW_MainLo:

; 3244 : 													}
; 3245 : 													else if (Timer[21] == 0)

	mov	eax, 4
	imul	ecx, eax, 21
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jne	$LN739@DXW_MainLo

; 3246 : 													{
; 3247 : 														if (GAframe == 18 && BALL == TRUE)

	cmp	DWORD PTR ?GAframe@@3HA, 18		; GAframe, 00000012H
	jne	$LN711@DXW_MainLo
	cmp	DWORD PTR ?BALL@@3HA, 1			; BALL
	jne	$LN711@DXW_MainLo

; 3248 : 														{
; 3249 : 															Timer[22] = 30;

	mov	eax, 4
	imul	ecx, eax, 22
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 30	; 0000001eH

; 3250 : 															g_bSpike = TRUE;

	mov	DWORD PTR ?g_bSpike@@3HA, 1		; g_bSpike

; 3251 : 															P3randpat = rand () % 3;

	call	_rand
	cdq
	mov	ecx, 3
	idiv	ecx
	mov	DWORD PTR ?P3randpat@@3HA, edx		; P3randpat

; 3252 : 															if (P3randpat == P3randpat2)

	mov	eax, DWORD PTR ?P3randpat@@3HA		; P3randpat
	cmp	eax, DWORD PTR ?P3randpat2@@3HA		; P3randpat2
	jne	SHORT $LN717@DXW_MainLo

; 3253 : 															{
; 3254 : 																if (P3randpat == 0)

	cmp	DWORD PTR ?P3randpat@@3HA, 0		; P3randpat
	jne	SHORT $LN713@DXW_MainLo

; 3255 : 																{
; 3256 : 																	P3randpat = 1;

	mov	DWORD PTR ?P3randpat@@3HA, 1		; P3randpat
	jmp	SHORT $LN717@DXW_MainLo
$LN713@DXW_MainLo:

; 3257 : 																}
; 3258 : 																else if (P3randpat == 1)

	cmp	DWORD PTR ?P3randpat@@3HA, 1		; P3randpat
	jne	SHORT $LN715@DXW_MainLo

; 3259 : 																{
; 3260 : 																	P3randpat = 2;

	mov	DWORD PTR ?P3randpat@@3HA, 2		; P3randpat
	jmp	SHORT $LN717@DXW_MainLo
$LN715@DXW_MainLo:

; 3261 : 																}
; 3262 : 																else if (P3randpat == 2)

	cmp	DWORD PTR ?P3randpat@@3HA, 2		; P3randpat
	jne	SHORT $LN717@DXW_MainLo

; 3263 : 																{
; 3264 : 																	P3randpat = 0;

	mov	DWORD PTR ?P3randpat@@3HA, 0		; P3randpat
$LN717@DXW_MainLo:

; 3265 : 																}
; 3266 : 															}
; 3267 : 															if (P3randpat == 0)

	cmp	DWORD PTR ?P3randpat@@3HA, 0		; P3randpat
	jne	$LN718@DXW_MainLo

; 3268 : 															{
; 3269 : 																SpikeX[0] = nX - 500;

	mov	eax, DWORD PTR _nX$[ebp]
	sub	eax, 500				; 000001f4H
	mov	ecx, 4
	imul	edx, ecx, 0
	mov	DWORD PTR ?SpikeX@@3PAHA[edx], eax

; 3270 : 																SpikeX[1] = nX - 400;

	mov	eax, DWORD PTR _nX$[ebp]
	sub	eax, 400				; 00000190H
	mov	ecx, 4
	shl	ecx, 0
	mov	DWORD PTR ?SpikeX@@3PAHA[ecx], eax

; 3271 : 																SpikeX[2] = nX - 200;

	mov	eax, DWORD PTR _nX$[ebp]
	sub	eax, 200				; 000000c8H
	mov	ecx, 4
	shl	ecx, 1
	mov	DWORD PTR ?SpikeX@@3PAHA[ecx], eax

; 3272 : 																SpikeX[3] = nX - 50;

	mov	eax, DWORD PTR _nX$[ebp]
	sub	eax, 50					; 00000032H
	mov	ecx, 4
	imul	edx, ecx, 3
	mov	DWORD PTR ?SpikeX@@3PAHA[edx], eax

; 3273 : 																SpikeX[4] = nX;

	mov	eax, 4
	shl	eax, 2
	mov	ecx, DWORD PTR _nX$[ebp]
	mov	DWORD PTR ?SpikeX@@3PAHA[eax], ecx

; 3274 : 																SpikeX[5] = nX + 50;

	mov	eax, DWORD PTR _nX$[ebp]
	add	eax, 50					; 00000032H
	mov	ecx, 4
	imul	edx, ecx, 5
	mov	DWORD PTR ?SpikeX@@3PAHA[edx], eax

; 3275 : 																SpikeX[6] = nX + 200;

	mov	eax, DWORD PTR _nX$[ebp]
	add	eax, 200				; 000000c8H
	mov	ecx, 4
	imul	edx, ecx, 6
	mov	DWORD PTR ?SpikeX@@3PAHA[edx], eax

; 3276 : 																SpikeX[7] = nX + 400;

	mov	eax, DWORD PTR _nX$[ebp]
	add	eax, 400				; 00000190H
	mov	ecx, 4
	imul	edx, ecx, 7
	mov	DWORD PTR ?SpikeX@@3PAHA[edx], eax

; 3277 : 																SpikeX[8] = nX + 500;

	mov	eax, DWORD PTR _nX$[ebp]
	add	eax, 500				; 000001f4H
	mov	ecx, 4
	shl	ecx, 3
	mov	DWORD PTR ?SpikeX@@3PAHA[ecx], eax
$LN718@DXW_MainLo:

; 3278 : 															}
; 3279 : 															if (P3randpat == 1)

	cmp	DWORD PTR ?P3randpat@@3HA, 1		; P3randpat
	jne	$LN719@DXW_MainLo

; 3280 : 															{
; 3281 : 																SpikeX[0] = nX - 500;

	mov	eax, DWORD PTR _nX$[ebp]
	sub	eax, 500				; 000001f4H
	mov	ecx, 4
	imul	edx, ecx, 0
	mov	DWORD PTR ?SpikeX@@3PAHA[edx], eax

; 3282 : 																SpikeX[1] = nX - 300;

	mov	eax, DWORD PTR _nX$[ebp]
	sub	eax, 300				; 0000012cH
	mov	ecx, 4
	shl	ecx, 0
	mov	DWORD PTR ?SpikeX@@3PAHA[ecx], eax

; 3283 : 																SpikeX[2] = nX - 250;

	mov	eax, DWORD PTR _nX$[ebp]
	sub	eax, 250				; 000000faH
	mov	ecx, 4
	shl	ecx, 1
	mov	DWORD PTR ?SpikeX@@3PAHA[ecx], eax

; 3284 : 																SpikeX[3] = nX - 200;

	mov	eax, DWORD PTR _nX$[ebp]
	sub	eax, 200				; 000000c8H
	mov	ecx, 4
	imul	edx, ecx, 3
	mov	DWORD PTR ?SpikeX@@3PAHA[edx], eax

; 3285 : 																SpikeX[4] = nX;

	mov	eax, 4
	shl	eax, 2
	mov	ecx, DWORD PTR _nX$[ebp]
	mov	DWORD PTR ?SpikeX@@3PAHA[eax], ecx

; 3286 : 																SpikeX[5] = nX + 200;

	mov	eax, DWORD PTR _nX$[ebp]
	add	eax, 200				; 000000c8H
	mov	ecx, 4
	imul	edx, ecx, 5
	mov	DWORD PTR ?SpikeX@@3PAHA[edx], eax

; 3287 : 																SpikeX[6] = nX + 250;

	mov	eax, DWORD PTR _nX$[ebp]
	add	eax, 250				; 000000faH
	mov	ecx, 4
	imul	edx, ecx, 6
	mov	DWORD PTR ?SpikeX@@3PAHA[edx], eax

; 3288 : 																SpikeX[7] = nX + 300;

	mov	eax, DWORD PTR _nX$[ebp]
	add	eax, 300				; 0000012cH
	mov	ecx, 4
	imul	edx, ecx, 7
	mov	DWORD PTR ?SpikeX@@3PAHA[edx], eax

; 3289 : 																SpikeX[8] = nX + 500;

	mov	eax, DWORD PTR _nX$[ebp]
	add	eax, 500				; 000001f4H
	mov	ecx, 4
	shl	ecx, 3
	mov	DWORD PTR ?SpikeX@@3PAHA[ecx], eax
$LN719@DXW_MainLo:

; 3290 : 															}
; 3291 : 															if (P3randpat == 2)

	cmp	DWORD PTR ?P3randpat@@3HA, 2		; P3randpat
	jne	$LN720@DXW_MainLo

; 3292 : 															{
; 3293 : 																SpikeX[0] = nX - 400;

	mov	eax, DWORD PTR _nX$[ebp]
	sub	eax, 400				; 00000190H
	mov	ecx, 4
	imul	edx, ecx, 0
	mov	DWORD PTR ?SpikeX@@3PAHA[edx], eax

; 3294 : 																SpikeX[1] = nX - 200;

	mov	eax, DWORD PTR _nX$[ebp]
	sub	eax, 200				; 000000c8H
	mov	ecx, 4
	shl	ecx, 0
	mov	DWORD PTR ?SpikeX@@3PAHA[ecx], eax

; 3295 : 																SpikeX[2] = nX - 100;

	mov	eax, DWORD PTR _nX$[ebp]
	sub	eax, 100				; 00000064H
	mov	ecx, 4
	shl	ecx, 1
	mov	DWORD PTR ?SpikeX@@3PAHA[ecx], eax

; 3296 : 																SpikeX[3] = nX - 50;

	mov	eax, DWORD PTR _nX$[ebp]
	sub	eax, 50					; 00000032H
	mov	ecx, 4
	imul	edx, ecx, 3
	mov	DWORD PTR ?SpikeX@@3PAHA[edx], eax

; 3297 : 																SpikeX[4] = nX;

	mov	eax, 4
	shl	eax, 2
	mov	ecx, DWORD PTR _nX$[ebp]
	mov	DWORD PTR ?SpikeX@@3PAHA[eax], ecx

; 3298 : 																SpikeX[5] = nX + 50;

	mov	eax, DWORD PTR _nX$[ebp]
	add	eax, 50					; 00000032H
	mov	ecx, 4
	imul	edx, ecx, 5
	mov	DWORD PTR ?SpikeX@@3PAHA[edx], eax

; 3299 : 																SpikeX[6] = nX + 100;

	mov	eax, DWORD PTR _nX$[ebp]
	add	eax, 100				; 00000064H
	mov	ecx, 4
	imul	edx, ecx, 6
	mov	DWORD PTR ?SpikeX@@3PAHA[edx], eax

; 3300 : 																SpikeX[7] = nX + 200;

	mov	eax, DWORD PTR _nX$[ebp]
	add	eax, 200				; 000000c8H
	mov	ecx, 4
	imul	edx, ecx, 7
	mov	DWORD PTR ?SpikeX@@3PAHA[edx], eax

; 3301 : 																SpikeX[8] = nX + 400;

	mov	eax, DWORD PTR _nX$[ebp]
	add	eax, 400				; 00000190H
	mov	ecx, 4
	shl	ecx, 3
	mov	DWORD PTR ?SpikeX@@3PAHA[ecx], eax
$LN720@DXW_MainLo:

; 3302 : 															}
; 3303 : 															for (i = 0; i < 9; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN24@DXW_MainLo
$LN22@DXW_MainLo:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN24@DXW_MainLo:
	cmp	DWORD PTR _i$[ebp], 9
	jge	SHORT $LN23@DXW_MainLo

; 3304 : 															{
; 3305 : 																Spike[i] = { SpikeX[i]+ 10,380,SpikeX[i]+75,690 };

	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?SpikeX@@3PAHA[eax*4]
	add	ecx, 10					; 0000000aH
	mov	DWORD PTR $T23[ebp], ecx
	mov	DWORD PTR $T23[ebp+4], 380		; 0000017cH
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR ?SpikeX@@3PAHA[edx*4]
	add	eax, 75					; 0000004bH
	mov	DWORD PTR $T23[ebp+8], eax
	mov	DWORD PTR $T23[ebp+12], 690		; 000002b2H
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 4
	add	ecx, OFFSET ?Spike@@3PAUtagRECT@@A	; Spike
	mov	edx, DWORD PTR $T23[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T23[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T23[ebp+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR $T23[ebp+12]
	mov	DWORD PTR [ecx+12], eax

; 3306 : 															}

	jmp	$LN22@DXW_MainLo
$LN23@DXW_MainLo:

; 3307 : 															SpikeY = 300;

	mov	DWORD PTR ?SpikeY@@3HA, 300		; SpikeY, 0000012cH
$LN711@DXW_MainLo:

; 3308 : 														}
; 3309 : 														if (GAframe == 14 && BARR == TRUE)

	cmp	DWORD PTR ?GAframe@@3HA, 14		; GAframe, 0000000eH
	jne	$LN721@DXW_MainLo
	cmp	DWORD PTR ?BARR@@3HA, 1			; BARR
	jne	$LN721@DXW_MainLo

; 3310 : 														{
; 3311 : 															Timer[22] = 50;

	mov	eax, 4
	imul	ecx, eax, 22
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 50	; 00000032H

; 3312 : 															g_bSpike = TRUE;

	mov	DWORD PTR ?g_bSpike@@3HA, 1		; g_bSpike

; 3313 : 															P3randpat = rand() % 3;

	call	_rand
	cdq
	mov	ecx, 3
	idiv	ecx
	mov	DWORD PTR ?P3randpat@@3HA, edx		; P3randpat

; 3314 : 															if (P3randpat == P3randpat2)

	mov	eax, DWORD PTR ?P3randpat@@3HA		; P3randpat
	cmp	eax, DWORD PTR ?P3randpat2@@3HA		; P3randpat2
	jne	SHORT $LN727@DXW_MainLo

; 3315 : 															{
; 3316 : 																if (P3randpat == 0)

	cmp	DWORD PTR ?P3randpat@@3HA, 0		; P3randpat
	jne	SHORT $LN723@DXW_MainLo

; 3317 : 																{
; 3318 : 																	P3randpat = 1;

	mov	DWORD PTR ?P3randpat@@3HA, 1		; P3randpat
	jmp	SHORT $LN727@DXW_MainLo
$LN723@DXW_MainLo:

; 3319 : 																}
; 3320 : 																else if (P3randpat == 1)

	cmp	DWORD PTR ?P3randpat@@3HA, 1		; P3randpat
	jne	SHORT $LN725@DXW_MainLo

; 3321 : 																{
; 3322 : 																	P3randpat = 2;

	mov	DWORD PTR ?P3randpat@@3HA, 2		; P3randpat
	jmp	SHORT $LN727@DXW_MainLo
$LN725@DXW_MainLo:

; 3323 : 																}
; 3324 : 																else if (P3randpat == 2)

	cmp	DWORD PTR ?P3randpat@@3HA, 2		; P3randpat
	jne	SHORT $LN727@DXW_MainLo

; 3325 : 																{
; 3326 : 																	P3randpat = 0;

	mov	DWORD PTR ?P3randpat@@3HA, 0		; P3randpat
$LN727@DXW_MainLo:

; 3327 : 																}
; 3328 : 															}
; 3329 : 															if (P3randpat == 0)

	cmp	DWORD PTR ?P3randpat@@3HA, 0		; P3randpat
	jne	$LN728@DXW_MainLo

; 3330 : 															{
; 3331 : 																SpikeX[0] = nX - 500;

	mov	eax, DWORD PTR _nX$[ebp]
	sub	eax, 500				; 000001f4H
	mov	ecx, 4
	imul	edx, ecx, 0
	mov	DWORD PTR ?SpikeX@@3PAHA[edx], eax

; 3332 : 																SpikeX[1] = nX - 400;

	mov	eax, DWORD PTR _nX$[ebp]
	sub	eax, 400				; 00000190H
	mov	ecx, 4
	shl	ecx, 0
	mov	DWORD PTR ?SpikeX@@3PAHA[ecx], eax

; 3333 : 																SpikeX[2] = nX - 200;

	mov	eax, DWORD PTR _nX$[ebp]
	sub	eax, 200				; 000000c8H
	mov	ecx, 4
	shl	ecx, 1
	mov	DWORD PTR ?SpikeX@@3PAHA[ecx], eax

; 3334 : 																SpikeX[3] = nX - 50;

	mov	eax, DWORD PTR _nX$[ebp]
	sub	eax, 50					; 00000032H
	mov	ecx, 4
	imul	edx, ecx, 3
	mov	DWORD PTR ?SpikeX@@3PAHA[edx], eax

; 3335 : 																SpikeX[4] = nX;

	mov	eax, 4
	shl	eax, 2
	mov	ecx, DWORD PTR _nX$[ebp]
	mov	DWORD PTR ?SpikeX@@3PAHA[eax], ecx

; 3336 : 																SpikeX[5] = nX + 50;

	mov	eax, DWORD PTR _nX$[ebp]
	add	eax, 50					; 00000032H
	mov	ecx, 4
	imul	edx, ecx, 5
	mov	DWORD PTR ?SpikeX@@3PAHA[edx], eax

; 3337 : 																SpikeX[6] = nX + 200;

	mov	eax, DWORD PTR _nX$[ebp]
	add	eax, 200				; 000000c8H
	mov	ecx, 4
	imul	edx, ecx, 6
	mov	DWORD PTR ?SpikeX@@3PAHA[edx], eax

; 3338 : 																SpikeX[7] = nX + 400;

	mov	eax, DWORD PTR _nX$[ebp]
	add	eax, 400				; 00000190H
	mov	ecx, 4
	imul	edx, ecx, 7
	mov	DWORD PTR ?SpikeX@@3PAHA[edx], eax

; 3339 : 																SpikeX[8] = nX + 500;

	mov	eax, DWORD PTR _nX$[ebp]
	add	eax, 500				; 000001f4H
	mov	ecx, 4
	shl	ecx, 3
	mov	DWORD PTR ?SpikeX@@3PAHA[ecx], eax
$LN728@DXW_MainLo:

; 3340 : 															}
; 3341 : 															if (P3randpat == 1)

	cmp	DWORD PTR ?P3randpat@@3HA, 1		; P3randpat
	jne	$LN729@DXW_MainLo

; 3342 : 															{
; 3343 : 																SpikeX[0] = nX - 500;

	mov	eax, DWORD PTR _nX$[ebp]
	sub	eax, 500				; 000001f4H
	mov	ecx, 4
	imul	edx, ecx, 0
	mov	DWORD PTR ?SpikeX@@3PAHA[edx], eax

; 3344 : 																SpikeX[1] = nX - 300;

	mov	eax, DWORD PTR _nX$[ebp]
	sub	eax, 300				; 0000012cH
	mov	ecx, 4
	shl	ecx, 0
	mov	DWORD PTR ?SpikeX@@3PAHA[ecx], eax

; 3345 : 																SpikeX[2] = nX - 250;

	mov	eax, DWORD PTR _nX$[ebp]
	sub	eax, 250				; 000000faH
	mov	ecx, 4
	shl	ecx, 1
	mov	DWORD PTR ?SpikeX@@3PAHA[ecx], eax

; 3346 : 																SpikeX[3] = nX - 200;

	mov	eax, DWORD PTR _nX$[ebp]
	sub	eax, 200				; 000000c8H
	mov	ecx, 4
	imul	edx, ecx, 3
	mov	DWORD PTR ?SpikeX@@3PAHA[edx], eax

; 3347 : 																SpikeX[4] = nX;

	mov	eax, 4
	shl	eax, 2
	mov	ecx, DWORD PTR _nX$[ebp]
	mov	DWORD PTR ?SpikeX@@3PAHA[eax], ecx

; 3348 : 																SpikeX[5] = nX + 200;

	mov	eax, DWORD PTR _nX$[ebp]
	add	eax, 200				; 000000c8H
	mov	ecx, 4
	imul	edx, ecx, 5
	mov	DWORD PTR ?SpikeX@@3PAHA[edx], eax

; 3349 : 																SpikeX[6] = nX + 250;

	mov	eax, DWORD PTR _nX$[ebp]
	add	eax, 250				; 000000faH
	mov	ecx, 4
	imul	edx, ecx, 6
	mov	DWORD PTR ?SpikeX@@3PAHA[edx], eax

; 3350 : 																SpikeX[7] = nX + 300;

	mov	eax, DWORD PTR _nX$[ebp]
	add	eax, 300				; 0000012cH
	mov	ecx, 4
	imul	edx, ecx, 7
	mov	DWORD PTR ?SpikeX@@3PAHA[edx], eax

; 3351 : 																SpikeX[8] = nX + 500;

	mov	eax, DWORD PTR _nX$[ebp]
	add	eax, 500				; 000001f4H
	mov	ecx, 4
	shl	ecx, 3
	mov	DWORD PTR ?SpikeX@@3PAHA[ecx], eax
$LN729@DXW_MainLo:

; 3352 : 															}
; 3353 : 															if (P3randpat == 2)

	cmp	DWORD PTR ?P3randpat@@3HA, 2		; P3randpat
	jne	$LN730@DXW_MainLo

; 3354 : 															{
; 3355 : 																SpikeX[0] = nX - 400;

	mov	eax, DWORD PTR _nX$[ebp]
	sub	eax, 400				; 00000190H
	mov	ecx, 4
	imul	edx, ecx, 0
	mov	DWORD PTR ?SpikeX@@3PAHA[edx], eax

; 3356 : 																SpikeX[1] = nX - 200;

	mov	eax, DWORD PTR _nX$[ebp]
	sub	eax, 200				; 000000c8H
	mov	ecx, 4
	shl	ecx, 0
	mov	DWORD PTR ?SpikeX@@3PAHA[ecx], eax

; 3357 : 																SpikeX[2] = nX - 100;

	mov	eax, DWORD PTR _nX$[ebp]
	sub	eax, 100				; 00000064H
	mov	ecx, 4
	shl	ecx, 1
	mov	DWORD PTR ?SpikeX@@3PAHA[ecx], eax

; 3358 : 																SpikeX[3] = nX - 50;

	mov	eax, DWORD PTR _nX$[ebp]
	sub	eax, 50					; 00000032H
	mov	ecx, 4
	imul	edx, ecx, 3
	mov	DWORD PTR ?SpikeX@@3PAHA[edx], eax

; 3359 : 																SpikeX[4] = nX;

	mov	eax, 4
	shl	eax, 2
	mov	ecx, DWORD PTR _nX$[ebp]
	mov	DWORD PTR ?SpikeX@@3PAHA[eax], ecx

; 3360 : 																SpikeX[5] = nX + 50;

	mov	eax, DWORD PTR _nX$[ebp]
	add	eax, 50					; 00000032H
	mov	ecx, 4
	imul	edx, ecx, 5
	mov	DWORD PTR ?SpikeX@@3PAHA[edx], eax

; 3361 : 																SpikeX[6] = nX + 100;

	mov	eax, DWORD PTR _nX$[ebp]
	add	eax, 100				; 00000064H
	mov	ecx, 4
	imul	edx, ecx, 6
	mov	DWORD PTR ?SpikeX@@3PAHA[edx], eax

; 3362 : 																SpikeX[7] = nX + 200;

	mov	eax, DWORD PTR _nX$[ebp]
	add	eax, 200				; 000000c8H
	mov	ecx, 4
	imul	edx, ecx, 7
	mov	DWORD PTR ?SpikeX@@3PAHA[edx], eax

; 3363 : 																SpikeX[8] = nX + 400;

	mov	eax, DWORD PTR _nX$[ebp]
	add	eax, 400				; 00000190H
	mov	ecx, 4
	shl	ecx, 3
	mov	DWORD PTR ?SpikeX@@3PAHA[ecx], eax
$LN730@DXW_MainLo:

; 3364 : 															}
; 3365 : 															for (i = 0; i < 9; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN27@DXW_MainLo
$LN25@DXW_MainLo:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN27@DXW_MainLo:
	cmp	DWORD PTR _i$[ebp], 9
	jge	SHORT $LN26@DXW_MainLo

; 3366 : 															{
; 3367 : 																Spike[i] = { SpikeX[i] + 10,380,SpikeX[i] + 75,690 };

	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?SpikeX@@3PAHA[eax*4]
	add	ecx, 10					; 0000000aH
	mov	DWORD PTR $T22[ebp], ecx
	mov	DWORD PTR $T22[ebp+4], 380		; 0000017cH
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR ?SpikeX@@3PAHA[edx*4]
	add	eax, 75					; 0000004bH
	mov	DWORD PTR $T22[ebp+8], eax
	mov	DWORD PTR $T22[ebp+12], 690		; 000002b2H
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 4
	add	ecx, OFFSET ?Spike@@3PAUtagRECT@@A	; Spike
	mov	edx, DWORD PTR $T22[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T22[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T22[ebp+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR $T22[ebp+12]
	mov	DWORD PTR [ecx+12], eax

; 3368 : 															}

	jmp	$LN25@DXW_MainLo
$LN26@DXW_MainLo:

; 3369 : 															SpikeY = 300;

	mov	DWORD PTR ?SpikeY@@3HA, 300		; SpikeY, 0000012cH
$LN721@DXW_MainLo:

; 3370 : 														}
; 3371 : 														if (BALL == TRUE)

	cmp	DWORD PTR ?BALL@@3HA, 1			; BALL
	jne	SHORT $LN731@DXW_MainLo

; 3372 : 														{
; 3373 : 															GAframe++;

	mov	eax, DWORD PTR ?GAframe@@3HA		; GAframe
	add	eax, 1
	mov	DWORD PTR ?GAframe@@3HA, eax		; GAframe
	jmp	SHORT $LN733@DXW_MainLo
$LN731@DXW_MainLo:

; 3374 : 														}
; 3375 : 														else if (BARR == TRUE)

	cmp	DWORD PTR ?BARR@@3HA, 1			; BARR
	jne	SHORT $LN733@DXW_MainLo

; 3376 : 														{
; 3377 : 															GAframe--;

	mov	eax, DWORD PTR ?GAframe@@3HA		; GAframe
	sub	eax, 1
	mov	DWORD PTR ?GAframe@@3HA, eax		; GAframe
$LN733@DXW_MainLo:

; 3378 : 														}
; 3379 : 														if (GAframe < 16 && BALL == TRUE)

	cmp	DWORD PTR ?GAframe@@3HA, 16		; GAframe, 00000010H
	jge	SHORT $LN734@DXW_MainLo
	cmp	DWORD PTR ?BALL@@3HA, 1			; BALL
	jne	SHORT $LN734@DXW_MainLo

; 3380 : 														{
; 3381 : 															Timer[21] = 4;

	mov	eax, 4
	imul	ecx, eax, 21
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 4
	jmp	SHORT $LN736@DXW_MainLo
$LN734@DXW_MainLo:

; 3382 : 														}
; 3383 : 														else if (GAframe > 16 && BALL == TRUE)

	cmp	DWORD PTR ?GAframe@@3HA, 16		; GAframe, 00000010H
	jle	SHORT $LN736@DXW_MainLo
	cmp	DWORD PTR ?BALL@@3HA, 1			; BALL
	jne	SHORT $LN736@DXW_MainLo

; 3384 : 														{
; 3385 : 															Timer[21] = 3;

	mov	eax, 4
	imul	ecx, eax, 21
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 3
$LN736@DXW_MainLo:

; 3386 : 														}
; 3387 : 														if (GAframe >16 && BARR == TRUE)

	cmp	DWORD PTR ?GAframe@@3HA, 16		; GAframe, 00000010H
	jle	SHORT $LN737@DXW_MainLo
	cmp	DWORD PTR ?BARR@@3HA, 1			; BARR
	jne	SHORT $LN737@DXW_MainLo

; 3388 : 														{
; 3389 : 															Timer[21] = 4;

	mov	eax, 4
	imul	ecx, eax, 21
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 4
	jmp	SHORT $LN739@DXW_MainLo
$LN737@DXW_MainLo:

; 3390 : 														}
; 3391 : 														else if (GAframe < 16 && BARR == TRUE)

	cmp	DWORD PTR ?GAframe@@3HA, 16		; GAframe, 00000010H
	jge	SHORT $LN739@DXW_MainLo
	cmp	DWORD PTR ?BARR@@3HA, 1			; BARR
	jne	SHORT $LN739@DXW_MainLo

; 3392 : 														{
; 3393 : 															Timer[21] = 3;

	mov	eax, 4
	imul	ecx, eax, 21
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 3
$LN739@DXW_MainLo:

; 3394 : 														}
; 3395 : 													}
; 3396 : 													if (GAframe == 30 && BALL == TRUE)

	cmp	DWORD PTR ?GAframe@@3HA, 30		; GAframe, 0000001eH
	jne	$LN746@DXW_MainLo
	cmp	DWORD PTR ?BALL@@3HA, 1			; BALL
	jne	$LN746@DXW_MainLo

; 3397 : 													{
; 3398 : 														Timer[20] = (rand() % 450) + 300;

	call	_rand
	cdq
	mov	ecx, 450				; 000001c2H
	idiv	ecx
	add	edx, 300				; 0000012cH
	mov	eax, 4
	imul	ecx, eax, 20
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx

; 3399 : 														if (P3HP < 1000)

	cmp	DWORD PTR ?P3HP@@3HA, 1000		; P3HP, 000003e8H
	jge	SHORT $LN741@DXW_MainLo

; 3400 : 														{
; 3401 : 															Timer[20] -= 250;

	mov	eax, 4
	imul	ecx, eax, 20
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 250				; 000000faH
	mov	eax, 4
	imul	ecx, eax, 20
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
$LN741@DXW_MainLo:

; 3402 : 														}
; 3403 : 														Timer[21] = 0;

	mov	eax, 4
	imul	ecx, eax, 21
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0

; 3404 : 														g_bGatt = FALSE;

	mov	DWORD PTR ?g_bGatt@@3HA, 0		; g_bGatt

; 3405 : 														BALL = FALSE;

	mov	DWORD PTR ?BALL@@3HA, 0			; BALL

; 3406 : 														BARR = FALSE;

	mov	DWORD PTR ?BARR@@3HA, 0			; BARR

; 3407 : 														GAframe = 0;

	mov	DWORD PTR ?GAframe@@3HA, 0		; GAframe

; 3408 : 														if (P3randpat == 0)

	cmp	DWORD PTR ?P3randpat@@3HA, 0		; P3randpat
	jne	SHORT $LN742@DXW_MainLo

; 3409 : 														{
; 3410 : 															P3randpat2 = 0;

	mov	DWORD PTR ?P3randpat2@@3HA, 0		; P3randpat2
	jmp	SHORT $LN746@DXW_MainLo
$LN742@DXW_MainLo:

; 3411 : 														}
; 3412 : 														else if (P3randpat == 1)

	cmp	DWORD PTR ?P3randpat@@3HA, 1		; P3randpat
	jne	SHORT $LN744@DXW_MainLo

; 3413 : 														{
; 3414 : 															P3randpat2 = 1;

	mov	DWORD PTR ?P3randpat2@@3HA, 1		; P3randpat2
	jmp	SHORT $LN746@DXW_MainLo
$LN744@DXW_MainLo:

; 3415 : 														}
; 3416 : 														else if (P3randpat == 2)

	cmp	DWORD PTR ?P3randpat@@3HA, 2		; P3randpat
	jne	SHORT $LN746@DXW_MainLo

; 3417 : 														{
; 3418 : 															P3randpat2 = 2;

	mov	DWORD PTR ?P3randpat2@@3HA, 2		; P3randpat2
$LN746@DXW_MainLo:

; 3419 : 														}
; 3420 : 													}
; 3421 : 													if (GAframe == 0 && BARR == TRUE)

	cmp	DWORD PTR ?GAframe@@3HA, 0		; GAframe
	jne	$LN753@DXW_MainLo
	cmp	DWORD PTR ?BARR@@3HA, 1			; BARR
	jne	$LN753@DXW_MainLo

; 3422 : 													{
; 3423 : 														Timer[20] = (rand() % 450) + 300;

	call	_rand
	cdq
	mov	ecx, 450				; 000001c2H
	idiv	ecx
	add	edx, 300				; 0000012cH
	mov	eax, 4
	imul	ecx, eax, 20
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx

; 3424 : 														if (P3HP < 1000)

	cmp	DWORD PTR ?P3HP@@3HA, 1000		; P3HP, 000003e8H
	jge	SHORT $LN748@DXW_MainLo

; 3425 : 														{
; 3426 : 															Timer[20] -= 250;

	mov	eax, 4
	imul	ecx, eax, 20
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 250				; 000000faH
	mov	eax, 4
	imul	ecx, eax, 20
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
$LN748@DXW_MainLo:

; 3427 : 														}
; 3428 : 														Timer[21] = 0;

	mov	eax, 4
	imul	ecx, eax, 21
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0

; 3429 : 														g_bGatt = FALSE;

	mov	DWORD PTR ?g_bGatt@@3HA, 0		; g_bGatt

; 3430 : 														BALL = FALSE;

	mov	DWORD PTR ?BALL@@3HA, 0			; BALL

; 3431 : 														BARR = FALSE;

	mov	DWORD PTR ?BARR@@3HA, 0			; BARR

; 3432 : 														GAframe = 0;

	mov	DWORD PTR ?GAframe@@3HA, 0		; GAframe

; 3433 : 														if (P3randpat == 0)

	cmp	DWORD PTR ?P3randpat@@3HA, 0		; P3randpat
	jne	SHORT $LN749@DXW_MainLo

; 3434 : 														{
; 3435 : 															P3randpat2 = 0;

	mov	DWORD PTR ?P3randpat2@@3HA, 0		; P3randpat2
	jmp	SHORT $LN753@DXW_MainLo
$LN749@DXW_MainLo:

; 3436 : 														}
; 3437 : 														else if (P3randpat == 1)

	cmp	DWORD PTR ?P3randpat@@3HA, 1		; P3randpat
	jne	SHORT $LN751@DXW_MainLo

; 3438 : 														{
; 3439 : 															P3randpat2 = 1;

	mov	DWORD PTR ?P3randpat2@@3HA, 1		; P3randpat2
	jmp	SHORT $LN753@DXW_MainLo
$LN751@DXW_MainLo:

; 3440 : 														}
; 3441 : 														else if (P3randpat == 2)

	cmp	DWORD PTR ?P3randpat@@3HA, 2		; P3randpat
	jne	SHORT $LN753@DXW_MainLo

; 3442 : 														{
; 3443 : 															P3randpat2 = 2;

	mov	DWORD PTR ?P3randpat2@@3HA, 2		; P3randpat2
$LN753@DXW_MainLo:

; 3444 : 														}
; 3445 : 													}
; 3446 : 												}
; 3447 : 												if (Timer[22] > 0 && g_bSpike == TRUE)

	mov	eax, 4
	imul	ecx, eax, 22
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jle	SHORT $LN754@DXW_MainLo
	cmp	DWORD PTR ?g_bSpike@@3HA, 1		; g_bSpike
	jne	SHORT $LN754@DXW_MainLo

; 3448 : 												{
; 3449 : 													Timer[22] -= 1;

	mov	eax, 4
	imul	ecx, eax, 22
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 22
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx

; 3450 : 													for (i = 0; i < 9; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN30@DXW_MainLo
$LN28@DXW_MainLo:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN30@DXW_MainLo:
	cmp	DWORD PTR _i$[ebp], 9
	jge	SHORT $LN29@DXW_MainLo

; 3451 : 													{
; 3452 : 														::__PutSprite(g_pDDSDHole,SpikeX[i], 600);

	push	600					; 00000258H
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?SpikeX@@3PAHA[eax*4]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSDHole@@3PAUIDirectDrawSurface7@@A ; g_pDDSDHole
	push	edx
	call	?__PutSprite@@YAXPAUIDirectDrawSurface7@@HH@Z ; __PutSprite
	add	esp, 12					; 0000000cH

; 3453 : 													}

	jmp	SHORT $LN28@DXW_MainLo
$LN29@DXW_MainLo:

; 3454 : 												}
; 3455 : 												else if (Timer[22] == 0 && g_bSpike == TRUE)

	jmp	SHORT $LN756@DXW_MainLo
$LN754@DXW_MainLo:
	mov	eax, 4
	imul	ecx, eax, 22
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jne	SHORT $LN756@DXW_MainLo
	cmp	DWORD PTR ?g_bSpike@@3HA, 1		; g_bSpike
	jne	SHORT $LN756@DXW_MainLo

; 3456 : 												{
; 3457 : 													Timer[23] = 3;

	mov	eax, 4
	imul	ecx, eax, 23
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 3

; 3458 : 													Timer[22] = -1;

	mov	eax, 4
	imul	ecx, eax, 22
	mov	DWORD PTR ?Timer@@3PAHA[ecx], -1

; 3459 : 													SPframe = 0;

	mov	DWORD PTR ?SPframe@@3HA, 0		; SPframe
$LN756@DXW_MainLo:

; 3460 : 												}
; 3461 : 												if (Timer[22] == -1 && g_bSpike == TRUE & Timer[23] > 0)

	mov	eax, 4
	imul	ecx, eax, 22
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], -1
	jne	$LN35@DXW_MainLo
	cmp	DWORD PTR ?g_bSpike@@3HA, 1		; g_bSpike
	jne	SHORT $LN1003@DXW_MainLo
	mov	DWORD PTR tv4566[ebp], 1
	jmp	SHORT $LN1004@DXW_MainLo
$LN1003@DXW_MainLo:
	mov	DWORD PTR tv4566[ebp], 0
$LN1004@DXW_MainLo:
	mov	eax, 4
	imul	ecx, eax, 23
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jle	SHORT $LN1005@DXW_MainLo
	mov	DWORD PTR tv4570[ebp], 1
	jmp	SHORT $LN1006@DXW_MainLo
$LN1005@DXW_MainLo:
	mov	DWORD PTR tv4570[ebp], 0
$LN1006@DXW_MainLo:
	mov	edx, DWORD PTR tv4566[ebp]
	and	edx, DWORD PTR tv4570[ebp]
	je	$LN35@DXW_MainLo

; 3462 : 												{
; 3463 : 													Timer[23] -= 1;

	mov	eax, 4
	imul	ecx, eax, 23
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 23
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx

; 3464 : 													if (SPframe == 15)

	cmp	DWORD PTR ?SPframe@@3HA, 15		; SPframe, 0000000fH
	jne	SHORT $LN758@DXW_MainLo

; 3465 : 													{
; 3466 : 														Timer[22] = 0;

	mov	eax, 4
	imul	ecx, eax, 22
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0

; 3467 : 														g_bSpike = FALSE;

	mov	DWORD PTR ?g_bSpike@@3HA, 0		; g_bSpike

; 3468 : 														Timer[23] = 0;

	mov	eax, 4
	imul	ecx, eax, 23
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0

; 3469 : 														SPframe = 0;

	mov	DWORD PTR ?SPframe@@3HA, 0		; SPframe
$LN758@DXW_MainLo:

; 3470 : 													}
; 3471 : 													if (g_bSpike == TRUE)

	cmp	DWORD PTR ?g_bSpike@@3HA, 1		; g_bSpike
	jne	$LN35@DXW_MainLo

; 3472 : 													{
; 3473 : 														for (i = 0; i < 9; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN33@DXW_MainLo
$LN31@DXW_MainLo:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN33@DXW_MainLo:
	cmp	DWORD PTR _i$[ebp], 9
	jge	SHORT $LN32@DXW_MainLo

; 3474 : 														{
; 3475 : 															::__PutAnimeSprite(g_pDDSGroundAtt, SpikeX[i] - 130, 40, 15, SPframe, 422, 629, 0);

	push	0
	push	629					; 00000275H
	push	422					; 000001a6H
	mov	eax, DWORD PTR ?SPframe@@3HA		; SPframe
	push	eax
	push	15					; 0000000fH
	push	40					; 00000028H
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR ?SpikeX@@3PAHA[ecx*4]
	sub	edx, 130				; 00000082H
	push	edx
	mov	eax, DWORD PTR ?g_pDDSGroundAtt@@3PAUIDirectDrawSurface7@@A ; g_pDDSGroundAtt
	push	eax
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H

; 3476 : 														}

	jmp	SHORT $LN31@DXW_MainLo
$LN32@DXW_MainLo:

; 3477 : 														if (SPframe > 1 && SPframe <= 4)

	cmp	DWORD PTR ?SPframe@@3HA, 1		; SPframe
	jle	$LN35@DXW_MainLo
	cmp	DWORD PTR ?SPframe@@3HA, 4		; SPframe
	jg	$LN35@DXW_MainLo

; 3478 : 														{
; 3479 : 															for (i = 0; i < 88; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN36@DXW_MainLo
$LN34@DXW_MainLo:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN36@DXW_MainLo:
	cmp	DWORD PTR _i$[ebp], 88			; 00000058H
	jge	$LN35@DXW_MainLo

; 3480 : 															{
; 3481 : 																if (IntersectRect(&rcDest, &Spike[i], &PHIT))

	mov	esi, esp
	push	OFFSET ?PHIT@@3UtagRECT@@A		; PHIT
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, OFFSET ?Spike@@3PAUtagRECT@@A	; Spike
	push	eax
	push	OFFSET ?rcDest@@3UtagRECT@@A		; rcDest
	call	DWORD PTR __imp__IntersectRect@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN764@DXW_MainLo

; 3482 : 																{
; 3483 : 																	PlayerHP -= 1000;

	mov	eax, DWORD PTR ?PlayerHP@@3HA		; PlayerHP
	sub	eax, 1000				; 000003e8H
	mov	DWORD PTR ?PlayerHP@@3HA, eax		; PlayerHP

; 3484 : 																	Spike[i] = { 0,0,1,1 };

	mov	DWORD PTR $T21[ebp], 0
	mov	DWORD PTR $T21[ebp+4], 0
	mov	DWORD PTR $T21[ebp+8], 1
	mov	DWORD PTR $T21[ebp+12], 1
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 4
	add	eax, OFFSET ?Spike@@3PAUtagRECT@@A	; Spike
	mov	ecx, DWORD PTR $T21[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T21[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR $T21[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR $T21[ebp+12]
	mov	DWORD PTR [eax+12], edx

; 3485 : 																	if (PHplay == FALSE)

	cmp	DWORD PTR ?PHplay@@3HA, 0		; PHplay
	jne	SHORT $LN762@DXW_MainLo

; 3486 : 																	{
; 3487 : 																		PHplay = TRUE;

	mov	DWORD PTR ?PHplay@@3HA, 1		; PHplay

; 3488 : 																		Timer[25] = 3;

	mov	eax, 4
	imul	ecx, eax, 25
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 3

; 3489 : 																		PHframe = 0;

	mov	DWORD PTR ?PHframe@@3HA, 0		; PHframe
	jmp	SHORT $LN764@DXW_MainLo
$LN762@DXW_MainLo:

; 3490 : 																	}
; 3491 : 																	else if (PHplay == TRUE)

	cmp	DWORD PTR ?PHplay@@3HA, 1		; PHplay
	jne	SHORT $LN764@DXW_MainLo

; 3492 : 																	{
; 3493 : 																		PHplay = TRUE;

	mov	DWORD PTR ?PHplay@@3HA, 1		; PHplay

; 3494 : 																		Timer[25] = 3;

	mov	eax, 4
	imul	ecx, eax, 25
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 3

; 3495 : 																		PHframe = 0;

	mov	DWORD PTR ?PHframe@@3HA, 0		; PHframe
$LN764@DXW_MainLo:

; 3496 : 																	}
; 3497 : 																}
; 3498 : 															}

	jmp	$LN34@DXW_MainLo
$LN35@DXW_MainLo:

; 3499 : 														}
; 3500 : 													}
; 3501 : 												}
; 3502 : 												if (Timer[23] == 0 && g_bSpike ==TRUE && Timer[22] == -1) 

	mov	eax, 4
	imul	ecx, eax, 23
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jne	SHORT $LN765@DXW_MainLo
	cmp	DWORD PTR ?g_bSpike@@3HA, 1		; g_bSpike
	jne	SHORT $LN765@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 22
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], -1
	jne	SHORT $LN765@DXW_MainLo

; 3503 : 												{
; 3504 : 													SPframe += 1;

	mov	eax, DWORD PTR ?SPframe@@3HA		; SPframe
	add	eax, 1
	mov	DWORD PTR ?SPframe@@3HA, eax		; SPframe

; 3505 : 													Timer[23] = 3;

	mov	eax, 4
	imul	ecx, eax, 23
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 3
$LN765@DXW_MainLo:

; 3506 : 												}
; 3507 : 												if (Timer[17] == 0 && BossAtt == FALSE && g_bGatt == FALSE)

	mov	eax, 4
	imul	ecx, eax, 17
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jne	SHORT $LN766@DXW_MainLo
	cmp	DWORD PTR ?BossAtt@@3HA, 0		; BossAtt
	jne	SHORT $LN766@DXW_MainLo
	cmp	DWORD PTR ?g_bGatt@@3HA, 0		; g_bGatt
	jne	SHORT $LN766@DXW_MainLo

; 3508 : 												{
; 3509 : 													Timer[16] = 4;

	mov	eax, 4
	shl	eax, 4
	mov	DWORD PTR ?Timer@@3PAHA[eax], 4

; 3510 : 													BossAtt = TRUE;

	mov	DWORD PTR ?BossAtt@@3HA, 1		; BossAtt

; 3511 : 													if (g_bBLL == TRUE)

	cmp	DWORD PTR ?g_bBLL@@3HA, 1		; g_bBLL
	jne	SHORT $LN768@DXW_MainLo

; 3512 : 													{
; 3513 : 														BKframe = 0;

	mov	DWORD PTR ?BKframe@@3HA, 0		; BKframe

; 3514 : 														BAL = TRUE;

	mov	DWORD PTR ?BAL@@3HA, 1			; BAL

; 3515 : 														BAR = FALSE;

	mov	DWORD PTR ?BAR@@3HA, 0			; BAR
	jmp	SHORT $LN769@DXW_MainLo
$LN768@DXW_MainLo:

; 3516 : 													}
; 3517 : 													else { BKframe = 23; BAR = TRUE; BAL = FALSE; }

	mov	DWORD PTR ?BKframe@@3HA, 23		; BKframe, 00000017H
	mov	DWORD PTR ?BAR@@3HA, 1			; BAR
	mov	DWORD PTR ?BAL@@3HA, 0			; BAL
$LN769@DXW_MainLo:
	jmp	SHORT $LN770@DXW_MainLo
$LN766@DXW_MainLo:

; 3518 : 												}
; 3519 : 												else if (Timer[17] > 0)

	mov	eax, 4
	imul	ecx, eax, 17
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jle	SHORT $LN770@DXW_MainLo

; 3520 : 												{
; 3521 : 													Timer[17] -= 1;

	mov	eax, 4
	imul	ecx, eax, 17
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 17
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
$LN770@DXW_MainLo:

; 3522 : 												}
; 3523 : 												if (BossAtt == TRUE)

	cmp	DWORD PTR ?BossAtt@@3HA, 1		; BossAtt
	jne	$LN789@DXW_MainLo

; 3524 : 												{
; 3525 : 													if (BAL == TRUE)

	cmp	DWORD PTR ?BAL@@3HA, 1			; BAL
	jne	SHORT $LN772@DXW_MainLo

; 3526 : 													{
; 3527 : 														::__PutAnimeSprite(g_pDDSBoss3Att, bnX - 263, bnY - 151, 24, BKframe, 670, 384, 0);

	push	0
	push	384					; 00000180H
	push	670					; 0000029eH
	mov	eax, DWORD PTR ?BKframe@@3HA		; BKframe
	push	eax
	push	24					; 00000018H
	mov	ecx, DWORD PTR _bnY$[ebp]
	sub	ecx, 151				; 00000097H
	push	ecx
	mov	edx, DWORD PTR _bnX$[ebp]
	sub	edx, 263				; 00000107H
	push	edx
	mov	eax, DWORD PTR ?g_pDDSBoss3Att@@3PAUIDirectDrawSurface7@@A ; g_pDDSBoss3Att
	push	eax
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	SHORT $LN774@DXW_MainLo
$LN772@DXW_MainLo:

; 3528 : 													}
; 3529 : 													else if (BAR == TRUE)

	cmp	DWORD PTR ?BAR@@3HA, 1			; BAR
	jne	SHORT $LN774@DXW_MainLo

; 3530 : 													{
; 3531 : 														::__PutAnimeSprite(g_pDDSBoss3AttR, bnX - 257, bnY - 151, 24, BKframe, 670, 384, 0);

	push	0
	push	384					; 00000180H
	push	670					; 0000029eH
	mov	eax, DWORD PTR ?BKframe@@3HA		; BKframe
	push	eax
	push	24					; 00000018H
	mov	ecx, DWORD PTR _bnY$[ebp]
	sub	ecx, 151				; 00000097H
	push	ecx
	mov	edx, DWORD PTR _bnX$[ebp]
	sub	edx, 257				; 00000101H
	push	edx
	mov	eax, DWORD PTR ?g_pDDSBoss3AttR@@3PAUIDirectDrawSurface7@@A ; g_pDDSBoss3AttR
	push	eax
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN774@DXW_MainLo:

; 3532 : 													}
; 3533 : 													if (Timer[16] > 0)

	mov	eax, 4
	shl	eax, 4
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 0
	jle	SHORT $LN775@DXW_MainLo

; 3534 : 													{
; 3535 : 														Timer[16] -= 1;

	mov	eax, 4
	shl	eax, 4
	mov	ecx, DWORD PTR ?Timer@@3PAHA[eax]
	sub	ecx, 1
	mov	edx, 4
	shl	edx, 4
	mov	DWORD PTR ?Timer@@3PAHA[edx], ecx
	jmp	$LN786@DXW_MainLo
$LN775@DXW_MainLo:

; 3536 : 													}
; 3537 : 													else if (Timer[16] == 0)

	mov	eax, 4
	shl	eax, 4
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 0
	jne	$LN786@DXW_MainLo

; 3538 : 													{
; 3539 : 														if (BAL == TRUE)

	cmp	DWORD PTR ?BAL@@3HA, 1			; BAL
	jne	SHORT $LN778@DXW_MainLo

; 3540 : 														{
; 3541 : 															BKframe++;

	mov	eax, DWORD PTR ?BKframe@@3HA		; BKframe
	add	eax, 1
	mov	DWORD PTR ?BKframe@@3HA, eax		; BKframe
	jmp	SHORT $LN780@DXW_MainLo
$LN778@DXW_MainLo:

; 3542 : 														}
; 3543 : 														else if (BAR == TRUE)

	cmp	DWORD PTR ?BAR@@3HA, 1			; BAR
	jne	SHORT $LN780@DXW_MainLo

; 3544 : 														{
; 3545 : 															BKframe--;

	mov	eax, DWORD PTR ?BKframe@@3HA		; BKframe
	sub	eax, 1
	mov	DWORD PTR ?BKframe@@3HA, eax		; BKframe
$LN780@DXW_MainLo:

; 3546 : 														}
; 3547 : 														if (BKframe < 12 && BAL == TRUE)

	cmp	DWORD PTR ?BKframe@@3HA, 12		; BKframe, 0000000cH
	jge	SHORT $LN781@DXW_MainLo
	cmp	DWORD PTR ?BAL@@3HA, 1			; BAL
	jne	SHORT $LN781@DXW_MainLo

; 3548 : 														{
; 3549 : 															Timer[16] = 4;

	mov	eax, 4
	shl	eax, 4
	mov	DWORD PTR ?Timer@@3PAHA[eax], 4
	jmp	SHORT $LN783@DXW_MainLo
$LN781@DXW_MainLo:

; 3550 : 														}
; 3551 : 														else if (BKframe > 12 && BAL == TRUE)

	cmp	DWORD PTR ?BKframe@@3HA, 12		; BKframe, 0000000cH
	jle	SHORT $LN783@DXW_MainLo
	cmp	DWORD PTR ?BAL@@3HA, 1			; BAL
	jne	SHORT $LN783@DXW_MainLo

; 3552 : 														{
; 3553 : 															Timer[16] = 3;

	mov	eax, 4
	shl	eax, 4
	mov	DWORD PTR ?Timer@@3PAHA[eax], 3
$LN783@DXW_MainLo:

; 3554 : 														}
; 3555 : 														if (BKframe >11 && BAR == TRUE)

	cmp	DWORD PTR ?BKframe@@3HA, 11		; BKframe, 0000000bH
	jle	SHORT $LN784@DXW_MainLo
	cmp	DWORD PTR ?BAR@@3HA, 1			; BAR
	jne	SHORT $LN784@DXW_MainLo

; 3556 : 														{
; 3557 : 															Timer[16] = 4;

	mov	eax, 4
	shl	eax, 4
	mov	DWORD PTR ?Timer@@3PAHA[eax], 4
	jmp	SHORT $LN786@DXW_MainLo
$LN784@DXW_MainLo:

; 3558 : 														}
; 3559 : 														else if (BKframe < 11 && BAR == TRUE)

	cmp	DWORD PTR ?BKframe@@3HA, 11		; BKframe, 0000000bH
	jge	SHORT $LN786@DXW_MainLo
	cmp	DWORD PTR ?BAR@@3HA, 1			; BAR
	jne	SHORT $LN786@DXW_MainLo

; 3560 : 														{
; 3561 : 															Timer[16] = 3;

	mov	eax, 4
	shl	eax, 4
	mov	DWORD PTR ?Timer@@3PAHA[eax], 3
$LN786@DXW_MainLo:

; 3562 : 														}
; 3563 : 													}
; 3564 : 													if (BKframe == 23 && BAL == TRUE)

	cmp	DWORD PTR ?BKframe@@3HA, 23		; BKframe, 00000017H
	jne	$LN787@DXW_MainLo
	cmp	DWORD PTR ?BAL@@3HA, 1			; BAL
	jne	$LN787@DXW_MainLo

; 3565 : 													{
; 3566 : 														Timer[17] = (rand() % 150) + 200;

	call	_rand
	cdq
	mov	ecx, 150				; 00000096H
	idiv	ecx
	add	edx, 200				; 000000c8H
	mov	eax, 4
	imul	ecx, eax, 17
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx

; 3567 : 														if (P3HP < 1000)

	cmp	DWORD PTR ?P3HP@@3HA, 1000		; P3HP, 000003e8H
	jge	SHORT $LN788@DXW_MainLo

; 3568 : 														{
; 3569 : 															Timer[17] -= 50;

	mov	eax, 4
	imul	ecx, eax, 17
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 50					; 00000032H
	mov	eax, 4
	imul	ecx, eax, 17
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
$LN788@DXW_MainLo:

; 3570 : 														}
; 3571 : 														Timer[16] = 0;

	mov	eax, 4
	shl	eax, 4
	mov	DWORD PTR ?Timer@@3PAHA[eax], 0

; 3572 : 														BossAtt = FALSE;

	mov	DWORD PTR ?BossAtt@@3HA, 0		; BossAtt

; 3573 : 														BAL = FALSE;

	mov	DWORD PTR ?BAL@@3HA, 0			; BAL

; 3574 : 														BAR = FALSE;

	mov	DWORD PTR ?BAR@@3HA, 0			; BAR

; 3575 : 														KnockHIT = FALSE;

	mov	DWORD PTR ?KnockHIT@@3HA, 0		; KnockHIT

; 3576 : 														BKframe = 0;

	mov	DWORD PTR ?BKframe@@3HA, 0		; BKframe

; 3577 : 														Knock = { 0,0,1,1 };

	mov	DWORD PTR $T20[ebp], 0
	mov	DWORD PTR $T20[ebp+4], 0
	mov	DWORD PTR $T20[ebp+8], 1
	mov	DWORD PTR $T20[ebp+12], 1
	mov	eax, DWORD PTR $T20[ebp]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A, eax
	mov	ecx, DWORD PTR $T20[ebp+4]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+4, ecx
	mov	edx, DWORD PTR $T20[ebp+8]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+8, edx
	mov	eax, DWORD PTR $T20[ebp+12]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+12, eax
$LN787@DXW_MainLo:

; 3578 : 													}
; 3579 : 													if (BKframe == 0 && BAR == TRUE)

	cmp	DWORD PTR ?BKframe@@3HA, 0		; BKframe
	jne	$LN789@DXW_MainLo
	cmp	DWORD PTR ?BAR@@3HA, 1			; BAR
	jne	$LN789@DXW_MainLo

; 3580 : 													{
; 3581 : 														Timer[17] = (rand() % 150) + 200;

	call	_rand
	cdq
	mov	ecx, 150				; 00000096H
	idiv	ecx
	add	edx, 200				; 000000c8H
	mov	eax, 4
	imul	ecx, eax, 17
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx

; 3582 : 														if (P3HP < 1000)

	cmp	DWORD PTR ?P3HP@@3HA, 1000		; P3HP, 000003e8H
	jge	SHORT $LN790@DXW_MainLo

; 3583 : 														{
; 3584 : 															Timer[17] -= 50;

	mov	eax, 4
	imul	ecx, eax, 17
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 50					; 00000032H
	mov	eax, 4
	imul	ecx, eax, 17
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
$LN790@DXW_MainLo:

; 3585 : 														}
; 3586 : 														Timer[16] = 0;

	mov	eax, 4
	shl	eax, 4
	mov	DWORD PTR ?Timer@@3PAHA[eax], 0

; 3587 : 														BossAtt = FALSE;

	mov	DWORD PTR ?BossAtt@@3HA, 0		; BossAtt

; 3588 : 														BAL = FALSE;

	mov	DWORD PTR ?BAL@@3HA, 0			; BAL

; 3589 : 														BAR = FALSE;

	mov	DWORD PTR ?BAR@@3HA, 0			; BAR

; 3590 : 														BKframe = 0;

	mov	DWORD PTR ?BKframe@@3HA, 0		; BKframe

; 3591 : 														KnockHIT = FALSE;

	mov	DWORD PTR ?KnockHIT@@3HA, 0		; KnockHIT

; 3592 : 														Knock = { 0,0,1,1 };

	mov	DWORD PTR $T19[ebp], 0
	mov	DWORD PTR $T19[ebp+4], 0
	mov	DWORD PTR $T19[ebp+8], 1
	mov	DWORD PTR $T19[ebp+12], 1
	mov	eax, DWORD PTR $T19[ebp]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A, eax
	mov	ecx, DWORD PTR $T19[ebp+4]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+4, ecx
	mov	edx, DWORD PTR $T19[ebp+8]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+8, edx
	mov	eax, DWORD PTR $T19[ebp+12]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+12, eax
$LN789@DXW_MainLo:

; 3593 : 													}
; 3594 : 												}
; 3595 : 												if (BKframe > 13 && BAL == TRUE && KnockHIT == FALSE)

	cmp	DWORD PTR ?BKframe@@3HA, 13		; BKframe, 0000000dH
	jle	SHORT $LN791@DXW_MainLo
	cmp	DWORD PTR ?BAL@@3HA, 1			; BAL
	jne	SHORT $LN791@DXW_MainLo
	cmp	DWORD PTR ?KnockHIT@@3HA, 0		; KnockHIT
	jne	SHORT $LN791@DXW_MainLo

; 3596 : 												{
; 3597 : 													Knock = { bnX - 230 ,bnY - 20,bnX + 80,bnY + 140 };

	mov	eax, DWORD PTR _bnX$[ebp]
	sub	eax, 230				; 000000e6H
	mov	DWORD PTR $T18[ebp], eax
	mov	ecx, DWORD PTR _bnY$[ebp]
	sub	ecx, 20					; 00000014H
	mov	DWORD PTR $T18[ebp+4], ecx
	mov	edx, DWORD PTR _bnX$[ebp]
	add	edx, 80					; 00000050H
	mov	DWORD PTR $T18[ebp+8], edx
	mov	eax, DWORD PTR _bnY$[ebp]
	add	eax, 140				; 0000008cH
	mov	DWORD PTR $T18[ebp+12], eax
	mov	ecx, DWORD PTR $T18[ebp]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A, ecx
	mov	edx, DWORD PTR $T18[ebp+4]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+4, edx
	mov	eax, DWORD PTR $T18[ebp+8]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+8, eax
	mov	ecx, DWORD PTR $T18[ebp+12]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+12, ecx
$LN791@DXW_MainLo:

; 3598 : 												}
; 3599 : 												if (BKframe <11 && BAR == TRUE && KnockHIT == FALSE)

	cmp	DWORD PTR ?BKframe@@3HA, 11		; BKframe, 0000000bH
	jge	SHORT $LN792@DXW_MainLo
	cmp	DWORD PTR ?BAR@@3HA, 1			; BAR
	jne	SHORT $LN792@DXW_MainLo
	cmp	DWORD PTR ?KnockHIT@@3HA, 0		; KnockHIT
	jne	SHORT $LN792@DXW_MainLo

; 3600 : 												{
; 3601 : 													Knock = { bnX + 90 ,bnY - 20,bnX + 393,bnY + 140 };

	mov	eax, DWORD PTR _bnX$[ebp]
	add	eax, 90					; 0000005aH
	mov	DWORD PTR $T17[ebp], eax
	mov	ecx, DWORD PTR _bnY$[ebp]
	sub	ecx, 20					; 00000014H
	mov	DWORD PTR $T17[ebp+4], ecx
	mov	edx, DWORD PTR _bnX$[ebp]
	add	edx, 393				; 00000189H
	mov	DWORD PTR $T17[ebp+8], edx
	mov	eax, DWORD PTR _bnY$[ebp]
	add	eax, 140				; 0000008cH
	mov	DWORD PTR $T17[ebp+12], eax
	mov	ecx, DWORD PTR $T17[ebp]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A, ecx
	mov	edx, DWORD PTR $T17[ebp+4]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+4, edx
	mov	eax, DWORD PTR $T17[ebp+8]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+8, eax
	mov	ecx, DWORD PTR $T17[ebp+12]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+12, ecx
$LN792@DXW_MainLo:

; 3602 : 												}
; 3603 : 												if (BKframe > 15 && BAL == TRUE)

	cmp	DWORD PTR ?BKframe@@3HA, 15		; BKframe, 0000000fH
	jle	SHORT $LN793@DXW_MainLo
	cmp	DWORD PTR ?BAL@@3HA, 1			; BAL
	jne	SHORT $LN793@DXW_MainLo

; 3604 : 												{
; 3605 : 													Knock = { 0,0,1,1 };

	mov	DWORD PTR $T16[ebp], 0
	mov	DWORD PTR $T16[ebp+4], 0
	mov	DWORD PTR $T16[ebp+8], 1
	mov	DWORD PTR $T16[ebp+12], 1
	mov	eax, DWORD PTR $T16[ebp]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A, eax
	mov	ecx, DWORD PTR $T16[ebp+4]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+4, ecx
	mov	edx, DWORD PTR $T16[ebp+8]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+8, edx
	mov	eax, DWORD PTR $T16[ebp+12]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+12, eax
$LN793@DXW_MainLo:

; 3606 : 												}
; 3607 : 												if (BKframe <9 && BAR == TRUE)

	cmp	DWORD PTR ?BKframe@@3HA, 9		; BKframe
	jge	SHORT $LN794@DXW_MainLo
	cmp	DWORD PTR ?BAR@@3HA, 1			; BAR
	jne	SHORT $LN794@DXW_MainLo

; 3608 : 												{
; 3609 : 													Knock = { 0,0,1,1 };

	mov	DWORD PTR $T15[ebp], 0
	mov	DWORD PTR $T15[ebp+4], 0
	mov	DWORD PTR $T15[ebp+8], 1
	mov	DWORD PTR $T15[ebp+12], 1
	mov	eax, DWORD PTR $T15[ebp]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A, eax
	mov	ecx, DWORD PTR $T15[ebp+4]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+4, ecx
	mov	edx, DWORD PTR $T15[ebp+8]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+8, edx
	mov	eax, DWORD PTR $T15[ebp+12]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+12, eax
$LN794@DXW_MainLo:

; 3610 : 												}
; 3611 : 												if (IntersectRect(&rcDest, &Knock, &PHIT))

	mov	esi, esp
	push	OFFSET ?PHIT@@3UtagRECT@@A		; PHIT
	push	OFFSET ?Knock@@3UtagRECT@@A		; Knock
	push	OFFSET ?rcDest@@3UtagRECT@@A		; rcDest
	call	DWORD PTR __imp__IntersectRect@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN808@DXW_MainLo

; 3612 : 												{
; 3613 : 													if (BAR == TRUE && Knockback == FALSE)

	cmp	DWORD PTR ?BAR@@3HA, 1			; BAR
	jne	$LN796@DXW_MainLo
	cmp	DWORD PTR ?Knockback@@3HA, 0		; Knockback
	jne	$LN796@DXW_MainLo

; 3614 : 													{
; 3615 : 														Knockspd = 30;

	mov	DWORD PTR ?Knockspd@@3HA, 30		; Knockspd, 0000001eH

; 3616 : 														Knockback = TRUE;

	mov	DWORD PTR ?Knockback@@3HA, 1		; Knockback

; 3617 : 														PlayerHP -= 1000;

	mov	eax, DWORD PTR ?PlayerHP@@3HA		; PlayerHP
	sub	eax, 1000				; 000003e8H
	mov	DWORD PTR ?PlayerHP@@3HA, eax		; PlayerHP

; 3618 : 														KnockHIT = TRUE;

	mov	DWORD PTR ?KnockHIT@@3HA, 1		; KnockHIT

; 3619 : 														Knock = { 0,0,1,1 };

	mov	DWORD PTR $T14[ebp], 0
	mov	DWORD PTR $T14[ebp+4], 0
	mov	DWORD PTR $T14[ebp+8], 1
	mov	DWORD PTR $T14[ebp+12], 1
	mov	eax, DWORD PTR $T14[ebp]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A, eax
	mov	ecx, DWORD PTR $T14[ebp+4]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+4, ecx
	mov	edx, DWORD PTR $T14[ebp+8]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+8, edx
	mov	eax, DWORD PTR $T14[ebp+12]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+12, eax

; 3620 : 														if (PHplay == FALSE)

	cmp	DWORD PTR ?PHplay@@3HA, 0		; PHplay
	jne	SHORT $LN798@DXW_MainLo

; 3621 : 														{
; 3622 : 															PHplay = TRUE;

	mov	DWORD PTR ?PHplay@@3HA, 1		; PHplay

; 3623 : 															Timer[25] = 3;

	mov	eax, 4
	imul	ecx, eax, 25
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 3

; 3624 : 															PHframe = 0;

	mov	DWORD PTR ?PHframe@@3HA, 0		; PHframe
	jmp	SHORT $LN800@DXW_MainLo
$LN798@DXW_MainLo:

; 3625 : 														}
; 3626 : 														else if (PHplay == TRUE)

	cmp	DWORD PTR ?PHplay@@3HA, 1		; PHplay
	jne	SHORT $LN800@DXW_MainLo

; 3627 : 														{
; 3628 : 															PHplay = TRUE;

	mov	DWORD PTR ?PHplay@@3HA, 1		; PHplay

; 3629 : 															Timer[25] = 3;

	mov	eax, 4
	imul	ecx, eax, 25
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 3

; 3630 : 															PHframe = 0;

	mov	DWORD PTR ?PHframe@@3HA, 0		; PHframe
$LN800@DXW_MainLo:

; 3631 : 														}
; 3632 : 														if (g_bRush == TRUE)

	cmp	DWORD PTR ?g_bRush@@3HA, 1		; g_bRush
	jne	SHORT $LN801@DXW_MainLo

; 3633 : 														{
; 3634 : 															g_bRush = FALSE;

	mov	DWORD PTR ?g_bRush@@3HA, 0		; g_bRush

; 3635 : 															g_bRushL = FALSE;

	mov	DWORD PTR ?g_bRushL@@3HA, 0		; g_bRushL

; 3636 : 															g_bRushR = FALSE;

	mov	DWORD PTR ?g_bRushR@@3HA, 0		; g_bRushR

; 3637 : 															Timer[9] = 20;

	mov	eax, 4
	imul	ecx, eax, 9
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 20	; 00000014H

; 3638 : 															Timer[8] = 0;

	mov	eax, 4
	shl	eax, 3
	mov	DWORD PTR ?Timer@@3PAHA[eax], 0

; 3639 : 															Cframe = 0;

	mov	DWORD PTR ?Cframe@@3HA, 0		; Cframe
$LN801@DXW_MainLo:

; 3640 : 														}
; 3641 : 
; 3642 : 														if (g_bJump == TRUE)

	cmp	DWORD PTR ?g_bJump@@3HA, 1		; g_bJump
	jne	SHORT $LN802@DXW_MainLo

; 3643 : 														{
; 3644 : 															Knockspd = 35;

	mov	DWORD PTR ?Knockspd@@3HA, 35		; Knockspd, 00000023H
$LN802@DXW_MainLo:

; 3645 : 														}
; 3646 : 													}

	jmp	$LN808@DXW_MainLo
$LN796@DXW_MainLo:

; 3647 : 													else if (BAL == TRUE && Knockback == FALSE)

	cmp	DWORD PTR ?BAL@@3HA, 1			; BAL
	jne	$LN808@DXW_MainLo
	cmp	DWORD PTR ?Knockback@@3HA, 0		; Knockback
	jne	$LN808@DXW_MainLo

; 3648 : 													{
; 3649 : 														Knockspd = -30;

	mov	DWORD PTR ?Knockspd@@3HA, -30		; Knockspd, ffffffe2H

; 3650 : 														Knockback = TRUE;

	mov	DWORD PTR ?Knockback@@3HA, 1		; Knockback

; 3651 : 														KnockHIT = TRUE;

	mov	DWORD PTR ?KnockHIT@@3HA, 1		; KnockHIT

; 3652 : 														PlayerHP -= 1000;

	mov	eax, DWORD PTR ?PlayerHP@@3HA		; PlayerHP
	sub	eax, 1000				; 000003e8H
	mov	DWORD PTR ?PlayerHP@@3HA, eax		; PlayerHP

; 3653 : 														Knock = { 0,0,1,1 };

	mov	DWORD PTR $T13[ebp], 0
	mov	DWORD PTR $T13[ebp+4], 0
	mov	DWORD PTR $T13[ebp+8], 1
	mov	DWORD PTR $T13[ebp+12], 1
	mov	eax, DWORD PTR $T13[ebp]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A, eax
	mov	ecx, DWORD PTR $T13[ebp+4]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+4, ecx
	mov	edx, DWORD PTR $T13[ebp+8]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+8, edx
	mov	eax, DWORD PTR $T13[ebp+12]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+12, eax

; 3654 : 														if (PHplay == FALSE)

	cmp	DWORD PTR ?PHplay@@3HA, 0		; PHplay
	jne	SHORT $LN804@DXW_MainLo

; 3655 : 														{
; 3656 : 															PHplay = TRUE;

	mov	DWORD PTR ?PHplay@@3HA, 1		; PHplay

; 3657 : 															Timer[25] = 3;

	mov	eax, 4
	imul	ecx, eax, 25
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 3

; 3658 : 															PHframe = 0;

	mov	DWORD PTR ?PHframe@@3HA, 0		; PHframe
	jmp	SHORT $LN806@DXW_MainLo
$LN804@DXW_MainLo:

; 3659 : 														}
; 3660 : 														else if (PHplay == TRUE)

	cmp	DWORD PTR ?PHplay@@3HA, 1		; PHplay
	jne	SHORT $LN806@DXW_MainLo

; 3661 : 														{
; 3662 : 															PHplay = TRUE;

	mov	DWORD PTR ?PHplay@@3HA, 1		; PHplay

; 3663 : 															Timer[25] = 3;

	mov	eax, 4
	imul	ecx, eax, 25
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 3

; 3664 : 															PHframe = 0;

	mov	DWORD PTR ?PHframe@@3HA, 0		; PHframe
$LN806@DXW_MainLo:

; 3665 : 														}
; 3666 : 														if (g_bRush == TRUE)

	cmp	DWORD PTR ?g_bRush@@3HA, 1		; g_bRush
	jne	SHORT $LN807@DXW_MainLo

; 3667 : 														{
; 3668 : 															g_bRush = FALSE;

	mov	DWORD PTR ?g_bRush@@3HA, 0		; g_bRush

; 3669 : 															g_bRushL = FALSE;

	mov	DWORD PTR ?g_bRushL@@3HA, 0		; g_bRushL

; 3670 : 															g_bRushR = FALSE;

	mov	DWORD PTR ?g_bRushR@@3HA, 0		; g_bRushR

; 3671 : 															Timer[9] = 20;

	mov	eax, 4
	imul	ecx, eax, 9
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 20	; 00000014H

; 3672 : 															Timer[8] = 0;

	mov	eax, 4
	shl	eax, 3
	mov	DWORD PTR ?Timer@@3PAHA[eax], 0

; 3673 : 															Cframe = 0;

	mov	DWORD PTR ?Cframe@@3HA, 0		; Cframe
$LN807@DXW_MainLo:

; 3674 : 														}
; 3675 : 														if (g_bJump == TRUE)

	cmp	DWORD PTR ?g_bJump@@3HA, 1		; g_bJump
	jne	SHORT $LN808@DXW_MainLo

; 3676 : 														{
; 3677 : 															Knockspd = -35;

	mov	DWORD PTR ?Knockspd@@3HA, -35		; Knockspd, ffffffddH
$LN808@DXW_MainLo:

; 3678 : 														}
; 3679 : 													}
; 3680 : 												}
; 3681 : 												if (p3die == FALSE && BossAtt == FALSE && g_bGatt == FALSE)

	cmp	DWORD PTR ?p3die@@3HA, 0		; p3die
	jne	$LN815@DXW_MainLo
	cmp	DWORD PTR ?BossAtt@@3HA, 0		; BossAtt
	jne	$LN815@DXW_MainLo
	cmp	DWORD PTR ?g_bGatt@@3HA, 0		; g_bGatt
	jne	$LN815@DXW_MainLo

; 3682 : 												{
; 3683 : 													BOSS = { bnX + 10 ,bnY,bnX + 170,bnY + 148 };

	mov	eax, DWORD PTR _bnX$[ebp]
	add	eax, 10					; 0000000aH
	mov	DWORD PTR $T12[ebp], eax
	mov	ecx, DWORD PTR _bnY$[ebp]
	mov	DWORD PTR $T12[ebp+4], ecx
	mov	edx, DWORD PTR _bnX$[ebp]
	add	edx, 170				; 000000aaH
	mov	DWORD PTR $T12[ebp+8], edx
	mov	eax, DWORD PTR _bnY$[ebp]
	add	eax, 148				; 00000094H
	mov	DWORD PTR $T12[ebp+12], eax
	mov	ecx, DWORD PTR $T12[ebp]
	mov	DWORD PTR ?BOSS@@3UtagRECT@@A, ecx
	mov	edx, DWORD PTR $T12[ebp+4]
	mov	DWORD PTR ?BOSS@@3UtagRECT@@A+4, edx
	mov	eax, DWORD PTR $T12[ebp+8]
	mov	DWORD PTR ?BOSS@@3UtagRECT@@A+8, eax
	mov	ecx, DWORD PTR $T12[ebp+12]
	mov	DWORD PTR ?BOSS@@3UtagRECT@@A+12, ecx

; 3684 : 													if (Timer[1] >= 8)

	mov	eax, 4
	shl	eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 8
	jl	SHORT $LN810@DXW_MainLo

; 3685 : 													{
; 3686 : 														Timer[1] = 0;

	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR ?Timer@@3PAHA[eax], 0

; 3687 : 														Bframe++;

	mov	eax, DWORD PTR ?Bframe@@3HA		; Bframe
	add	eax, 1
	mov	DWORD PTR ?Bframe@@3HA, eax		; Bframe
	jmp	SHORT $LN811@DXW_MainLo
$LN810@DXW_MainLo:

; 3688 : 													}
; 3689 : 													else { Timer[1]++; }

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR ?Timer@@3PAHA[eax]
	add	ecx, 1
	mov	edx, 4
	shl	edx, 0
	mov	DWORD PTR ?Timer@@3PAHA[edx], ecx
$LN811@DXW_MainLo:

; 3690 : 													if (Bframe >= 15)

	cmp	DWORD PTR ?Bframe@@3HA, 15		; Bframe, 0000000fH
	jl	SHORT $LN812@DXW_MainLo

; 3691 : 													{
; 3692 : 														Bframe = 0;

	mov	DWORD PTR ?Bframe@@3HA, 0		; Bframe
$LN812@DXW_MainLo:

; 3693 : 													}
; 3694 : 													if (g_bBLL == TRUE)

	cmp	DWORD PTR ?g_bBLL@@3HA, 1		; g_bBLL
	jne	SHORT $LN813@DXW_MainLo

; 3695 : 													{
; 3696 : 														::__PutAnimeSprite(g_pDDSP3standL, bnX-30, bnY-100, 16, Bframe, 243, 314, 0);

	push	0
	push	314					; 0000013aH
	push	243					; 000000f3H
	mov	eax, DWORD PTR ?Bframe@@3HA		; Bframe
	push	eax
	push	16					; 00000010H
	mov	ecx, DWORD PTR _bnY$[ebp]
	sub	ecx, 100				; 00000064H
	push	ecx
	mov	edx, DWORD PTR _bnX$[ebp]
	sub	edx, 30					; 0000001eH
	push	edx
	mov	eax, DWORD PTR ?g_pDDSP3standL@@3PAUIDirectDrawSurface7@@A ; g_pDDSP3standL
	push	eax
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	SHORT $LN815@DXW_MainLo
$LN813@DXW_MainLo:

; 3697 : 													}
; 3698 : 													else if (g_bBLR == TRUE)

	cmp	DWORD PTR ?g_bBLR@@3HA, 1		; g_bBLR
	jne	SHORT $LN815@DXW_MainLo

; 3699 : 													{
; 3700 : 														::__PutAnimeSprite(g_pDDSP3standR, bnX-30, bnY-100, 16, Bframe, 243, 314, 0);

	push	0
	push	314					; 0000013aH
	push	243					; 000000f3H
	mov	eax, DWORD PTR ?Bframe@@3HA		; Bframe
	push	eax
	push	16					; 00000010H
	mov	ecx, DWORD PTR _bnY$[ebp]
	sub	ecx, 100				; 00000064H
	push	ecx
	mov	edx, DWORD PTR _bnX$[ebp]
	sub	edx, 30					; 0000001eH
	push	edx
	mov	eax, DWORD PTR ?g_pDDSP3standR@@3PAUIDirectDrawSurface7@@A ; g_pDDSP3standR
	push	eax
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN815@DXW_MainLo:

; 3701 : 													}
; 3702 : 												}
; 3703 : 												if (Timer[0] >= 26)

	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 26	; 0000001aH
	jl	SHORT $LN816@DXW_MainLo

; 3704 : 												{
; 3705 : 													Timer[0] = 0;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0
$LN816@DXW_MainLo:

; 3706 : 												}
; 3707 : 												//Ä³¸¯ÅÍ µ¹Áø ¾Ö´Ï¸ÞÀÌ¼Ç
; 3708 : 												if (g_bRush == FALSE)

	cmp	DWORD PTR ?g_bRush@@3HA, 0		; g_bRush
	jne	$LN857@DXW_MainLo

; 3709 : 												{
; 3710 : 													//½ºÅÄµù
; 3711 : 													if (g_bLookL == 1 && g_bJump == 0 && g_bLeft == 0 && g_bRight == 0 && g_bAtt == FALSE)

	cmp	DWORD PTR ?g_bLookL@@3HA, 1		; g_bLookL
	jne	SHORT $LN818@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN818@DXW_MainLo
	cmp	DWORD PTR ?g_bLeft@@3HA, 0		; g_bLeft
	jne	SHORT $LN818@DXW_MainLo
	cmp	DWORD PTR ?g_bRight@@3HA, 0		; g_bRight
	jne	SHORT $LN818@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	SHORT $LN818@DXW_MainLo

; 3712 : 													{
; 3713 : 														::__PutAnimeSprite(g_pDDSOne, nX, nY, 9, 0, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	0
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A ; g_pDDSOne
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	SHORT $LN820@DXW_MainLo
$LN818@DXW_MainLo:

; 3714 : 													}
; 3715 : 													else if (g_bLookR == 1 && g_bJump == 0 && g_bLeft == 0 && g_bRight == 0 && g_bAtt == FALSE)

	cmp	DWORD PTR ?g_bLookR@@3HA, 1		; g_bLookR
	jne	SHORT $LN820@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN820@DXW_MainLo
	cmp	DWORD PTR ?g_bLeft@@3HA, 0		; g_bLeft
	jne	SHORT $LN820@DXW_MainLo
	cmp	DWORD PTR ?g_bRight@@3HA, 0		; g_bRight
	jne	SHORT $LN820@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	SHORT $LN820@DXW_MainLo

; 3716 : 													{
; 3717 : 														::__PutAnimeSprite(g_pDDSOneR, nX, nY, 9, 8, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	8
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A ; g_pDDSOneR
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN820@DXW_MainLo:

; 3718 : 													}
; 3719 : 													//Á¡ÇÁ
; 3720 : 													if (g_bLookL == 1 && g_bJump == 1 && g_bAtt == FALSE)

	cmp	DWORD PTR ?g_bLookL@@3HA, 1		; g_bLookL
	jne	SHORT $LN821@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 1		; g_bJump
	jne	SHORT $LN821@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	SHORT $LN821@DXW_MainLo

; 3721 : 													{
; 3722 : 														::__PutAnimeSprite(g_pDDSOne, nX, nY, 9, 3, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	3
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A ; g_pDDSOne
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	SHORT $LN823@DXW_MainLo
$LN821@DXW_MainLo:

; 3723 : 													}
; 3724 : 													else if (g_bLookR == 1 && g_bJump == 1 && g_bAtt == FALSE)

	cmp	DWORD PTR ?g_bLookR@@3HA, 1		; g_bLookR
	jne	SHORT $LN823@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 1		; g_bJump
	jne	SHORT $LN823@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	SHORT $LN823@DXW_MainLo

; 3725 : 													{
; 3726 : 														::__PutAnimeSprite(g_pDDSOneR, nX, nY, 9, 5, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	5
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A ; g_pDDSOneR
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN823@DXW_MainLo:

; 3727 : 													}
; 3728 : 													//¹«ºù
; 3729 : 													if (g_bLeft == 1 && g_bJump == 0 && Timer[0] < 5 && g_bJump == 0 && g_bAtt == FALSE)

	cmp	DWORD PTR ?g_bLeft@@3HA, 1		; g_bLeft
	jne	SHORT $LN824@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN824@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 5
	jge	SHORT $LN824@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN824@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	SHORT $LN824@DXW_MainLo

; 3730 : 													{
; 3731 : 														::__PutAnimeSprite(g_pDDSOne, nX, nY, 9, 1, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	1
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A ; g_pDDSOne
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	$LN830@DXW_MainLo
$LN824@DXW_MainLo:

; 3732 : 													}
; 3733 : 													else if (g_bLeft == 1 && g_bJump == 0 && Timer[0] >= 5 && Timer[0] < 12 && g_bAtt == FALSE)

	cmp	DWORD PTR ?g_bLeft@@3HA, 1		; g_bLeft
	jne	SHORT $LN826@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN826@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 5
	jl	SHORT $LN826@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 12	; 0000000cH
	jge	SHORT $LN826@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	SHORT $LN826@DXW_MainLo

; 3734 : 													{
; 3735 : 														::__PutAnimeSprite(g_pDDSOne, nX, nY, 9, 0, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	0
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A ; g_pDDSOne
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	$LN830@DXW_MainLo
$LN826@DXW_MainLo:

; 3736 : 													}
; 3737 : 													else if (g_bLeft == 1 && g_bJump == 0 && Timer[0] >= 12 && Timer[0] < 19 && g_bAtt == FALSE)

	cmp	DWORD PTR ?g_bLeft@@3HA, 1		; g_bLeft
	jne	SHORT $LN828@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN828@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 12	; 0000000cH
	jl	SHORT $LN828@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 19	; 00000013H
	jge	SHORT $LN828@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	SHORT $LN828@DXW_MainLo

; 3738 : 													{
; 3739 : 														::__PutAnimeSprite(g_pDDSOne, nX, nY, 9, 2, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	2
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A ; g_pDDSOne
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	SHORT $LN830@DXW_MainLo
$LN828@DXW_MainLo:

; 3740 : 													}
; 3741 : 													else if (g_bLeft == 1 && g_bJump == 0 && Timer[0] >= 19 && g_bAtt == FALSE)

	cmp	DWORD PTR ?g_bLeft@@3HA, 1		; g_bLeft
	jne	SHORT $LN830@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN830@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 19	; 00000013H
	jl	SHORT $LN830@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	SHORT $LN830@DXW_MainLo

; 3742 : 													{
; 3743 : 														::__PutAnimeSprite(g_pDDSOne, nX, nY, 9, 0, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	0
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A ; g_pDDSOne
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN830@DXW_MainLo:

; 3744 : 													}
; 3745 : 													if (g_bRight == 1 && g_bJump == 0 && Timer[0] < 5 && g_bAtt == FALSE)

	cmp	DWORD PTR ?g_bRight@@3HA, 1		; g_bRight
	jne	SHORT $LN831@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN831@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 5
	jge	SHORT $LN831@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	SHORT $LN831@DXW_MainLo

; 3746 : 													{
; 3747 : 														::__PutAnimeSprite(g_pDDSOneR, nX, nY, 9, 7, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	7
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A ; g_pDDSOneR
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	$LN837@DXW_MainLo
$LN831@DXW_MainLo:

; 3748 : 													}
; 3749 : 													else if (g_bRight == 1 && g_bJump == 0 && Timer[0] >= 5 && Timer[0] < 12 && g_bAtt == FALSE)

	cmp	DWORD PTR ?g_bRight@@3HA, 1		; g_bRight
	jne	SHORT $LN833@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN833@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 5
	jl	SHORT $LN833@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 12	; 0000000cH
	jge	SHORT $LN833@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	SHORT $LN833@DXW_MainLo

; 3750 : 													{
; 3751 : 														::__PutAnimeSprite(g_pDDSOneR, nX, nY, 9, 8, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	8
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A ; g_pDDSOneR
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	$LN837@DXW_MainLo
$LN833@DXW_MainLo:

; 3752 : 													}
; 3753 : 													else if (g_bRight == 1 && g_bJump == 0 && Timer[0] >= 12 && Timer[0] < 19 && g_bAtt == FALSE)

	cmp	DWORD PTR ?g_bRight@@3HA, 1		; g_bRight
	jne	SHORT $LN835@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN835@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 12	; 0000000cH
	jl	SHORT $LN835@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 19	; 00000013H
	jge	SHORT $LN835@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	SHORT $LN835@DXW_MainLo

; 3754 : 													{
; 3755 : 														::__PutAnimeSprite(g_pDDSOneR, nX, nY, 9, 6, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	6
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A ; g_pDDSOneR
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	SHORT $LN837@DXW_MainLo
$LN835@DXW_MainLo:

; 3756 : 													}
; 3757 : 													else if (g_bRight == 1 && g_bJump == 0 && Timer[0] >= 19 && g_bAtt == FALSE)

	cmp	DWORD PTR ?g_bRight@@3HA, 1		; g_bRight
	jne	SHORT $LN837@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN837@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 19	; 00000013H
	jl	SHORT $LN837@DXW_MainLo
	cmp	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	jne	SHORT $LN837@DXW_MainLo

; 3758 : 													{
; 3759 : 														::__PutAnimeSprite(g_pDDSOneR, nX, nY, 9, 8, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	8
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A ; g_pDDSOneR
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN837@DXW_MainLo:

; 3760 : 													}
; 3761 : 													if (g_bAtt == TRUE && g_bAR == TRUE && Timer[4] < 7)

	cmp	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt
	jne	SHORT $LN838@DXW_MainLo
	cmp	DWORD PTR ?g_bAR@@3HA, 1		; g_bAR
	jne	SHORT $LN838@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 7
	jge	SHORT $LN838@DXW_MainLo

; 3762 : 													{
; 3763 : 														::__PutAnimeSprite(g_pDDSOneR, nX, nY, 9, 1, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	1
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A ; g_pDDSOneR
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	$LN846@DXW_MainLo
$LN838@DXW_MainLo:

; 3764 : 													}
; 3765 : 													else if (g_bAtt == TRUE && g_bAR == TRUE && Timer[4] >= 7 && Timer[4] < 14)

	cmp	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt
	jne	SHORT $LN840@DXW_MainLo
	cmp	DWORD PTR ?g_bAR@@3HA, 1		; g_bAR
	jne	SHORT $LN840@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 7
	jl	SHORT $LN840@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 14	; 0000000eH
	jge	SHORT $LN840@DXW_MainLo

; 3766 : 													{
; 3767 : 														::__PutAnimeSprite(g_pDDSOneR, nX, nY, 9, 2, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	2
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A ; g_pDDSOneR
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	$LN846@DXW_MainLo
$LN840@DXW_MainLo:

; 3768 : 													}
; 3769 : 													else if (g_bAtt == TRUE && g_bAR == TRUE && Timer[4] >= 14 && Timer[4] < 21)

	cmp	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt
	jne	SHORT $LN842@DXW_MainLo
	cmp	DWORD PTR ?g_bAR@@3HA, 1		; g_bAR
	jne	SHORT $LN842@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 14	; 0000000eH
	jl	SHORT $LN842@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 21	; 00000015H
	jge	SHORT $LN842@DXW_MainLo

; 3770 : 													{
; 3771 : 														::__PutAnimeSprite(g_pDDSOneR, nX, nY, 9, 3, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	3
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A ; g_pDDSOneR
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	$LN846@DXW_MainLo
$LN842@DXW_MainLo:

; 3772 : 													}
; 3773 : 													else if (g_bAtt == TRUE && g_bAR == TRUE && Timer[4] >= 21 && Timer[4] < 27)

	cmp	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt
	jne	SHORT $LN844@DXW_MainLo
	cmp	DWORD PTR ?g_bAR@@3HA, 1		; g_bAR
	jne	SHORT $LN844@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 21	; 00000015H
	jl	SHORT $LN844@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 27	; 0000001bH
	jge	SHORT $LN844@DXW_MainLo

; 3774 : 													{
; 3775 : 														::__PutAnimeSprite(g_pDDSOneR, nX, nY, 9, 4, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	4
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A ; g_pDDSOneR
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	SHORT $LN846@DXW_MainLo
$LN844@DXW_MainLo:

; 3776 : 													}
; 3777 : 													else if (g_bAtt == TRUE && g_bAR == TRUE && Timer[4] >= 27 && Timer[4] < 39)

	cmp	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt
	jne	SHORT $LN846@DXW_MainLo
	cmp	DWORD PTR ?g_bAR@@3HA, 1		; g_bAR
	jne	SHORT $LN846@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 27	; 0000001bH
	jl	SHORT $LN846@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 39	; 00000027H
	jge	SHORT $LN846@DXW_MainLo

; 3778 : 													{
; 3779 : 														::__PutAnimeSprite(g_pDDSOneR, nX, nY, 9, 0, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	0
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A ; g_pDDSOneR
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN846@DXW_MainLo:

; 3780 : 													}
; 3781 : 													if (g_bAtt == TRUE && g_bAL == TRUE && Timer[4] < 7)

	cmp	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt
	jne	SHORT $LN847@DXW_MainLo
	cmp	DWORD PTR ?g_bAL@@3HA, 1		; g_bAL
	jne	SHORT $LN847@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 7
	jge	SHORT $LN847@DXW_MainLo

; 3782 : 													{
; 3783 : 														::__PutAnimeSprite(g_pDDSOne, nX, nY, 9, 4, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	4
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A ; g_pDDSOne
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	$LN855@DXW_MainLo
$LN847@DXW_MainLo:

; 3784 : 													}
; 3785 : 													else if (g_bAtt == TRUE && g_bAL == TRUE && Timer[4] >= 7 && Timer[4] < 14)

	cmp	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt
	jne	SHORT $LN849@DXW_MainLo
	cmp	DWORD PTR ?g_bAL@@3HA, 1		; g_bAL
	jne	SHORT $LN849@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 7
	jl	SHORT $LN849@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 14	; 0000000eH
	jge	SHORT $LN849@DXW_MainLo

; 3786 : 													{
; 3787 : 														::__PutAnimeSprite(g_pDDSOne, nX, nY, 9, 5, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	5
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A ; g_pDDSOne
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	$LN855@DXW_MainLo
$LN849@DXW_MainLo:

; 3788 : 													}
; 3789 : 													else if (g_bAtt == TRUE && g_bAL == TRUE && Timer[4] >= 14 && Timer[4] < 21)

	cmp	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt
	jne	SHORT $LN851@DXW_MainLo
	cmp	DWORD PTR ?g_bAL@@3HA, 1		; g_bAL
	jne	SHORT $LN851@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 14	; 0000000eH
	jl	SHORT $LN851@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 21	; 00000015H
	jge	SHORT $LN851@DXW_MainLo

; 3790 : 													{
; 3791 : 														::__PutAnimeSprite(g_pDDSOne, nX, nY, 9, 6, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	6
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A ; g_pDDSOne
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	$LN855@DXW_MainLo
$LN851@DXW_MainLo:

; 3792 : 													}
; 3793 : 													else if (g_bAtt == TRUE && g_bAL == TRUE && Timer[4] >= 21 && Timer[4] < 27)

	cmp	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt
	jne	SHORT $LN853@DXW_MainLo
	cmp	DWORD PTR ?g_bAL@@3HA, 1		; g_bAL
	jne	SHORT $LN853@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 21	; 00000015H
	jl	SHORT $LN853@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 27	; 0000001bH
	jge	SHORT $LN853@DXW_MainLo

; 3794 : 													{
; 3795 : 														::__PutAnimeSprite(g_pDDSOne, nX, nY, 9, 7, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	7
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A ; g_pDDSOne
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	SHORT $LN855@DXW_MainLo
$LN853@DXW_MainLo:

; 3796 : 													}
; 3797 : 													else if (g_bAtt == TRUE && g_bAL == TRUE && Timer[4] >= 27 && Timer[4] < 39)

	cmp	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt
	jne	SHORT $LN855@DXW_MainLo
	cmp	DWORD PTR ?g_bAL@@3HA, 1		; g_bAL
	jne	SHORT $LN855@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 27	; 0000001bH
	jl	SHORT $LN855@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 39	; 00000027H
	jge	SHORT $LN855@DXW_MainLo

; 3798 : 													{
; 3799 : 														::__PutAnimeSprite(g_pDDSOne, nX, nY, 9, 8, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	8
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A ; g_pDDSOne
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN855@DXW_MainLo:

; 3800 : 													}
; 3801 : 													if (g_bAtt == TRUE && Timer[4] < 38)

	cmp	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt
	jne	SHORT $LN856@DXW_MainLo
	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 38	; 00000026H
	jge	SHORT $LN856@DXW_MainLo

; 3802 : 													{
; 3803 : 														Timer[4]++;

	mov	eax, 4
	shl	eax, 2
	mov	ecx, DWORD PTR ?Timer@@3PAHA[eax]
	add	ecx, 1
	mov	edx, 4
	shl	edx, 2
	mov	DWORD PTR ?Timer@@3PAHA[edx], ecx

; 3804 : 													}
; 3805 : 													else

	jmp	SHORT $LN857@DXW_MainLo
$LN856@DXW_MainLo:

; 3806 : 													{
; 3807 : 														Timer[4] = 0;

	mov	eax, 4
	shl	eax, 2
	mov	DWORD PTR ?Timer@@3PAHA[eax], 0
$LN857@DXW_MainLo:

; 3808 : 													}
; 3809 : 												}
; 3810 : 												if (g_bRushL == TRUE)

	cmp	DWORD PTR ?g_bRushL@@3HA, 1		; g_bRushL
	jne	SHORT $LN858@DXW_MainLo

; 3811 : 												{
; 3812 : 													::__PutAnimeSprite(g_pDDSOne, nX, nY, 9, 7, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	7
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A ; g_pDDSOne
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H

; 3813 : 													::__PutAnimeSprite(g_pDDSCHARGE, nX - 170, nY - 100, 8, Cframe, 511, 263, 0);

	push	0
	push	263					; 00000107H
	push	511					; 000001ffH
	mov	eax, DWORD PTR ?Cframe@@3HA		; Cframe
	push	eax
	push	8
	mov	ecx, DWORD PTR _nY$[ebp]
	sub	ecx, 100				; 00000064H
	push	ecx
	mov	edx, DWORD PTR _nX$[ebp]
	sub	edx, 170				; 000000aaH
	push	edx
	mov	eax, DWORD PTR ?g_pDDSCHARGE@@3PAUIDirectDrawSurface7@@A ; g_pDDSCHARGE
	push	eax
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	SHORT $LN860@DXW_MainLo
$LN858@DXW_MainLo:

; 3814 : 												}
; 3815 : 												else if (g_bRushR == TRUE)

	cmp	DWORD PTR ?g_bRushR@@3HA, 1		; g_bRushR
	jne	SHORT $LN860@DXW_MainLo

; 3816 : 												{
; 3817 : 													::__PutAnimeSprite(g_pDDSOneR, nX, nY, 9, 1, 86, 81, 0);

	push	0
	push	81					; 00000051H
	push	86					; 00000056H
	push	1
	push	9
	mov	eax, DWORD PTR _nY$[ebp]
	push	eax
	mov	ecx, DWORD PTR _nX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A ; g_pDDSOneR
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H

; 3818 : 													::__PutAnimeSprite(g_pDDSCHARGER, nX - 250, nY - 100, 8, Cframe, 511, 263, 0);

	push	0
	push	263					; 00000107H
	push	511					; 000001ffH
	mov	eax, DWORD PTR ?Cframe@@3HA		; Cframe
	push	eax
	push	8
	mov	ecx, DWORD PTR _nY$[ebp]
	sub	ecx, 100				; 00000064H
	push	ecx
	mov	edx, DWORD PTR _nX$[ebp]
	sub	edx, 250				; 000000faH
	push	edx
	mov	eax, DWORD PTR ?g_pDDSCHARGER@@3PAUIDirectDrawSurface7@@A ; g_pDDSCHARGER
	push	eax
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN860@DXW_MainLo:

; 3819 : 												}
; 3820 : 												if (g_bAtt == TRUE)

	cmp	DWORD PTR ?g_bAtt@@3HA, 1		; g_bAtt
	jne	$LN870@DXW_MainLo

; 3821 : 												{
; 3822 : 													if (g_bAL == TRUE)

	cmp	DWORD PTR ?g_bAL@@3HA, 1		; g_bAL
	jne	$LN862@DXW_MainLo

; 3823 : 													{
; 3824 : 														if (g_bHit == FALSE)

	cmp	DWORD PTR ?g_bHit@@3HA, 0		; g_bHit
	jne	SHORT $LN864@DXW_MainLo

; 3825 : 														{
; 3826 : 															HIT = { SnX - 130,SnY + 10,SnX + 90,SnY + 180 };

	mov	eax, DWORD PTR _SnX$[ebp]
	sub	eax, 130				; 00000082H
	mov	DWORD PTR $T11[ebp], eax
	mov	ecx, DWORD PTR _SnY$[ebp]
	add	ecx, 10					; 0000000aH
	mov	DWORD PTR $T11[ebp+4], ecx
	mov	edx, DWORD PTR _SnX$[ebp]
	add	edx, 90					; 0000005aH
	mov	DWORD PTR $T11[ebp+8], edx
	mov	eax, DWORD PTR _SnY$[ebp]
	add	eax, 180				; 000000b4H
	mov	DWORD PTR $T11[ebp+12], eax
	mov	ecx, DWORD PTR $T11[ebp]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A, ecx
	mov	edx, DWORD PTR $T11[ebp+4]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A+4, edx
	mov	eax, DWORD PTR $T11[ebp+8]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A+8, eax
	mov	ecx, DWORD PTR $T11[ebp+12]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A+12, ecx

; 3827 : 														}
; 3828 : 														else

	jmp	SHORT $LN865@DXW_MainLo
$LN864@DXW_MainLo:

; 3829 : 														{
; 3830 : 															HIT = { 0, 0, 1, 1 };

	mov	DWORD PTR $T10[ebp], 0
	mov	DWORD PTR $T10[ebp+4], 0
	mov	DWORD PTR $T10[ebp+8], 1
	mov	DWORD PTR $T10[ebp+12], 1
	mov	eax, DWORD PTR $T10[ebp]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A, eax
	mov	ecx, DWORD PTR $T10[ebp+4]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A+4, ecx
	mov	edx, DWORD PTR $T10[ebp+8]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A+8, edx
	mov	eax, DWORD PTR $T10[ebp+12]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A+12, eax
$LN865@DXW_MainLo:

; 3831 : 														}
; 3832 : 														if (Timer[2] < 2)

	mov	eax, 4
	shl	eax, 1
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 2
	jge	SHORT $LN866@DXW_MainLo

; 3833 : 														{
; 3834 : 															Timer[2]++;

	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR ?Timer@@3PAHA[eax]
	add	ecx, 1
	mov	edx, 4
	shl	edx, 1
	mov	DWORD PTR ?Timer@@3PAHA[edx], ecx

; 3835 : 														}
; 3836 : 														else

	jmp	SHORT $LN869@DXW_MainLo
$LN866@DXW_MainLo:

; 3837 : 														{
; 3838 : 															Timer[2] = 0;

	mov	eax, 4
	shl	eax, 1
	mov	DWORD PTR ?Timer@@3PAHA[eax], 0

; 3839 : 															if (Aframe < 12)

	cmp	DWORD PTR ?Aframe@@3HA, 12		; Aframe, 0000000cH
	jge	SHORT $LN868@DXW_MainLo

; 3840 : 															{
; 3841 : 																Aframe++;

	mov	eax, DWORD PTR ?Aframe@@3HA		; Aframe
	add	eax, 1
	mov	DWORD PTR ?Aframe@@3HA, eax		; Aframe
	jmp	SHORT $LN869@DXW_MainLo
$LN868@DXW_MainLo:

; 3842 : 															}
; 3843 : 															else { Aframe == 0; g_bAL = FALSE, g_bAR = FALSE, g_bAtt = FALSE; g_bHit = FALSE; }

	mov	DWORD PTR ?g_bAL@@3HA, 0		; g_bAL
	mov	DWORD PTR ?g_bAR@@3HA, 0		; g_bAR
	mov	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	mov	DWORD PTR ?g_bHit@@3HA, 0		; g_bHit
$LN869@DXW_MainLo:

; 3844 : 														}
; 3845 : 														::__PutAnimeSprite(g_pDDSSkill, SnX - 140, SnY, 13, Aframe, 301, 218, 0);

	push	0
	push	218					; 000000daH
	push	301					; 0000012dH
	mov	eax, DWORD PTR ?Aframe@@3HA		; Aframe
	push	eax
	push	13					; 0000000dH
	mov	ecx, DWORD PTR _SnY$[ebp]
	push	ecx
	mov	edx, DWORD PTR _SnX$[ebp]
	sub	edx, 140				; 0000008cH
	push	edx
	mov	eax, DWORD PTR ?g_pDDSSkill@@3PAUIDirectDrawSurface7@@A ; g_pDDSSkill
	push	eax
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
	jmp	$LN870@DXW_MainLo
$LN862@DXW_MainLo:

; 3846 : 													}
; 3847 : 													else if (g_bAR == TRUE)

	cmp	DWORD PTR ?g_bAR@@3HA, 1		; g_bAR
	jne	$LN870@DXW_MainLo

; 3848 : 													{
; 3849 : 														if (g_bHit == FALSE)

	cmp	DWORD PTR ?g_bHit@@3HA, 0		; g_bHit
	jne	SHORT $LN871@DXW_MainLo

; 3850 : 														{
; 3851 : 															HIT = { SnX - 10,SnY + 10,SnX + 220,SnY + 180 };

	mov	eax, DWORD PTR _SnX$[ebp]
	sub	eax, 10					; 0000000aH
	mov	DWORD PTR $T9[ebp], eax
	mov	ecx, DWORD PTR _SnY$[ebp]
	add	ecx, 10					; 0000000aH
	mov	DWORD PTR $T9[ebp+4], ecx
	mov	edx, DWORD PTR _SnX$[ebp]
	add	edx, 220				; 000000dcH
	mov	DWORD PTR $T9[ebp+8], edx
	mov	eax, DWORD PTR _SnY$[ebp]
	add	eax, 180				; 000000b4H
	mov	DWORD PTR $T9[ebp+12], eax
	mov	ecx, DWORD PTR $T9[ebp]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A, ecx
	mov	edx, DWORD PTR $T9[ebp+4]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A+4, edx
	mov	eax, DWORD PTR $T9[ebp+8]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A+8, eax
	mov	ecx, DWORD PTR $T9[ebp+12]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A+12, ecx

; 3852 : 														}
; 3853 : 														else

	jmp	SHORT $LN872@DXW_MainLo
$LN871@DXW_MainLo:

; 3854 : 														{
; 3855 : 															HIT = { 0, 0, 1, 1 };

	mov	DWORD PTR $T8[ebp], 0
	mov	DWORD PTR $T8[ebp+4], 0
	mov	DWORD PTR $T8[ebp+8], 1
	mov	DWORD PTR $T8[ebp+12], 1
	mov	eax, DWORD PTR $T8[ebp]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A, eax
	mov	ecx, DWORD PTR $T8[ebp+4]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A+4, ecx
	mov	edx, DWORD PTR $T8[ebp+8]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A+8, edx
	mov	eax, DWORD PTR $T8[ebp+12]
	mov	DWORD PTR ?HIT@@3UtagRECT@@A+12, eax
$LN872@DXW_MainLo:

; 3856 : 														}
; 3857 : 														if (Timer[2] < 2)

	mov	eax, 4
	shl	eax, 1
	cmp	DWORD PTR ?Timer@@3PAHA[eax], 2
	jge	SHORT $LN873@DXW_MainLo

; 3858 : 														{
; 3859 : 															Timer[2]++;

	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR ?Timer@@3PAHA[eax]
	add	ecx, 1
	mov	edx, 4
	shl	edx, 1
	mov	DWORD PTR ?Timer@@3PAHA[edx], ecx

; 3860 : 														}
; 3861 : 														else

	jmp	SHORT $LN876@DXW_MainLo
$LN873@DXW_MainLo:

; 3862 : 														{
; 3863 : 															Timer[2] = 0;

	mov	eax, 4
	shl	eax, 1
	mov	DWORD PTR ?Timer@@3PAHA[eax], 0

; 3864 : 															if (Aframe > 0)

	cmp	DWORD PTR ?Aframe@@3HA, 0		; Aframe
	jle	SHORT $LN875@DXW_MainLo

; 3865 : 															{
; 3866 : 																Aframe--;

	mov	eax, DWORD PTR ?Aframe@@3HA		; Aframe
	sub	eax, 1
	mov	DWORD PTR ?Aframe@@3HA, eax		; Aframe
	jmp	SHORT $LN876@DXW_MainLo
$LN875@DXW_MainLo:

; 3867 : 															}
; 3868 : 															else { Aframe == 0; g_bAL = FALSE, g_bAR = FALSE, g_bAtt = FALSE; g_bHit = FALSE; }

	mov	DWORD PTR ?g_bAL@@3HA, 0		; g_bAL
	mov	DWORD PTR ?g_bAR@@3HA, 0		; g_bAR
	mov	DWORD PTR ?g_bAtt@@3HA, 0		; g_bAtt
	mov	DWORD PTR ?g_bHit@@3HA, 0		; g_bHit
$LN876@DXW_MainLo:

; 3869 : 														}
; 3870 : 														::__PutAnimeSprite(g_pDDSSkillR, SnX - 70, SnY, 13, Aframe, 301, 218, 0);

	push	0
	push	218					; 000000daH
	push	301					; 0000012dH
	mov	eax, DWORD PTR ?Aframe@@3HA		; Aframe
	push	eax
	push	13					; 0000000dH
	mov	ecx, DWORD PTR _SnY$[ebp]
	push	ecx
	mov	edx, DWORD PTR _SnX$[ebp]
	sub	edx, 70					; 00000046H
	push	edx
	mov	eax, DWORD PTR ?g_pDDSSkillR@@3PAUIDirectDrawSurface7@@A ; g_pDDSSkillR
	push	eax
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN870@DXW_MainLo:

; 3871 : 													}
; 3872 : 												}
; 3873 : 												if (bossimmu == FALSE && g_bHit == FALSE)

	cmp	DWORD PTR ?bossimmu@@3HA, 0		; bossimmu
	jne	$LN881@DXW_MainLo
	cmp	DWORD PTR ?g_bHit@@3HA, 0		; g_bHit
	jne	$LN881@DXW_MainLo

; 3874 : 												{
; 3875 : 													if (IntersectRect(&rcDest, &BOSS, &HIT))

	mov	esi, esp
	push	OFFSET ?HIT@@3UtagRECT@@A		; HIT
	push	OFFSET ?BOSS@@3UtagRECT@@A		; BOSS
	push	OFFSET ?rcDest@@3UtagRECT@@A		; rcDest
	call	DWORD PTR __imp__IntersectRect@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN881@DXW_MainLo

; 3876 : 													{
; 3877 : 														P3HP -= 100;

	mov	eax, DWORD PTR ?P3HP@@3HA		; P3HP
	sub	eax, 100				; 00000064H
	mov	DWORD PTR ?P3HP@@3HA, eax		; P3HP

; 3878 : 														bossimmu = TRUE;

	mov	DWORD PTR ?bossimmu@@3HA, 1		; bossimmu

; 3879 : 														Timer[5] = 20;

	mov	eax, 4
	imul	ecx, eax, 5
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 20	; 00000014H

; 3880 : 														g_bHit = TRUE;

	mov	DWORD PTR ?g_bHit@@3HA, 1		; g_bHit

; 3881 : 														if (BHMPlay == FALSE)

	cmp	DWORD PTR ?BHMPlay@@3HA, 0		; BHMPlay
	jne	SHORT $LN879@DXW_MainLo

; 3882 : 														{
; 3883 : 															BHMPlay = TRUE;

	mov	DWORD PTR ?BHMPlay@@3HA, 1		; BHMPlay

; 3884 : 															BHplay[0] = TRUE;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?BHplay@@3PAHA[ecx], 1

; 3885 : 															Timer[24] = 2;

	mov	eax, 4
	imul	ecx, eax, 24
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 2
	jmp	$LN881@DXW_MainLo
$LN879@DXW_MainLo:

; 3886 : 														}
; 3887 : 														else if (BHMPlay == TRUE)

	cmp	DWORD PTR ?BHMPlay@@3HA, 1		; BHMPlay
	jne	$LN881@DXW_MainLo

; 3888 : 														{
; 3889 : 															BHplay[0] = TRUE;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?BHplay@@3PAHA[ecx], 1

; 3890 : 															BHplay[1] = FALSE;

	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR ?BHplay@@3PAHA[eax], 0

; 3891 : 															BHplay[2] = FALSE;

	mov	eax, 4
	shl	eax, 1
	mov	DWORD PTR ?BHplay@@3PAHA[eax], 0

; 3892 : 															BHframe[0] = 0;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?BHframe@@3PAHA[ecx], 0

; 3893 : 															BHframe[1] = 0;

	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR ?BHframe@@3PAHA[eax], 0

; 3894 : 															BHframe[2] = 0;

	mov	eax, 4
	shl	eax, 1
	mov	DWORD PTR ?BHframe@@3PAHA[eax], 0

; 3895 : 															Timer[24] = 2;

	mov	eax, 4
	imul	ecx, eax, 24
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 2

; 3896 : 															Timer[26] = 2;

	mov	eax, 4
	imul	ecx, eax, 26
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 2

; 3897 : 															Timer[27] = 2;

	mov	eax, 4
	imul	ecx, eax, 27
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 2
$LN881@DXW_MainLo:

; 3898 : 														}
; 3899 : 													}
; 3900 : 												}
; 3901 : 												if (g_bRight == 1 || g_bLeft == 1 && g_bJump == 0)

	cmp	DWORD PTR ?g_bRight@@3HA, 1		; g_bRight
	je	SHORT $LN884@DXW_MainLo
	cmp	DWORD PTR ?g_bLeft@@3HA, 1		; g_bLeft
	jne	SHORT $LN882@DXW_MainLo
	cmp	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump
	jne	SHORT $LN882@DXW_MainLo
$LN884@DXW_MainLo:

; 3902 : 												{
; 3903 : 													Timer[0] += 1;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	add	edx, 1
	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx

; 3904 : 												}
; 3905 : 												else

	jmp	SHORT $LN883@DXW_MainLo
$LN882@DXW_MainLo:

; 3906 : 												{
; 3907 : 													Timer[0] = 0;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0
$LN883@DXW_MainLo:

; 3908 : 												}
; 3909 : 												if (p3die == 0)

	cmp	DWORD PTR ?p3die@@3HA, 0		; p3die
	jne	$LN888@DXW_MainLo

; 3910 : 												{
; 3911 : 													if (Timer[7] == 0)

	mov	eax, 4
	imul	ecx, eax, 7
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jne	$LN888@DXW_MainLo

; 3912 : 													{
; 3913 : 														if (g_bBAT == TRUE)

	cmp	DWORD PTR ?g_bBAT@@3HA, 1		; g_bBAT
	jne	$LN887@DXW_MainLo

; 3914 : 														{
; 3915 : 															if (BAframe < 10 && Timer[6] < 3)

	cmp	DWORD PTR ?BAframe@@3HA, 10		; BAframe, 0000000aH
	jge	$LN889@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 6
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 3
	jge	$LN889@DXW_MainLo

; 3916 : 															{
; 3917 : 																BAHIT[0] = { 35,200,115,700 };

	mov	DWORD PTR $T7[ebp], 35			; 00000023H
	mov	DWORD PTR $T7[ebp+4], 200		; 000000c8H
	mov	DWORD PTR $T7[ebp+8], 115		; 00000073H
	mov	DWORD PTR $T7[ebp+12], 700		; 000002bcH
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 0
	add	ecx, OFFSET ?BAHIT@@3PAUtagRECT@@A	; BAHIT
	mov	edx, DWORD PTR $T7[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T7[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T7[ebp+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR $T7[ebp+12]
	mov	DWORD PTR [ecx+12], eax

; 3918 : 																BAHIT[1] = { 255,200,335,700 };

	mov	DWORD PTR $T6[ebp], 255			; 000000ffH
	mov	DWORD PTR $T6[ebp+4], 200		; 000000c8H
	mov	DWORD PTR $T6[ebp+8], 335		; 0000014fH
	mov	DWORD PTR $T6[ebp+12], 700		; 000002bcH
	mov	eax, 16					; 00000010H
	shl	eax, 0
	add	eax, OFFSET ?BAHIT@@3PAUtagRECT@@A	; BAHIT
	mov	ecx, DWORD PTR $T6[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T6[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR $T6[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR $T6[ebp+12]
	mov	DWORD PTR [eax+12], edx

; 3919 : 																BAHIT[2] = { 475,200,555,700 };

	mov	DWORD PTR $T5[ebp], 475			; 000001dbH
	mov	DWORD PTR $T5[ebp+4], 200		; 000000c8H
	mov	DWORD PTR $T5[ebp+8], 555		; 0000022bH
	mov	DWORD PTR $T5[ebp+12], 700		; 000002bcH
	mov	eax, 16					; 00000010H
	shl	eax, 1
	add	eax, OFFSET ?BAHIT@@3PAUtagRECT@@A	; BAHIT
	mov	ecx, DWORD PTR $T5[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T5[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR $T5[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR $T5[ebp+12]
	mov	DWORD PTR [eax+12], edx

; 3920 : 																BAHIT[3] = { 695,200,775,700 };

	mov	DWORD PTR $T4[ebp], 695			; 000002b7H
	mov	DWORD PTR $T4[ebp+4], 200		; 000000c8H
	mov	DWORD PTR $T4[ebp+8], 775		; 00000307H
	mov	DWORD PTR $T4[ebp+12], 700		; 000002bcH
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 3
	add	ecx, OFFSET ?BAHIT@@3PAUtagRECT@@A	; BAHIT
	mov	edx, DWORD PTR $T4[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR $T4[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T4[ebp+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR $T4[ebp+12]
	mov	DWORD PTR [ecx+12], eax

; 3921 : 																BAHIT[4] = { 915,200,995,700 };

	mov	DWORD PTR $T3[ebp], 915			; 00000393H
	mov	DWORD PTR $T3[ebp+4], 200		; 000000c8H
	mov	DWORD PTR $T3[ebp+8], 995		; 000003e3H
	mov	DWORD PTR $T3[ebp+12], 700		; 000002bcH
	mov	eax, 16					; 00000010H
	shl	eax, 2
	add	eax, OFFSET ?BAHIT@@3PAUtagRECT@@A	; BAHIT
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR $T3[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR $T3[ebp+12]
	mov	DWORD PTR [eax+12], edx

; 3922 : 																Timer[6]++;

	mov	eax, 4
	imul	ecx, eax, 6
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	add	edx, 1
	mov	eax, 4
	imul	ecx, eax, 6
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
	jmp	SHORT $LN891@DXW_MainLo
$LN889@DXW_MainLo:

; 3923 : 															}
; 3924 : 															else if (BAframe < 10 && Timer[6] >= 3)

	cmp	DWORD PTR ?BAframe@@3HA, 10		; BAframe, 0000000aH
	jge	SHORT $LN891@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 6
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 3
	jl	SHORT $LN891@DXW_MainLo

; 3925 : 															{
; 3926 : 																BAframe++;

	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	add	eax, 1
	mov	DWORD PTR ?BAframe@@3HA, eax		; BAframe

; 3927 : 																Timer[6] = 0;

	mov	eax, 4
	imul	ecx, eax, 6
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0
$LN891@DXW_MainLo:

; 3928 : 															}
; 3929 : 															if (BAframe >= 13)

	cmp	DWORD PTR ?BAframe@@3HA, 13		; BAframe, 0000000dH
	jl	$LN38@DXW_MainLo

; 3930 : 															{
; 3931 : 																int i = 0;

	mov	DWORD PTR _i$76[ebp], 0

; 3932 : 																for (i = 0; i < 5; i++)

	mov	DWORD PTR _i$76[ebp], 0
	jmp	SHORT $LN39@DXW_MainLo
$LN37@DXW_MainLo:
	mov	eax, DWORD PTR _i$76[ebp]
	add	eax, 1
	mov	DWORD PTR _i$76[ebp], eax
$LN39@DXW_MainLo:
	cmp	DWORD PTR _i$76[ebp], 5
	jge	$LN38@DXW_MainLo

; 3933 : 																{
; 3934 : 																	if (RandNum[i] == FALSE)

	mov	eax, DWORD PTR _i$76[ebp]
	cmp	DWORD PTR ?RandNum@@3PAHA[eax*4], 0
	jne	$LN897@DXW_MainLo

; 3935 : 																	{
; 3936 : 																		if (IntersectRect(&rcDest, &BAHIT[i], &PHIT))

	mov	esi, esp
	push	OFFSET ?PHIT@@3UtagRECT@@A		; PHIT
	mov	eax, DWORD PTR _i$76[ebp]
	shl	eax, 4
	add	eax, OFFSET ?BAHIT@@3PAUtagRECT@@A	; BAHIT
	push	eax
	push	OFFSET ?rcDest@@3UtagRECT@@A		; rcDest
	call	DWORD PTR __imp__IntersectRect@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN897@DXW_MainLo

; 3937 : 																		{
; 3938 : 																			PlayerHP -= 500;

	mov	eax, DWORD PTR ?PlayerHP@@3HA		; PlayerHP
	sub	eax, 500				; 000001f4H
	mov	DWORD PTR ?PlayerHP@@3HA, eax		; PlayerHP

; 3939 : 																			BAHIT[i] = { 0,0,1,1 };

	mov	DWORD PTR $T2[ebp], 0
	mov	DWORD PTR $T2[ebp+4], 0
	mov	DWORD PTR $T2[ebp+8], 1
	mov	DWORD PTR $T2[ebp+12], 1
	mov	eax, DWORD PTR _i$76[ebp]
	shl	eax, 4
	add	eax, OFFSET ?BAHIT@@3PAUtagRECT@@A	; BAHIT
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR $T2[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR $T2[ebp+12]
	mov	DWORD PTR [eax+12], edx

; 3940 : 																			if (PHplay == FALSE)

	cmp	DWORD PTR ?PHplay@@3HA, 0		; PHplay
	jne	SHORT $LN895@DXW_MainLo

; 3941 : 																			{
; 3942 : 																				PHplay = TRUE;

	mov	DWORD PTR ?PHplay@@3HA, 1		; PHplay

; 3943 : 																				Timer[25] = 3;

	mov	eax, 4
	imul	ecx, eax, 25
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 3

; 3944 : 																				PHframe = 0;

	mov	DWORD PTR ?PHframe@@3HA, 0		; PHframe
	jmp	SHORT $LN897@DXW_MainLo
$LN895@DXW_MainLo:

; 3945 : 																			}
; 3946 : 																			else if (PHplay == TRUE)

	cmp	DWORD PTR ?PHplay@@3HA, 1		; PHplay
	jne	SHORT $LN897@DXW_MainLo

; 3947 : 																			{
; 3948 : 																				PHplay = TRUE;

	mov	DWORD PTR ?PHplay@@3HA, 1		; PHplay

; 3949 : 																				Timer[25] = 3;

	mov	eax, 4
	imul	ecx, eax, 25
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 3

; 3950 : 																				PHframe = 0;

	mov	DWORD PTR ?PHframe@@3HA, 0		; PHframe
$LN897@DXW_MainLo:

; 3951 : 																			}
; 3952 : 																		}
; 3953 : 																	}
; 3954 : 																}

	jmp	$LN37@DXW_MainLo
$LN38@DXW_MainLo:

; 3955 : 															}
; 3956 : 															if (BAframe >= 10 && Timer[6] < 2 && BAframe < 19)

	cmp	DWORD PTR ?BAframe@@3HA, 10		; BAframe, 0000000aH
	jl	SHORT $LN898@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 6
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 2
	jge	SHORT $LN898@DXW_MainLo
	cmp	DWORD PTR ?BAframe@@3HA, 19		; BAframe, 00000013H
	jge	SHORT $LN898@DXW_MainLo

; 3957 : 															{
; 3958 : 																Timer[6]++;

	mov	eax, 4
	imul	ecx, eax, 6
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	add	edx, 1
	mov	eax, 4
	imul	ecx, eax, 6
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
	jmp	SHORT $LN900@DXW_MainLo
$LN898@DXW_MainLo:

; 3959 : 															}
; 3960 : 															else if (BAframe >= 10 && Timer[6] >= 2 && BAframe < 19)

	cmp	DWORD PTR ?BAframe@@3HA, 10		; BAframe, 0000000aH
	jl	SHORT $LN900@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 6
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 2
	jl	SHORT $LN900@DXW_MainLo
	cmp	DWORD PTR ?BAframe@@3HA, 19		; BAframe, 00000013H
	jge	SHORT $LN900@DXW_MainLo

; 3961 : 															{
; 3962 : 																BAframe++;

	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	add	eax, 1
	mov	DWORD PTR ?BAframe@@3HA, eax		; BAframe

; 3963 : 																Timer[6] = 0;

	mov	eax, 4
	imul	ecx, eax, 6
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0
$LN900@DXW_MainLo:

; 3964 : 															}
; 3965 : 															switch (Randpat)

	mov	eax, DWORD PTR ?Randpat@@3HA		; Randpat
	mov	DWORD PTR tv5544[ebp], eax
	cmp	DWORD PTR tv5544[ebp], 0
	je	SHORT $LN901@DXW_MainLo
	cmp	DWORD PTR tv5544[ebp], 1
	je	$LN902@DXW_MainLo
	cmp	DWORD PTR tv5544[ebp], 2
	je	$LN903@DXW_MainLo
	jmp	$LN40@DXW_MainLo
$LN901@DXW_MainLo:

; 3966 : 															{
; 3967 : 															case 0:
; 3968 : 																::__PutAnimeSprite(g_BossAtt, -170, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	-170					; ffffff56H
	mov	ecx, DWORD PTR ?g_BossAtt@@3PAUIDirectDrawSurface7@@A ; g_BossAtt
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H

; 3969 : 																::__PutAnimeSprite(g_BossAtt, 270, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	270					; 0000010eH
	mov	ecx, DWORD PTR ?g_BossAtt@@3PAUIDirectDrawSurface7@@A ; g_BossAtt
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H

; 3970 : 																::__PutAnimeSprite(g_BossAtt, 710, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	710					; 000002c6H
	mov	ecx, DWORD PTR ?g_BossAtt@@3PAUIDirectDrawSurface7@@A ; g_BossAtt
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H

; 3971 : 																break;

	jmp	$LN40@DXW_MainLo
$LN902@DXW_MainLo:

; 3972 : 															case 1:
; 3973 : 																::__PutAnimeSprite(g_BossAtt, 50, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	50					; 00000032H
	mov	ecx, DWORD PTR ?g_BossAtt@@3PAUIDirectDrawSurface7@@A ; g_BossAtt
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H

; 3974 : 																::__PutAnimeSprite(g_BossAtt, 490, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	490					; 000001eaH
	mov	ecx, DWORD PTR ?g_BossAtt@@3PAUIDirectDrawSurface7@@A ; g_BossAtt
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H

; 3975 : 																break;

	jmp	$LN40@DXW_MainLo
$LN903@DXW_MainLo:

; 3976 : 															case 2:
; 3977 : 																if (RandNum[0] == TRUE)

	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?RandNum@@3PAHA[ecx], 1
	jne	SHORT $LN904@DXW_MainLo

; 3978 : 																{
; 3979 : 																	::__PutAnimeSprite(g_BossAtt2, -170, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	-170					; ffffff56H
	mov	ecx, DWORD PTR ?g_BossAtt2@@3PAUIDirectDrawSurface7@@A ; g_BossAtt2
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H

; 3980 : 																}
; 3981 : 																else

	jmp	SHORT $LN905@DXW_MainLo
$LN904@DXW_MainLo:

; 3982 : 																{
; 3983 : 																	::__PutAnimeSprite(g_BossAtt, -170, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	-170					; ffffff56H
	mov	ecx, DWORD PTR ?g_BossAtt@@3PAUIDirectDrawSurface7@@A ; g_BossAtt
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN905@DXW_MainLo:

; 3984 : 																}
; 3985 : 																if (RandNum[1] == TRUE)

	mov	eax, 4
	shl	eax, 0
	cmp	DWORD PTR ?RandNum@@3PAHA[eax], 1
	jne	SHORT $LN906@DXW_MainLo

; 3986 : 																{
; 3987 : 																	::__PutAnimeSprite(g_BossAtt2, 50, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	50					; 00000032H
	mov	ecx, DWORD PTR ?g_BossAtt2@@3PAUIDirectDrawSurface7@@A ; g_BossAtt2
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H

; 3988 : 																}
; 3989 : 																else

	jmp	SHORT $LN907@DXW_MainLo
$LN906@DXW_MainLo:

; 3990 : 																{
; 3991 : 																	::__PutAnimeSprite(g_BossAtt, 50, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	50					; 00000032H
	mov	ecx, DWORD PTR ?g_BossAtt@@3PAUIDirectDrawSurface7@@A ; g_BossAtt
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN907@DXW_MainLo:

; 3992 : 																}
; 3993 : 																if (RandNum[2] == TRUE)

	mov	eax, 4
	shl	eax, 1
	cmp	DWORD PTR ?RandNum@@3PAHA[eax], 1
	jne	SHORT $LN908@DXW_MainLo

; 3994 : 																{
; 3995 : 																	::__PutAnimeSprite(g_BossAtt2, 270, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	270					; 0000010eH
	mov	ecx, DWORD PTR ?g_BossAtt2@@3PAUIDirectDrawSurface7@@A ; g_BossAtt2
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H

; 3996 : 																}
; 3997 : 																else

	jmp	SHORT $LN909@DXW_MainLo
$LN908@DXW_MainLo:

; 3998 : 																{
; 3999 : 																	::__PutAnimeSprite(g_BossAtt, 270, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	270					; 0000010eH
	mov	ecx, DWORD PTR ?g_BossAtt@@3PAUIDirectDrawSurface7@@A ; g_BossAtt
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN909@DXW_MainLo:

; 4000 : 																}
; 4001 : 																if (RandNum[3] == TRUE)

	mov	eax, 4
	imul	ecx, eax, 3
	cmp	DWORD PTR ?RandNum@@3PAHA[ecx], 1
	jne	SHORT $LN910@DXW_MainLo

; 4002 : 																{
; 4003 : 																	::__PutAnimeSprite(g_BossAtt2, 490, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	490					; 000001eaH
	mov	ecx, DWORD PTR ?g_BossAtt2@@3PAUIDirectDrawSurface7@@A ; g_BossAtt2
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H

; 4004 : 																}
; 4005 : 																else

	jmp	SHORT $LN911@DXW_MainLo
$LN910@DXW_MainLo:

; 4006 : 																{
; 4007 : 																	::__PutAnimeSprite(g_BossAtt, 490, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	490					; 000001eaH
	mov	ecx, DWORD PTR ?g_BossAtt@@3PAUIDirectDrawSurface7@@A ; g_BossAtt
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN911@DXW_MainLo:

; 4008 : 																}
; 4009 : 																if (RandNum[4] == TRUE)

	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?RandNum@@3PAHA[eax], 1
	jne	SHORT $LN912@DXW_MainLo

; 4010 : 																{
; 4011 : 																	::__PutAnimeSprite(g_BossAtt2, 710, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	710					; 000002c6H
	mov	ecx, DWORD PTR ?g_BossAtt2@@3PAUIDirectDrawSurface7@@A ; g_BossAtt2
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H

; 4012 : 																}
; 4013 : 																else

	jmp	SHORT $LN913@DXW_MainLo
$LN912@DXW_MainLo:

; 4014 : 																{
; 4015 : 																	::__PutAnimeSprite(g_BossAtt, 710, 50, 20, BAframe, 600, 656, 0);

	push	0
	push	656					; 00000290H
	push	600					; 00000258H
	mov	eax, DWORD PTR ?BAframe@@3HA		; BAframe
	push	eax
	push	20					; 00000014H
	push	50					; 00000032H
	push	710					; 000002c6H
	mov	ecx, DWORD PTR ?g_BossAtt@@3PAUIDirectDrawSurface7@@A ; g_BossAtt
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN913@DXW_MainLo:
$LN40@DXW_MainLo:

; 4016 : 																}
; 4017 : 																break;
; 4018 : 															}
; 4019 : 															if (BAframe >= 19)

	cmp	DWORD PTR ?BAframe@@3HA, 19		; BAframe, 00000013H
	jl	$LN916@DXW_MainLo

; 4020 : 															{
; 4021 : 																if (Timer[6] > 2)

	mov	eax, 4
	imul	ecx, eax, 6
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 2
	jle	SHORT $LN915@DXW_MainLo

; 4022 : 																{
; 4023 : 																	BAframe = 0;

	mov	DWORD PTR ?BAframe@@3HA, 0		; BAframe

; 4024 : 																	Randpat2 = Randpat;

	mov	eax, DWORD PTR ?Randpat@@3HA		; Randpat
	mov	DWORD PTR ?Randpat2@@3HA, eax		; Randpat2

; 4025 : 																	g_bBAT = FALSE;

	mov	DWORD PTR ?g_bBAT@@3HA, 0		; g_bBAT

; 4026 : 																	Timer[7] = 60;

	mov	eax, 4
	imul	ecx, eax, 7
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 60	; 0000003cH

; 4027 : 																	if (P3HP < 1000)

	cmp	DWORD PTR ?P3HP@@3HA, 1000		; P3HP, 000003e8H
	jge	SHORT $LN917@DXW_MainLo

; 4028 : 																	{
; 4029 : 																		Timer[7] -= 55;

	mov	eax, 4
	imul	ecx, eax, 7
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 55					; 00000037H
	mov	eax, 4
	imul	ecx, eax, 7
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
$LN917@DXW_MainLo:

; 4030 : 																	}
; 4031 : 																	Maximum = 0;

	mov	DWORD PTR ?Maximum@@3HA, 0		; Maximum

; 4032 : 																	RandNum[0, 1, 2, 3, 4] = { 0 };

	mov	eax, 4
	shl	eax, 2
	mov	DWORD PTR ?RandNum@@3PAHA[eax], 0

; 4033 : 																}
; 4034 : 																else

	jmp	SHORT $LN916@DXW_MainLo
$LN915@DXW_MainLo:

; 4035 : 																{
; 4036 : 																	Timer[6]++;

	mov	eax, 4
	imul	ecx, eax, 6
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	add	edx, 1
	mov	eax, 4
	imul	ecx, eax, 6
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
$LN916@DXW_MainLo:

; 4037 : 																}
; 4038 : 															}
; 4039 : 														}
; 4040 : 														else

	jmp	$LN888@DXW_MainLo
$LN887@DXW_MainLo:

; 4041 : 														{
; 4042 : 															Randpat = rand() % 3;

	call	_rand
	cdq
	mov	ecx, 3
	idiv	ecx
	mov	DWORD PTR ?Randpat@@3HA, edx		; Randpat

; 4043 : 															if (Randpat == Randpat2)

	mov	eax, DWORD PTR ?Randpat@@3HA		; Randpat
	cmp	eax, DWORD PTR ?Randpat2@@3HA		; Randpat2
	jne	SHORT $LN42@DXW_MainLo

; 4044 : 															{
; 4045 : 																switch (Randpat)

	mov	eax, DWORD PTR ?Randpat@@3HA		; Randpat
	mov	DWORD PTR tv5707[ebp], eax
	cmp	DWORD PTR tv5707[ebp], 0
	je	SHORT $LN919@DXW_MainLo
	cmp	DWORD PTR tv5707[ebp], 1
	je	SHORT $LN920@DXW_MainLo
	cmp	DWORD PTR tv5707[ebp], 2
	je	SHORT $LN921@DXW_MainLo
	jmp	SHORT $LN42@DXW_MainLo
$LN919@DXW_MainLo:

; 4046 : 																{
; 4047 : 																case 0:
; 4048 : 																	Randpat = 1;

	mov	DWORD PTR ?Randpat@@3HA, 1		; Randpat

; 4049 : 																	break;

	jmp	SHORT $LN42@DXW_MainLo
$LN920@DXW_MainLo:

; 4050 : 																case 1:
; 4051 : 																	Randpat = 2;

	mov	DWORD PTR ?Randpat@@3HA, 2		; Randpat

; 4052 : 																	break;

	jmp	SHORT $LN42@DXW_MainLo
$LN921@DXW_MainLo:

; 4053 : 																case 2:
; 4054 : 																	Randpat = 0;

	mov	DWORD PTR ?Randpat@@3HA, 0		; Randpat
$LN42@DXW_MainLo:

; 4055 : 																	break;
; 4056 : 																}
; 4057 : 															}
; 4058 : 															if (Randpat == 2)

	cmp	DWORD PTR ?Randpat@@3HA, 2		; Randpat
	jne	$LN938@DXW_MainLo

; 4059 : 															{
; 4060 : 																RandNum[0] = rand() % 2;

	call	_rand
	and	eax, -2147483647			; 80000001H
	jns	SHORT $LN1022@DXW_MainLo
	dec	eax
	or	eax, -2					; fffffffeH
	inc	eax
$LN1022@DXW_MainLo:
	mov	ecx, 4
	imul	edx, ecx, 0
	mov	DWORD PTR ?RandNum@@3PAHA[edx], eax

; 4061 : 																if (RandNum[0] == 1 && Maximum < 2)

	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?RandNum@@3PAHA[ecx], 1
	jne	SHORT $LN923@DXW_MainLo
	cmp	DWORD PTR ?Maximum@@3HA, 2		; Maximum
	jge	SHORT $LN923@DXW_MainLo

; 4062 : 																{
; 4063 : 																	Maximum++;

	mov	eax, DWORD PTR ?Maximum@@3HA		; Maximum
	add	eax, 1
	mov	DWORD PTR ?Maximum@@3HA, eax		; Maximum
	jmp	SHORT $LN925@DXW_MainLo
$LN923@DXW_MainLo:

; 4064 : 																}
; 4065 : 																else if (RandNum[0] == 1 && Maximum >= 2)

	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?RandNum@@3PAHA[ecx], 1
	jne	SHORT $LN925@DXW_MainLo
	cmp	DWORD PTR ?Maximum@@3HA, 2		; Maximum
	jl	SHORT $LN925@DXW_MainLo

; 4066 : 																{
; 4067 : 																	RandNum[0] = 0;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?RandNum@@3PAHA[ecx], 0
$LN925@DXW_MainLo:

; 4068 : 																}
; 4069 : 																RandNum[1] = rand() % 2;

	call	_rand
	and	eax, -2147483647			; 80000001H
	jns	SHORT $LN1023@DXW_MainLo
	dec	eax
	or	eax, -2					; fffffffeH
	inc	eax
$LN1023@DXW_MainLo:
	mov	ecx, 4
	shl	ecx, 0
	mov	DWORD PTR ?RandNum@@3PAHA[ecx], eax

; 4070 : 																if (RandNum[1] == 1 && Maximum < 2)

	mov	eax, 4
	shl	eax, 0
	cmp	DWORD PTR ?RandNum@@3PAHA[eax], 1
	jne	SHORT $LN926@DXW_MainLo
	cmp	DWORD PTR ?Maximum@@3HA, 2		; Maximum
	jge	SHORT $LN926@DXW_MainLo

; 4071 : 																{
; 4072 : 																	Maximum++;

	mov	eax, DWORD PTR ?Maximum@@3HA		; Maximum
	add	eax, 1
	mov	DWORD PTR ?Maximum@@3HA, eax		; Maximum
	jmp	SHORT $LN928@DXW_MainLo
$LN926@DXW_MainLo:

; 4073 : 																}
; 4074 : 																else if (RandNum[1] == 1 && Maximum >= 2)

	mov	eax, 4
	shl	eax, 0
	cmp	DWORD PTR ?RandNum@@3PAHA[eax], 1
	jne	SHORT $LN928@DXW_MainLo
	cmp	DWORD PTR ?Maximum@@3HA, 2		; Maximum
	jl	SHORT $LN928@DXW_MainLo

; 4075 : 																{
; 4076 : 																	RandNum[1] = 0;

	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR ?RandNum@@3PAHA[eax], 0
$LN928@DXW_MainLo:

; 4077 : 																}
; 4078 : 																RandNum[2] = rand() % 2;

	call	_rand
	and	eax, -2147483647			; 80000001H
	jns	SHORT $LN1024@DXW_MainLo
	dec	eax
	or	eax, -2					; fffffffeH
	inc	eax
$LN1024@DXW_MainLo:
	mov	ecx, 4
	shl	ecx, 1
	mov	DWORD PTR ?RandNum@@3PAHA[ecx], eax

; 4079 : 																if (RandNum[2] == 1 && Maximum < 2)

	mov	eax, 4
	shl	eax, 1
	cmp	DWORD PTR ?RandNum@@3PAHA[eax], 1
	jne	SHORT $LN929@DXW_MainLo
	cmp	DWORD PTR ?Maximum@@3HA, 2		; Maximum
	jge	SHORT $LN929@DXW_MainLo

; 4080 : 																{
; 4081 : 																	Maximum++;

	mov	eax, DWORD PTR ?Maximum@@3HA		; Maximum
	add	eax, 1
	mov	DWORD PTR ?Maximum@@3HA, eax		; Maximum
	jmp	SHORT $LN931@DXW_MainLo
$LN929@DXW_MainLo:

; 4082 : 																}
; 4083 : 																else if (RandNum[2] == 1 && Maximum >= 2)

	mov	eax, 4
	shl	eax, 1
	cmp	DWORD PTR ?RandNum@@3PAHA[eax], 1
	jne	SHORT $LN931@DXW_MainLo
	cmp	DWORD PTR ?Maximum@@3HA, 2		; Maximum
	jl	SHORT $LN931@DXW_MainLo

; 4084 : 																{
; 4085 : 																	RandNum[2] = 0;

	mov	eax, 4
	shl	eax, 1
	mov	DWORD PTR ?RandNum@@3PAHA[eax], 0
$LN931@DXW_MainLo:

; 4086 : 																}
; 4087 : 																RandNum[3] = rand() % 2;

	call	_rand
	and	eax, -2147483647			; 80000001H
	jns	SHORT $LN1025@DXW_MainLo
	dec	eax
	or	eax, -2					; fffffffeH
	inc	eax
$LN1025@DXW_MainLo:
	mov	ecx, 4
	imul	edx, ecx, 3
	mov	DWORD PTR ?RandNum@@3PAHA[edx], eax

; 4088 : 																if (RandNum[3] == 1 && Maximum < 2)

	mov	eax, 4
	imul	ecx, eax, 3
	cmp	DWORD PTR ?RandNum@@3PAHA[ecx], 1
	jne	SHORT $LN932@DXW_MainLo
	cmp	DWORD PTR ?Maximum@@3HA, 2		; Maximum
	jge	SHORT $LN932@DXW_MainLo

; 4089 : 																{
; 4090 : 																	Maximum++;

	mov	eax, DWORD PTR ?Maximum@@3HA		; Maximum
	add	eax, 1
	mov	DWORD PTR ?Maximum@@3HA, eax		; Maximum
	jmp	SHORT $LN934@DXW_MainLo
$LN932@DXW_MainLo:

; 4091 : 																}
; 4092 : 																else if (RandNum[3] == 1 && Maximum >= 2)

	mov	eax, 4
	imul	ecx, eax, 3
	cmp	DWORD PTR ?RandNum@@3PAHA[ecx], 1
	jne	SHORT $LN934@DXW_MainLo
	cmp	DWORD PTR ?Maximum@@3HA, 2		; Maximum
	jl	SHORT $LN934@DXW_MainLo

; 4093 : 																{
; 4094 : 																	RandNum[3] = 0;

	mov	eax, 4
	imul	ecx, eax, 3
	mov	DWORD PTR ?RandNum@@3PAHA[ecx], 0
$LN934@DXW_MainLo:

; 4095 : 																}
; 4096 : 																RandNum[4] = rand() % 2;

	call	_rand
	and	eax, -2147483647			; 80000001H
	jns	SHORT $LN1026@DXW_MainLo
	dec	eax
	or	eax, -2					; fffffffeH
	inc	eax
$LN1026@DXW_MainLo:
	mov	ecx, 4
	shl	ecx, 2
	mov	DWORD PTR ?RandNum@@3PAHA[ecx], eax

; 4097 : 																if (RandNum[4] == 1 && Maximum < 2)

	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?RandNum@@3PAHA[eax], 1
	jne	SHORT $LN935@DXW_MainLo
	cmp	DWORD PTR ?Maximum@@3HA, 2		; Maximum
	jge	SHORT $LN935@DXW_MainLo

; 4098 : 																{
; 4099 : 																	Maximum++;

	mov	eax, DWORD PTR ?Maximum@@3HA		; Maximum
	add	eax, 1
	mov	DWORD PTR ?Maximum@@3HA, eax		; Maximum
	jmp	SHORT $LN937@DXW_MainLo
$LN935@DXW_MainLo:

; 4100 : 																}
; 4101 : 																else if (RandNum[4] == 1 && Maximum >= 2)

	mov	eax, 4
	shl	eax, 2
	cmp	DWORD PTR ?RandNum@@3PAHA[eax], 1
	jne	SHORT $LN937@DXW_MainLo
	cmp	DWORD PTR ?Maximum@@3HA, 2		; Maximum
	jl	SHORT $LN937@DXW_MainLo

; 4102 : 																{
; 4103 : 																	RandNum[4] = 0;

	mov	eax, 4
	shl	eax, 2
	mov	DWORD PTR ?RandNum@@3PAHA[eax], 0
$LN937@DXW_MainLo:

; 4104 : 																}
; 4105 : 																if (Maximum == 0)

	cmp	DWORD PTR ?Maximum@@3HA, 0		; Maximum
	jne	SHORT $LN938@DXW_MainLo

; 4106 : 																{
; 4107 : 																	int n = 0;

	mov	DWORD PTR _n$75[ebp], 0

; 4108 : 																	n = rand() % 4;

	call	_rand
	and	eax, -2147483645			; 80000003H
	jns	SHORT $LN1027@DXW_MainLo
	dec	eax
	or	eax, -4					; fffffffcH
	inc	eax
$LN1027@DXW_MainLo:
	mov	DWORD PTR _n$75[ebp], eax

; 4109 : 																	RandNum[n] = 1;

	mov	eax, DWORD PTR _n$75[ebp]
	mov	DWORD PTR ?RandNum@@3PAHA[eax*4], 1
$LN938@DXW_MainLo:

; 4110 : 																}
; 4111 : 															}
; 4112 : 															switch (Randpat)

	mov	eax, DWORD PTR ?Randpat@@3HA		; Randpat
	mov	DWORD PTR tv5792[ebp], eax
	cmp	DWORD PTR tv5792[ebp], 0
	je	SHORT $LN939@DXW_MainLo
	cmp	DWORD PTR tv5792[ebp], 1
	je	SHORT $LN940@DXW_MainLo
	jmp	$LN44@DXW_MainLo
$LN939@DXW_MainLo:

; 4113 : 															{
; 4114 : 															case 0:
; 4115 : 																RandNum[0] = 0;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?RandNum@@3PAHA[ecx], 0

; 4116 : 																RandNum[1] = 1;

	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR ?RandNum@@3PAHA[eax], 1

; 4117 : 																RandNum[2] = 0;

	mov	eax, 4
	shl	eax, 1
	mov	DWORD PTR ?RandNum@@3PAHA[eax], 0

; 4118 : 																RandNum[3] = 1;

	mov	eax, 4
	imul	ecx, eax, 3
	mov	DWORD PTR ?RandNum@@3PAHA[ecx], 1

; 4119 : 																RandNum[4] = 0;

	mov	eax, 4
	shl	eax, 2
	mov	DWORD PTR ?RandNum@@3PAHA[eax], 0

; 4120 : 																break;

	jmp	SHORT $LN44@DXW_MainLo
$LN940@DXW_MainLo:

; 4121 : 															case 1:
; 4122 : 																RandNum[0] = 1;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?RandNum@@3PAHA[ecx], 1

; 4123 : 																RandNum[1] = 0;

	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR ?RandNum@@3PAHA[eax], 0

; 4124 : 																RandNum[2] = 1;

	mov	eax, 4
	shl	eax, 1
	mov	DWORD PTR ?RandNum@@3PAHA[eax], 1

; 4125 : 																RandNum[3] = 0;

	mov	eax, 4
	imul	ecx, eax, 3
	mov	DWORD PTR ?RandNum@@3PAHA[ecx], 0

; 4126 : 																RandNum[4] = 1;

	mov	eax, 4
	shl	eax, 2
	mov	DWORD PTR ?RandNum@@3PAHA[eax], 1
$LN44@DXW_MainLo:

; 4127 : 																break;
; 4128 : 															}
; 4129 : 															g_bBAT = TRUE;

	mov	DWORD PTR ?g_bBAT@@3HA, 1		; g_bBAT
$LN888@DXW_MainLo:

; 4130 : 														}
; 4131 : 													}
; 4132 : 												}
; 4133 : 												if (PHplay == TRUE)

	cmp	DWORD PTR ?PHplay@@3HA, 1		; PHplay
	jne	$LN947@DXW_MainLo

; 4134 : 												{
; 4135 : 													if (Timer[25] == 0)

	mov	eax, 4
	imul	ecx, eax, 25
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jne	SHORT $LN942@DXW_MainLo

; 4136 : 													{
; 4137 : 														PHframe++;

	mov	eax, DWORD PTR ?PHframe@@3HA		; PHframe
	add	eax, 1
	mov	DWORD PTR ?PHframe@@3HA, eax		; PHframe

; 4138 : 														Timer[25] = 3;

	mov	eax, 4
	imul	ecx, eax, 25
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 3

; 4139 : 														if (PHframe > 5)

	cmp	DWORD PTR ?PHframe@@3HA, 5		; PHframe
	jle	SHORT $LN944@DXW_MainLo

; 4140 : 														{
; 4141 : 															PHplay = FALSE;

	mov	DWORD PTR ?PHplay@@3HA, 0		; PHplay

; 4142 : 															PHframe = 0;

	mov	DWORD PTR ?PHframe@@3HA, 0		; PHframe

; 4143 : 															Timer[25] = 0;

	mov	eax, 4
	imul	ecx, eax, 25
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0
$LN944@DXW_MainLo:

; 4144 : 														}
; 4145 : 													}

	jmp	SHORT $LN943@DXW_MainLo
$LN942@DXW_MainLo:

; 4146 : 													else { Timer[25] --; }

	mov	eax, 4
	imul	ecx, eax, 25
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 25
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
$LN943@DXW_MainLo:

; 4147 : 													if (PHplay == TRUE)

	cmp	DWORD PTR ?PHplay@@3HA, 1		; PHplay
	jne	SHORT $LN947@DXW_MainLo

; 4148 : 													{
; 4149 : 														if (g_bLookL)

	cmp	DWORD PTR ?g_bLookL@@3HA, 0		; g_bLookL
	je	SHORT $LN946@DXW_MainLo

; 4150 : 														{
; 4151 : 															::__PutAnimeSprite(g_pDDSDPlayerHit, nX - 50, nY - 70, 6, PHframe, 180, 226, 0);

	push	0
	push	226					; 000000e2H
	push	180					; 000000b4H
	mov	eax, DWORD PTR ?PHframe@@3HA		; PHframe
	push	eax
	push	6
	mov	ecx, DWORD PTR _nY$[ebp]
	sub	ecx, 70					; 00000046H
	push	ecx
	mov	edx, DWORD PTR _nX$[ebp]
	sub	edx, 50					; 00000032H
	push	edx
	mov	eax, DWORD PTR ?g_pDDSDPlayerHit@@3PAUIDirectDrawSurface7@@A ; g_pDDSDPlayerHit
	push	eax
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN946@DXW_MainLo:

; 4152 : 														}
; 4153 : 														if (g_bLookR)

	cmp	DWORD PTR ?g_bLookR@@3HA, 0		; g_bLookR
	je	SHORT $LN947@DXW_MainLo

; 4154 : 														{
; 4155 : 															::__PutAnimeSprite(g_pDDSDPlayerHit, nX - 40, nY - 70, 6, PHframe, 180, 226, 0);

	push	0
	push	226					; 000000e2H
	push	180					; 000000b4H
	mov	eax, DWORD PTR ?PHframe@@3HA		; PHframe
	push	eax
	push	6
	mov	ecx, DWORD PTR _nY$[ebp]
	sub	ecx, 70					; 00000046H
	push	ecx
	mov	edx, DWORD PTR _nX$[ebp]
	sub	edx, 40					; 00000028H
	push	edx
	mov	eax, DWORD PTR ?g_pDDSDPlayerHit@@3PAUIDirectDrawSurface7@@A ; g_pDDSDPlayerHit
	push	eax
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN947@DXW_MainLo:

; 4156 : 														}
; 4157 : 													}
; 4158 : 												}
; 4159 : 												if (BHMPlay == TRUE)

	cmp	DWORD PTR ?BHMPlay@@3HA, 1		; BHMPlay
	jne	$LN972@DXW_MainLo

; 4160 : 												{
; 4161 : 													if (Timer[24] == 0 && BHplay[0] == TRUE)

	mov	eax, 4
	imul	ecx, eax, 24
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jne	$LN949@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?BHplay@@3PAHA[ecx], 1
	jne	$LN949@DXW_MainLo

; 4162 : 													{
; 4163 : 														BHframe[0]++;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR ?BHframe@@3PAHA[ecx]
	add	edx, 1
	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?BHframe@@3PAHA[ecx], edx

; 4164 : 														Timer[24] = 2;

	mov	eax, 4
	imul	ecx, eax, 24
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 2

; 4165 : 														if (BHframe[0] == 6)

	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?BHframe@@3PAHA[ecx], 6
	jne	SHORT $LN951@DXW_MainLo

; 4166 : 														{
; 4167 : 															BHframe[0] = 0;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?BHframe@@3PAHA[ecx], 0

; 4168 : 															Timer[24] = 0;

	mov	eax, 4
	imul	ecx, eax, 24
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0

; 4169 : 															BHplay[0] = FALSE;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?BHplay@@3PAHA[ecx], 0
$LN951@DXW_MainLo:

; 4170 : 														}
; 4171 : 														if (BHframe[0] == 4 && BHplay[1] == FALSE)

	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?BHframe@@3PAHA[ecx], 4
	jne	SHORT $LN952@DXW_MainLo
	mov	eax, 4
	shl	eax, 0
	cmp	DWORD PTR ?BHplay@@3PAHA[eax], 0
	jne	SHORT $LN952@DXW_MainLo

; 4172 : 														{
; 4173 : 															Timer[26] = 2;

	mov	eax, 4
	imul	ecx, eax, 26
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 2

; 4174 : 															BHplay[1] = TRUE;

	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR ?BHplay@@3PAHA[eax], 1
$LN952@DXW_MainLo:

; 4175 : 														}
; 4176 : 													}

	jmp	SHORT $LN953@DXW_MainLo
$LN949@DXW_MainLo:

; 4177 : 													else if (Timer[24] > 0 && BHplay[0] == TRUE) { Timer[24]--; }

	mov	eax, 4
	imul	ecx, eax, 24
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jle	SHORT $LN953@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?BHplay@@3PAHA[ecx], 1
	jne	SHORT $LN953@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 24
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 24
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
$LN953@DXW_MainLo:

; 4178 : 													if (Timer[26] == 0 && BHplay[1] == TRUE)

	mov	eax, 4
	imul	ecx, eax, 26
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jne	$LN954@DXW_MainLo
	mov	eax, 4
	shl	eax, 0
	cmp	DWORD PTR ?BHplay@@3PAHA[eax], 1
	jne	$LN954@DXW_MainLo

; 4179 : 													{
; 4180 : 														BHframe[1]++;

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR ?BHframe@@3PAHA[eax]
	add	ecx, 1
	mov	edx, 4
	shl	edx, 0
	mov	DWORD PTR ?BHframe@@3PAHA[edx], ecx

; 4181 : 														Timer[26] = 2;

	mov	eax, 4
	imul	ecx, eax, 26
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 2

; 4182 : 														if (BHframe[1] == 6)

	mov	eax, 4
	shl	eax, 0
	cmp	DWORD PTR ?BHframe@@3PAHA[eax], 6
	jne	SHORT $LN956@DXW_MainLo

; 4183 : 														{
; 4184 : 															BHframe[1] = 0;

	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR ?BHframe@@3PAHA[eax], 0

; 4185 : 															Timer[26] = 0;

	mov	eax, 4
	imul	ecx, eax, 26
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0

; 4186 : 															BHplay[1] = FALSE;

	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR ?BHplay@@3PAHA[eax], 0
$LN956@DXW_MainLo:

; 4187 : 														}
; 4188 : 														if (BHframe[1] == 4 && BHplay[2] == FALSE)

	mov	eax, 4
	shl	eax, 0
	cmp	DWORD PTR ?BHframe@@3PAHA[eax], 4
	jne	SHORT $LN957@DXW_MainLo
	mov	eax, 4
	shl	eax, 1
	cmp	DWORD PTR ?BHplay@@3PAHA[eax], 0
	jne	SHORT $LN957@DXW_MainLo

; 4189 : 														{
; 4190 : 															Timer[27] = 2;

	mov	eax, 4
	imul	ecx, eax, 27
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 2

; 4191 : 															BHplay[2] = TRUE;

	mov	eax, 4
	shl	eax, 1
	mov	DWORD PTR ?BHplay@@3PAHA[eax], 1
$LN957@DXW_MainLo:

; 4192 : 														}
; 4193 : 													}

	jmp	SHORT $LN958@DXW_MainLo
$LN954@DXW_MainLo:

; 4194 : 													else if (Timer[26] > 0 && BHplay[1] == TRUE) { Timer[26]--; }

	mov	eax, 4
	imul	ecx, eax, 26
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jle	SHORT $LN958@DXW_MainLo
	mov	eax, 4
	shl	eax, 0
	cmp	DWORD PTR ?BHplay@@3PAHA[eax], 1
	jne	SHORT $LN958@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 26
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 26
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
$LN958@DXW_MainLo:

; 4195 : 													if (Timer[27] == 0 && BHplay[2] == TRUE)

	mov	eax, 4
	imul	ecx, eax, 27
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jne	$LN959@DXW_MainLo
	mov	eax, 4
	shl	eax, 1
	cmp	DWORD PTR ?BHplay@@3PAHA[eax], 1
	jne	SHORT $LN959@DXW_MainLo

; 4196 : 													{
; 4197 : 														BHframe[2]++;

	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR ?BHframe@@3PAHA[eax]
	add	ecx, 1
	mov	edx, 4
	shl	edx, 1
	mov	DWORD PTR ?BHframe@@3PAHA[edx], ecx

; 4198 : 														Timer[27] = 2;

	mov	eax, 4
	imul	ecx, eax, 27
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 2

; 4199 : 														if (BHframe[2] == 6)

	mov	eax, 4
	shl	eax, 1
	cmp	DWORD PTR ?BHframe@@3PAHA[eax], 6
	jne	SHORT $LN961@DXW_MainLo

; 4200 : 														{
; 4201 : 															BHframe[2] = 0;

	mov	eax, 4
	shl	eax, 1
	mov	DWORD PTR ?BHframe@@3PAHA[eax], 0

; 4202 : 															Timer[27] = 0;

	mov	eax, 4
	imul	ecx, eax, 27
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0

; 4203 : 															BHplay[2] = FALSE;

	mov	eax, 4
	shl	eax, 1
	mov	DWORD PTR ?BHplay@@3PAHA[eax], 0
$LN961@DXW_MainLo:

; 4204 : 														}
; 4205 : 													}

	jmp	SHORT $LN962@DXW_MainLo
$LN959@DXW_MainLo:

; 4206 : 													else if (Timer[27] > 0 && BHplay[2] == TRUE) { Timer[27]--; }

	mov	eax, 4
	imul	ecx, eax, 27
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jle	SHORT $LN962@DXW_MainLo
	mov	eax, 4
	shl	eax, 1
	cmp	DWORD PTR ?BHplay@@3PAHA[eax], 1
	jne	SHORT $LN962@DXW_MainLo
	mov	eax, 4
	imul	ecx, eax, 27
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 27
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
$LN962@DXW_MainLo:

; 4207 : 													if (BHplay[0] == FALSE && BHplay[1] == FALSE && BHplay[2] == FALSE)

	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?BHplay@@3PAHA[ecx], 0
	jne	SHORT $LN963@DXW_MainLo
	mov	eax, 4
	shl	eax, 0
	cmp	DWORD PTR ?BHplay@@3PAHA[eax], 0
	jne	SHORT $LN963@DXW_MainLo
	mov	eax, 4
	shl	eax, 1
	cmp	DWORD PTR ?BHplay@@3PAHA[eax], 0
	jne	SHORT $LN963@DXW_MainLo

; 4208 : 													{
; 4209 : 														BHMPlay = FALSE;

	mov	DWORD PTR ?BHMPlay@@3HA, 0		; BHMPlay
$LN963@DXW_MainLo:

; 4210 : 													}
; 4211 : 													if (BHplay[0] == TRUE)

	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?BHplay@@3PAHA[ecx], 1
	jne	$LN966@DXW_MainLo

; 4212 : 													{
; 4213 : 														if (g_bLookL)

	cmp	DWORD PTR ?g_bLookL@@3HA, 0		; g_bLookL
	je	SHORT $LN965@DXW_MainLo

; 4214 : 														{
; 4215 : 															::__PutAnimeSprite(g_pDDSDBossHit, bnX, bnY - 40, 6, BHframe[0], 180, 226, 0);

	push	0
	push	226					; 000000e2H
	push	180					; 000000b4H
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR ?BHframe@@3PAHA[ecx]
	push	edx
	push	6
	mov	eax, DWORD PTR _bnY$[ebp]
	sub	eax, 40					; 00000028H
	push	eax
	mov	ecx, DWORD PTR _bnX$[ebp]
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSDBossHit@@3PAUIDirectDrawSurface7@@A ; g_pDDSDBossHit
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN965@DXW_MainLo:

; 4216 : 														}
; 4217 : 														if (g_bLookR)

	cmp	DWORD PTR ?g_bLookR@@3HA, 0		; g_bLookR
	je	SHORT $LN966@DXW_MainLo

; 4218 : 														{
; 4219 : 															::__PutAnimeSprite(g_pDDSDBossHit, bnX + 20, bnY - 40, 6, BHframe[0], 180, 226, 0);

	push	0
	push	226					; 000000e2H
	push	180					; 000000b4H
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR ?BHframe@@3PAHA[ecx]
	push	edx
	push	6
	mov	eax, DWORD PTR _bnY$[ebp]
	sub	eax, 40					; 00000028H
	push	eax
	mov	ecx, DWORD PTR _bnX$[ebp]
	add	ecx, 20					; 00000014H
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSDBossHit@@3PAUIDirectDrawSurface7@@A ; g_pDDSDBossHit
	push	edx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN966@DXW_MainLo:

; 4220 : 														}
; 4221 : 													}
; 4222 : 													if (BHplay[1] == TRUE)

	mov	eax, 4
	shl	eax, 0
	cmp	DWORD PTR ?BHplay@@3PAHA[eax], 1
	jne	$LN969@DXW_MainLo

; 4223 : 													{
; 4224 : 														if (g_bLookL)

	cmp	DWORD PTR ?g_bLookL@@3HA, 0		; g_bLookL
	je	SHORT $LN968@DXW_MainLo

; 4225 : 														{
; 4226 : 															::__PutAnimeSprite(g_pDDSDBossHit, bnX, bnY - 40, 6, BHframe[1], 180, 226, 0);

	push	0
	push	226					; 000000e2H
	push	180					; 000000b4H
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR ?BHframe@@3PAHA[eax]
	push	ecx
	push	6
	mov	edx, DWORD PTR _bnY$[ebp]
	sub	edx, 40					; 00000028H
	push	edx
	mov	eax, DWORD PTR _bnX$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?g_pDDSDBossHit@@3PAUIDirectDrawSurface7@@A ; g_pDDSDBossHit
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN968@DXW_MainLo:

; 4227 : 														}
; 4228 : 														if (g_bLookR)

	cmp	DWORD PTR ?g_bLookR@@3HA, 0		; g_bLookR
	je	SHORT $LN969@DXW_MainLo

; 4229 : 														{
; 4230 : 															::__PutAnimeSprite(g_pDDSDBossHit, bnX + 20, bnY - 40, 6, BHframe[1], 180, 226, 0);

	push	0
	push	226					; 000000e2H
	push	180					; 000000b4H
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR ?BHframe@@3PAHA[eax]
	push	ecx
	push	6
	mov	edx, DWORD PTR _bnY$[ebp]
	sub	edx, 40					; 00000028H
	push	edx
	mov	eax, DWORD PTR _bnX$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	mov	ecx, DWORD PTR ?g_pDDSDBossHit@@3PAUIDirectDrawSurface7@@A ; g_pDDSDBossHit
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN969@DXW_MainLo:

; 4231 : 														}
; 4232 : 													}
; 4233 : 													if (BHplay[2] == TRUE)

	mov	eax, 4
	shl	eax, 1
	cmp	DWORD PTR ?BHplay@@3PAHA[eax], 1
	jne	$LN972@DXW_MainLo

; 4234 : 													{
; 4235 : 														if (g_bLookL)

	cmp	DWORD PTR ?g_bLookL@@3HA, 0		; g_bLookL
	je	SHORT $LN971@DXW_MainLo

; 4236 : 														{
; 4237 : 															::__PutAnimeSprite(g_pDDSDBossHit, bnX, bnY - 40, 6, BHframe[2], 180, 226, 0);

	push	0
	push	226					; 000000e2H
	push	180					; 000000b4H
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR ?BHframe@@3PAHA[eax]
	push	ecx
	push	6
	mov	edx, DWORD PTR _bnY$[ebp]
	sub	edx, 40					; 00000028H
	push	edx
	mov	eax, DWORD PTR _bnX$[ebp]
	push	eax
	mov	ecx, DWORD PTR ?g_pDDSDBossHit@@3PAUIDirectDrawSurface7@@A ; g_pDDSDBossHit
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN971@DXW_MainLo:

; 4238 : 														}
; 4239 : 														if (g_bLookR)

	cmp	DWORD PTR ?g_bLookR@@3HA, 0		; g_bLookR
	je	SHORT $LN972@DXW_MainLo

; 4240 : 														{
; 4241 : 															::__PutAnimeSprite(g_pDDSDBossHit, bnX + 20, bnY - 40, 6, BHframe[2], 180, 226, 0);

	push	0
	push	226					; 000000e2H
	push	180					; 000000b4H
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR ?BHframe@@3PAHA[eax]
	push	ecx
	push	6
	mov	edx, DWORD PTR _bnY$[ebp]
	sub	edx, 40					; 00000028H
	push	edx
	mov	eax, DWORD PTR _bnX$[ebp]
	add	eax, 20					; 00000014H
	push	eax
	mov	ecx, DWORD PTR ?g_pDDSDBossHit@@3PAUIDirectDrawSurface7@@A ; g_pDDSDBossHit
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN972@DXW_MainLo:

; 4242 : 														}
; 4243 : 													}
; 4244 : 												}
; 4245 : 												if (P3HP < 1)

	cmp	DWORD PTR ?P3HP@@3HA, 1			; P3HP
	jge	$LN973@DXW_MainLo

; 4246 : 												{
; 4247 : 													if (g_pDS[0])

	mov	eax, 4
	imul	ecx, eax, 0
	cmp	DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[ecx], 0
	je	SHORT $LN974@DXW_MainLo

; 4248 : 														m_HHSound.Stop(g_pDS[0]);

	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[ecx]
	push	edx
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?Stop@CHHSound@@QAEXPAUIDirectSoundBuffer@@@Z ; CHHSound::Stop
$LN974@DXW_MainLo:

; 4249 : 													p3die = 1;

	mov	DWORD PTR ?p3die@@3HA, 1		; p3die

; 4250 : 													g_nPhaze = 4;

	mov	DWORD PTR ?g_nPhaze@@3HA, 4		; g_nPhaze

; 4251 : 													g_Pos.x = 0;

	mov	DWORD PTR ?g_Pos@@3UtagPOINT@@A, 0

; 4252 : 													g_Pos.y = 0;

	mov	DWORD PTR ?g_Pos@@3UtagPOINT@@A+4, 0

; 4253 : 													g_BPos.x = 0;

	mov	DWORD PTR ?g_BPos@@3UtagPOINT@@A, 0

; 4254 : 													g_BPos.y = 0;

	mov	DWORD PTR ?g_BPos@@3UtagPOINT@@A+4, 0

; 4255 : 													Gravity = 0;

	mov	DWORD PTR ?Gravity@@3HA, 0		; Gravity

; 4256 : 													g_bSetSpeed = FALSE;

	mov	DWORD PTR ?g_bSetSpeed@@3HA, 0		; g_bSetSpeed

; 4257 : 													g_bJump = FALSE;

	mov	DWORD PTR ?g_bJump@@3HA, 0		; g_bJump

; 4258 : 													g_bJaccel = FALSE;

	mov	DWORD PTR ?g_bJaccel@@3HA, 0		; g_bJaccel

; 4259 : 													g_bJLeft = FALSE;

	mov	DWORD PTR ?g_bJLeft@@3HA, 0		; g_bJLeft

; 4260 : 													g_bJRight = FALSE;

	mov	DWORD PTR ?g_bJRight@@3HA, 0		; g_bJRight

; 4261 : 													g_bCast = FALSE;

	mov	DWORD PTR ?g_bCast@@3HA, 0		; g_bCast

; 4262 : 													Timer[17] = 0;

	mov	eax, 4
	imul	ecx, eax, 17
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0

; 4263 : 													Timer[16] = 0;

	mov	eax, 4
	shl	eax, 4
	mov	DWORD PTR ?Timer@@3PAHA[eax], 0

; 4264 : 													BossAtt = FALSE;

	mov	DWORD PTR ?BossAtt@@3HA, 0		; BossAtt

; 4265 : 													BAL = FALSE;

	mov	DWORD PTR ?BAL@@3HA, 0			; BAL

; 4266 : 													BAR = FALSE;

	mov	DWORD PTR ?BAR@@3HA, 0			; BAR

; 4267 : 													BKframe = 0;

	mov	DWORD PTR ?BKframe@@3HA, 0		; BKframe

; 4268 : 													KnockHIT = FALSE;

	mov	DWORD PTR ?KnockHIT@@3HA, 0		; KnockHIT

; 4269 : 													Knock = { 0,0,1,1 };

	mov	DWORD PTR $T1[ebp], 0
	mov	DWORD PTR $T1[ebp+4], 0
	mov	DWORD PTR $T1[ebp+8], 1
	mov	DWORD PTR $T1[ebp+12], 1
	mov	eax, DWORD PTR $T1[ebp]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A, eax
	mov	ecx, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+4, ecx
	mov	edx, DWORD PTR $T1[ebp+8]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+8, edx
	mov	eax, DWORD PTR $T1[ebp+12]
	mov	DWORD PTR ?Knock@@3UtagRECT@@A+12, eax

; 4270 : 													BHplay[0] = FALSE;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?BHplay@@3PAHA[ecx], 0

; 4271 : 													BHplay[1] = FALSE;

	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR ?BHplay@@3PAHA[eax], 0

; 4272 : 													BHplay[2] = FALSE;

	mov	eax, 4
	shl	eax, 1
	mov	DWORD PTR ?BHplay@@3PAHA[eax], 0

; 4273 : 													BAframe = 0;

	mov	DWORD PTR ?BAframe@@3HA, 0		; BAframe

; 4274 : 													Randpat2 = Randpat;

	mov	eax, DWORD PTR ?Randpat@@3HA		; Randpat
	mov	DWORD PTR ?Randpat2@@3HA, eax		; Randpat2

; 4275 : 													g_bBAT = FALSE;

	mov	DWORD PTR ?g_bBAT@@3HA, 0		; g_bBAT

; 4276 : 													Timer[7] = 60;

	mov	eax, 4
	imul	ecx, eax, 7
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 60	; 0000003cH

; 4277 : 													Maximum = 0;

	mov	DWORD PTR ?Maximum@@3HA, 0		; Maximum

; 4278 : 													RandNum[0, 1, 2, 3, 4] = { 0 };

	mov	eax, 4
	shl	eax, 2
	mov	DWORD PTR ?RandNum@@3PAHA[eax], 0

; 4279 : 													BHMPlay = FALSE;

	mov	DWORD PTR ?BHMPlay@@3HA, 0		; BHMPlay

; 4280 : 													BHframe[0] = 0;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	DWORD PTR ?BHframe@@3PAHA[ecx], 0

; 4281 : 													BHframe[1] = 0;

	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR ?BHframe@@3PAHA[eax], 0

; 4282 : 													BHframe[2] = 0;

	mov	eax, 4
	shl	eax, 1
	mov	DWORD PTR ?BHframe@@3PAHA[eax], 0

; 4283 : 													Timer[24] = 2;

	mov	eax, 4
	imul	ecx, eax, 24
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 2

; 4284 : 													Timer[26] = 2;

	mov	eax, 4
	imul	ecx, eax, 26
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 2

; 4285 : 													Timer[27] = 2;

	mov	eax, 4
	imul	ecx, eax, 27
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 2
$LN973@DXW_MainLo:

; 4286 : 
; 4287 : 												}
; 4288 : 												//·ºÆ® È®ÀÎ¿ë
; 4289 : 												/*
; 4290 : 												::__Lock(g_pDDSBack);
; 4291 : 												__DrawRect16(PHIT.left, PHIT.top, PHIT.right, PHIT.bottom, wPixel);
; 4292 : 												__DrawRect16(HIT.left, HIT.top, HIT.right, HIT.bottom, wPixel);
; 4293 : 												__DrawRect16(Cast.left, Cast.top, Cast.right, Cast.bottom, wPixel);
; 4294 : 												__DrawRect16(BOSS.left, BOSS.top, BOSS.right, BOSS.bottom, wPixel);
; 4295 : 												__DrawRect16(Knock.left, Knock.top, Knock.right, Knock.bottom, wPixel);
; 4296 : 												for (i = 0; i < 5; i++)
; 4297 : 												{
; 4298 : 													__DrawRect16(BAHIT[i].left, BAHIT[i].top, BAHIT[i].right, BAHIT[i].bottom, wPixel);
; 4299 : 													__DrawRect16(Spike[i].left, Spike[i].top, Spike[i].right, Spike[i].bottom, wPixel);
; 4300 : 												}
; 4301 : 												::__Unlock(g_pDDSBack);
; 4302 : 												*/
; 4303 : 												if (Timer[7] > 0)

	mov	eax, 4
	imul	ecx, eax, 7
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jle	SHORT $LN975@DXW_MainLo

; 4304 : 												{
; 4305 : 													Timer[7]--;

	mov	eax, 4
	imul	ecx, eax, 7
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 7
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
$LN975@DXW_MainLo:

; 4306 : 												}
; 4307 : 												if (Timer[5] > 0)

	mov	eax, 4
	imul	ecx, eax, 5
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jle	SHORT $LN976@DXW_MainLo

; 4308 : 												{
; 4309 : 													Timer[5] -= 1;

	mov	eax, 4
	imul	ecx, eax, 5
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	sub	edx, 1
	mov	eax, 4
	imul	ecx, eax, 5
	mov	DWORD PTR ?Timer@@3PAHA[ecx], edx
	jmp	SHORT $LN978@DXW_MainLo
$LN976@DXW_MainLo:

; 4310 : 												}
; 4311 : 												else if (Timer[5] <= 0 && bossimmu == TRUE)

	mov	eax, 4
	imul	ecx, eax, 5
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 0
	jg	SHORT $LN978@DXW_MainLo
	cmp	DWORD PTR ?bossimmu@@3HA, 1		; bossimmu
	jne	SHORT $LN978@DXW_MainLo

; 4312 : 												{
; 4313 : 													bossimmu = FALSE;

	mov	DWORD PTR ?bossimmu@@3HA, 0		; bossimmu

; 4314 : 													Timer[5] = 0;

	mov	eax, 4
	imul	ecx, eax, 5
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 0
$LN978@DXW_MainLo:

; 4315 : 												}
; 4316 : 												::__PutSprite(g_pDDSHP, 130, 0);

	push	0
	push	130					; 00000082H
	mov	eax, DWORD PTR ?g_pDDSHP@@3PAUIDirectDrawSurface7@@A ; g_pDDSHP
	push	eax
	call	?__PutSprite@@YAXPAUIDirectDrawSurface7@@HH@Z ; __PutSprite
	add	esp, 12					; 0000000cH

; 4317 : 												if (P3HP > 1)

	cmp	DWORD PTR ?P3HP@@3HA, 1			; P3HP
	jle	SHORT $LN979@DXW_MainLo

; 4318 : 												{
; 4319 : 													::__Putbar(g_pDDSHPbar, 132, 2, P3MHP, P3HP, P3HPrate);

	push	ecx
	movss	xmm0, DWORD PTR ?P3HPrate@@3MA
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?P3HP@@3HA		; P3HP
	push	eax
	mov	ecx, DWORD PTR ?P3MHP@@3HA		; P3MHP
	push	ecx
	push	2
	push	132					; 00000084H
	mov	edx, DWORD PTR ?g_pDDSHPbar@@3PAUIDirectDrawSurface7@@A ; g_pDDSHPbar
	push	edx
	call	?__Putbar@@YAXPAUIDirectDrawSurface7@@HHHHM@Z ; __Putbar
	add	esp, 24					; 00000018H
$LN979@DXW_MainLo:

; 4320 : 												}
; 4321 : 												::__PutSprite(g_pDDSPHP, 400, 737);

	push	737					; 000002e1H
	push	400					; 00000190H
	mov	eax, DWORD PTR ?g_pDDSPHP@@3PAUIDirectDrawSurface7@@A ; g_pDDSPHP
	push	eax
	call	?__PutSprite@@YAXPAUIDirectDrawSurface7@@HH@Z ; __PutSprite
	add	esp, 12					; 0000000cH

; 4322 : 												if (PlayerHP > 1)

	cmp	DWORD PTR ?PlayerHP@@3HA, 1		; PlayerHP
	jle	SHORT $LN980@DXW_MainLo

; 4323 : 												{
; 4324 : 													::__Putbar(g_pDDSPHPbar, 425, 744, PlayerMHP, PlayerHP, PlayerHPrate);

	push	ecx
	movss	xmm0, DWORD PTR ?PlayerHPrate@@3MA
	movss	DWORD PTR [esp], xmm0
	mov	eax, DWORD PTR ?PlayerHP@@3HA		; PlayerHP
	push	eax
	mov	ecx, DWORD PTR ?PlayerMHP@@3HA		; PlayerMHP
	push	ecx
	push	744					; 000002e8H
	push	425					; 000001a9H
	mov	edx, DWORD PTR ?g_pDDSPHPbar@@3PAUIDirectDrawSurface7@@A ; g_pDDSPHPbar
	push	edx
	call	?__Putbar@@YAXPAUIDirectDrawSurface7@@HHHHM@Z ; __Putbar
	add	esp, 24					; 00000018H
$LN980@DXW_MainLo:

; 4325 : 												}
; 4326 : 												//////////////////////////////////////////////////////////
; 4327 : 												///// ±âÅ¸Á¤º¸ 
; 4328 : 												DXW_DisplayInfo();

	call	?DXW_DisplayInfo@@YAXXZ			; DXW_DisplayInfo

; 4329 : 												break;

	jmp	$LN2@DXW_MainLo
$LN981@DXW_MainLo:

; 4330 : 												//////////////////////////////////////////////////////////
; 4331 : 												//////////////////////////////////////////////////////////
; 4332 : 												//////////////////////////////////////////////////////////
; 4333 : 												//////////////////////////////////////////////////////////
; 4334 : 												//////////////////////////////////////////////////////////
; 4335 : 												//////////////////////////////////////////////////////////
; 4336 : 												//////////////////////////////////////////////////////////
; 4337 : 												//////////////////////////////////////////////////////////
; 4338 : 												//////////////////////////////////////////////////////////
; 4339 : 												//////////////////////////////////////////////////////////
; 4340 : 												//////////////////////////////////////////////////////////
; 4341 : 												//////////////////////////////////////////////////////////
; 4342 : 												case 4:
; 4343 : 													if (P4Mus == FALSE)

	cmp	DWORD PTR ?P4Mus@@3HA, 0		; P4Mus
	jne	SHORT $LN982@DXW_MainLo

; 4344 : 													{
; 4345 : 														m_HHSound.Stop(g_pDS[2]);

	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[eax]
	push	ecx
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?Stop@CHHSound@@QAEXPAUIDirectSoundBuffer@@@Z ; CHHSound::Stop

; 4346 : 														P4Mus = TRUE;

	mov	DWORD PTR ?P4Mus@@3HA, 1		; P4Mus
$LN982@DXW_MainLo:

; 4347 : 													}
; 4348 : 													__PutImage(g_pDDSEnd, 0, 0);

	push	0
	push	0
	mov	eax, DWORD PTR ?g_pDDSEnd@@3PAUIDirectDrawSurface7@@A ; g_pDDSEnd
	push	eax
	call	?__PutImage@@YAXPAUIDirectDrawSurface7@@HH@Z ; __PutImage
	add	esp, 12					; 0000000cH

; 4349 : 													break;

	jmp	SHORT $LN2@DXW_MainLo
$LN983@DXW_MainLo:

; 4350 : 
; 4351 : 												case 5:
; 4352 : 													if (P5Mus == FALSE)

	cmp	DWORD PTR ?P5Mus@@3HA, 0		; P5Mus
	jne	SHORT $LN984@DXW_MainLo

; 4353 : 													{
; 4354 : 														m_HHSound.Stop(g_pDS[0]);

	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[ecx]
	push	edx
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?Stop@CHHSound@@QAEXPAUIDirectSoundBuffer@@@Z ; CHHSound::Stop

; 4355 : 														m_HHSound.Stop(g_pDS[1]);

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[eax]
	push	ecx
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?Stop@CHHSound@@QAEXPAUIDirectSoundBuffer@@@Z ; CHHSound::Stop

; 4356 : 														m_HHSound.Stop(g_pDS[2]);

	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR ?g_pDS@@3PAPAUIDirectSoundBuffer@@A[eax]
	push	ecx
	mov	ecx, OFFSET ?m_HHSound@@3VCHHSound@@A	; m_HHSound
	call	?Stop@CHHSound@@QAEXPAUIDirectSoundBuffer@@@Z ; CHHSound::Stop

; 4357 : 														P5Mus = TRUE;

	mov	DWORD PTR ?P5Mus@@3HA, 1		; P5Mus
$LN984@DXW_MainLo:

; 4358 : 													}
; 4359 : 													__PutImage(g_pDDSGameover, 0, 0);

	push	0
	push	0
	mov	eax, DWORD PTR ?g_pDDSGameover@@3PAUIDirectDrawSurface7@@A ; g_pDDSGameover
	push	eax
	call	?__PutImage@@YAXPAUIDirectDrawSurface7@@HH@Z ; __PutImage
	add	esp, 12					; 0000000cH
$LN2@DXW_MainLo:

; 4360 : 													break;
; 4361 : 
; 4362 : 	}
; 4363 : 	if (g_nPhaze > 0 && g_nPhaze < 4)

	cmp	DWORD PTR ?g_nPhaze@@3HA, 0		; g_nPhaze
	jle	SHORT $LN985@DXW_MainLo
	cmp	DWORD PTR ?g_nPhaze@@3HA, 4		; g_nPhaze
	jge	SHORT $LN985@DXW_MainLo

; 4364 : 	{
; 4365 : 		::__PutSprite(g_pDDSSkillBut, 250, 720);

	push	720					; 000002d0H
	push	250					; 000000faH
	mov	eax, DWORD PTR ?g_pDDSSkillBut@@3PAUIDirectDrawSurface7@@A ; g_pDDSSkillBut
	push	eax
	call	?__PutSprite@@YAXPAUIDirectDrawSurface7@@HH@Z ; __PutSprite
	add	esp, 12					; 0000000cH
$LN985@DXW_MainLo:

; 4366 : 	}
; 4367 : 	if (Timer[28] > 10 && g_nPhaze > 0 && g_nPhaze < 4)

	mov	eax, 4
	imul	ecx, eax, 28
	cmp	DWORD PTR ?Timer@@3PAHA[ecx], 10	; 0000000aH
	jle	SHORT $LN986@DXW_MainLo
	cmp	DWORD PTR ?g_nPhaze@@3HA, 0		; g_nPhaze
	jle	SHORT $LN986@DXW_MainLo
	cmp	DWORD PTR ?g_nPhaze@@3HA, 4		; g_nPhaze
	jge	SHORT $LN986@DXW_MainLo

; 4368 : 	{
; 4369 : 		__Putbar(g_pDDSSkillCool, 251, 721, MaxTime, Timer[28], Timerrate);

	push	ecx
	movss	xmm0, DWORD PTR ?Timerrate@@3MA
	movss	DWORD PTR [esp], xmm0
	mov	eax, 4
	imul	ecx, eax, 28
	mov	edx, DWORD PTR ?Timer@@3PAHA[ecx]
	push	edx
	mov	eax, DWORD PTR ?MaxTime@@3HA		; MaxTime
	push	eax
	push	721					; 000002d1H
	push	251					; 000000fbH
	mov	ecx, DWORD PTR ?g_pDDSSkillCool@@3PAUIDirectDrawSurface7@@A ; g_pDDSSkillCool
	push	ecx
	call	?__Putbar@@YAXPAUIDirectDrawSurface7@@HHHHM@Z ; __Putbar
	add	esp, 24					; 00000018H
$LN986@DXW_MainLo:

; 4370 : 	}
; 4371 : 	if (Skilluse == TRUE && g_nPhaze > 0 && g_nPhaze < 4)

	cmp	DWORD PTR ?Skilluse@@3HA, 1		; Skilluse
	jne	SHORT $LN987@DXW_MainLo
	cmp	DWORD PTR ?g_nPhaze@@3HA, 0		; g_nPhaze
	jle	SHORT $LN987@DXW_MainLo
	cmp	DWORD PTR ?g_nPhaze@@3HA, 4		; g_nPhaze
	jge	SHORT $LN987@DXW_MainLo

; 4372 : 	{
; 4373 : 		::__PutAnimeSprite(g_pDDSPlayerskill, 0, 0, 20, PSframe, 1024, 768, 0);

	push	0
	push	768					; 00000300H
	push	1024					; 00000400H
	mov	eax, DWORD PTR ?PSframe@@3HA		; PSframe
	push	eax
	push	20					; 00000014H
	push	0
	push	0
	mov	ecx, DWORD PTR ?g_pDDSPlayerskill@@3PAUIDirectDrawSurface7@@A ; g_pDDSPlayerskill
	push	ecx
	call	?__PutAnimeSprite@@YAXPAUIDirectDrawSurface7@@HHHHHHH@Z ; __PutAnimeSprite
	add	esp, 32					; 00000020H
$LN987@DXW_MainLo:

; 4374 : 	}
; 4375 : 	if (PlayerHP < 1 && g_nPhaze < 4)

	cmp	DWORD PTR ?PlayerHP@@3HA, 1		; PlayerHP
	jge	SHORT $LN988@DXW_MainLo
	cmp	DWORD PTR ?g_nPhaze@@3HA, 4		; g_nPhaze
	jge	SHORT $LN988@DXW_MainLo

; 4376 : 	{
; 4377 : 		g_nPhaze = 5;

	mov	DWORD PTR ?g_nPhaze@@3HA, 5		; g_nPhaze
$LN988@DXW_MainLo:

; 4378 : 	}
; 4379 : 		if (g_bFadeIn)

	cmp	DWORD PTR ?g_bFadeIn@@3HA, 0		; g_bFadeIn
	je	SHORT $LN990@DXW_MainLo

; 4380 : 		{
; 4381 : 			__FxFadeInOutEx(g_pDDSBack, g_pDDSBack, g_dwFadeRate);

	mov	eax, DWORD PTR ?g_dwFadeRate@@3KA	; g_dwFadeRate
	push	eax
	mov	ecx, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	push	edx
	call	?__FxFadeInOutEx@@YAXPAUIDirectDrawSurface7@@0K@Z ; __FxFadeInOutEx
	add	esp, 12					; 0000000cH

; 4382 : 			g_dwFadeRate += 2;

	mov	eax, DWORD PTR ?g_dwFadeRate@@3KA	; g_dwFadeRate
	add	eax, 2
	mov	DWORD PTR ?g_dwFadeRate@@3KA, eax	; g_dwFadeRate

; 4383 : 			if (g_dwFadeRate > 99) g_bFadeIn = FALSE;

	cmp	DWORD PTR ?g_dwFadeRate@@3KA, 99	; g_dwFadeRate, 00000063H
	jbe	SHORT $LN990@DXW_MainLo
	mov	DWORD PTR ?g_bFadeIn@@3HA, 0		; g_bFadeIn
$LN990@DXW_MainLo:

; 4384 : 		}
; 4385 : 
; 4386 : 		if (g_bFadeOut)

	cmp	DWORD PTR ?g_bFadeOut@@3HA, 0		; g_bFadeOut
	je	SHORT $LN992@DXW_MainLo

; 4387 : 		{
; 4388 : 			__FxFadeInOutEx(g_pDDSBack, g_pDDSBack, g_dwFadeRate);

	mov	eax, DWORD PTR ?g_dwFadeRate@@3KA	; g_dwFadeRate
	push	eax
	mov	ecx, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	push	edx
	call	?__FxFadeInOutEx@@YAXPAUIDirectDrawSurface7@@0K@Z ; __FxFadeInOutEx
	add	esp, 12					; 0000000cH

; 4389 : 			g_dwFadeRate -= 2;

	mov	eax, DWORD PTR ?g_dwFadeRate@@3KA	; g_dwFadeRate
	sub	eax, 2
	mov	DWORD PTR ?g_dwFadeRate@@3KA, eax	; g_dwFadeRate

; 4390 : 			if (g_dwFadeRate < 1) g_bFadeOut = FALSE;

	cmp	DWORD PTR ?g_dwFadeRate@@3KA, 1		; g_dwFadeRate
	jae	SHORT $LN992@DXW_MainLo
	mov	DWORD PTR ?g_bFadeOut@@3HA, 0		; g_bFadeOut
$LN992@DXW_MainLo:

; 4391 : 		}
; 4392 : 
; 4393 : 		if (g_bFadeLoop)

	cmp	DWORD PTR ?g_bFadeLoop@@3HA, 0		; g_bFadeLoop
	je	SHORT $LN997@DXW_MainLo

; 4394 : 		{
; 4395 : 			__FxFadeInOutEx(g_pDDSBack, g_pDDSBack, g_dwFadeRate);

	mov	eax, DWORD PTR ?g_dwFadeRate@@3KA	; g_dwFadeRate
	push	eax
	mov	ecx, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	push	ecx
	mov	edx, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	push	edx
	call	?__FxFadeInOutEx@@YAXPAUIDirectDrawSurface7@@0K@Z ; __FxFadeInOutEx
	add	esp, 12					; 0000000cH

; 4396 : 			if (g_bInc)

	cmp	DWORD PTR ?g_bInc@@3HA, 0		; g_bInc
	je	SHORT $LN994@DXW_MainLo

; 4397 : 				g_dwFadeRate += 2;

	mov	eax, DWORD PTR ?g_dwFadeRate@@3KA	; g_dwFadeRate
	add	eax, 2
	mov	DWORD PTR ?g_dwFadeRate@@3KA, eax	; g_dwFadeRate

; 4398 : 			else

	jmp	SHORT $LN995@DXW_MainLo
$LN994@DXW_MainLo:

; 4399 : 				g_dwFadeRate -= 2;

	mov	eax, DWORD PTR ?g_dwFadeRate@@3KA	; g_dwFadeRate
	sub	eax, 2
	mov	DWORD PTR ?g_dwFadeRate@@3KA, eax	; g_dwFadeRate
$LN995@DXW_MainLo:

; 4400 : 
; 4401 : 			if (g_dwFadeRate <= 0) { g_bInc = TRUE;  g_dwFadeRate = 0; }

	cmp	DWORD PTR ?g_dwFadeRate@@3KA, 0		; g_dwFadeRate
	ja	SHORT $LN996@DXW_MainLo
	mov	DWORD PTR ?g_bInc@@3HA, 1		; g_bInc
	mov	DWORD PTR ?g_dwFadeRate@@3KA, 0		; g_dwFadeRate
$LN996@DXW_MainLo:

; 4402 : 			if (g_dwFadeRate > 100) { g_bInc = FALSE; g_dwFadeRate = 100; }

	cmp	DWORD PTR ?g_dwFadeRate@@3KA, 100	; g_dwFadeRate, 00000064H
	jbe	SHORT $LN997@DXW_MainLo
	mov	DWORD PTR ?g_bInc@@3HA, 0		; g_bInc
	mov	DWORD PTR ?g_dwFadeRate@@3KA, 100	; g_dwFadeRate, 00000064H
$LN997@DXW_MainLo:

; 4403 : 		}
; 4404 : 
; 4405 : 		if (g_bGrayScale) __FxGrayScale(g_pDDSBack, g_pDDSBack);

	cmp	DWORD PTR ?g_bGrayScale@@3HA, 0		; g_bGrayScale
	je	SHORT $LN998@DXW_MainLo
	mov	eax, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	push	eax
	mov	ecx, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	push	ecx
	call	?__FxGrayScale@@YAXPAUIDirectDrawSurface7@@0@Z ; __FxGrayScale
	add	esp, 8
$LN998@DXW_MainLo:

; 4406 : 
; 4407 : 		if (g_bColorize) __FxColorize(g_pDDSBack, g_pDDSBack, g_dwR, g_dwG, g_dwB);

	cmp	DWORD PTR ?g_bColorize@@3HA, 0		; g_bColorize
	je	SHORT $LN999@DXW_MainLo
	mov	eax, DWORD PTR ?g_dwB@@3KA		; g_dwB
	push	eax
	mov	ecx, DWORD PTR ?g_dwG@@3KA		; g_dwG
	push	ecx
	mov	edx, DWORD PTR ?g_dwR@@3KA		; g_dwR
	push	edx
	mov	eax, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	push	eax
	mov	ecx, DWORD PTR ?g_pDDSBack@@3PAUIDirectDrawSurface7@@A ; g_pDDSBack
	push	ecx
	call	?__FxColorize@@YAXPAUIDirectDrawSurface7@@0KKK@Z ; __FxColorize
	add	esp, 20					; 00000014H
$LN999@DXW_MainLo:

; 4408 : 	///// ÇÃ¸³ÇÎ ¶Ç´Â ¹öÆÛ¸µ
; 4409 : #ifdef _DEBUG
; 4410 : 	hRet = __DDSWBlt();

	call	?__DDSWBlt@@YAJXZ			; __DDSWBlt
	mov	DWORD PTR _hRet$[ebp], eax

; 4411 : #elif _NOVSYNC
; 4412 : 	hRet = g_pDDSPrimary->Flip(NULL, DDFLIP_NOVSYNC);
; 4413 : #else
; 4414 : 	hRet = g_pDDSPrimary->Flip(NULL, DDFLIP_WAIT);
; 4415 : #endif
; 4416 : 
; 4417 : 	///// Ç¥¸éº¹±¸	
; 4418 : 	if (hRet == DDERR_SURFACELOST) g_pDD->RestoreAllSurfaces();

	cmp	DWORD PTR _hRet$[ebp], -2005532222	; 887601c2H
	jne	SHORT $LN1000@DXW_MainLo
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	edx
	mov	eax, DWORD PTR [ecx+100]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1000@DXW_MainLo:

; 4419 : 	if (hRet != DD_OK) { DDERRCHK(hRet); return; }

	cmp	DWORD PTR _hRet$[ebp], 0
	je	SHORT $LN1001@DXW_MainLo
	mov	eax, DWORD PTR ?__LINE__Var@?0??DXW_MainLoop@@YAXXZ@4JA
	add	eax, 3783				; 00000ec7H
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	mov	ecx, DWORD PTR _hRet$[ebp]
	push	ecx
	call	?___DDError@@YAHJPADH@Z			; ___DDError
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN1@DXW_MainLo
$LN1001@DXW_MainLo:

; 4420 : 
; 4421 : 	///// ÇÁ·¹ÀÓ Á¶Á¤
; 4422 : 	gFpsMng.FrameTuningEx();

	mov	ecx, OFFSET ?gFpsMng@@3VCFpsMng@@A	; gFpsMng
	call	?FrameTuningEx@CFpsMng@@QAEXXZ		; CFpsMng::FrameTuningEx
$LN1@DXW_MainLo:

; 4423 : 
; 4424 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN1009@DXW_MainLo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 2760				; 00000ac8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN1009@DXW_MainLo:
	DD	1
	DD	$LN1008@DXW_MainLo
$LN1008@DXW_MainLo:
	DD	-36					; ffffffdcH
	DD	16					; 00000010H
	DD	$LN1007@DXW_MainLo
$LN1007@DXW_MainLo:
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	66					; 00000042H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	0
	npad	2
$LN1028@DXW_MainLo:
	DD	$LN160@DXW_MainLo
	DD	$LN162@DXW_MainLo
	DD	$LN422@DXW_MainLo
	DD	$LN677@DXW_MainLo
	DD	$LN981@DXW_MainLo
	DD	$LN983@DXW_MainLo
?DXW_MainLoop@@YAXXZ ENDP				; DXW_MainLoop
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT ?DXW_Init@@YAHXZ
_TEXT	SEGMENT
_bRval$ = -8						; size = 4
?DXW_Init@@YAHXZ PROC					; DXW_Init, COMDAT

; 498  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 499  :     ///// DX °´Ã¼ »ý¼º ¹× ÃÊ±âÈ­
; 500  : 	BOOL bRval;
; 501  : 
; 502  : 	///// 
; 503  : #ifdef _DEBUG
; 504  : 	bRval = __DDInitWin(TRUE);

	push	1
	call	?__DDInitWin@@YAHH@Z			; __DDInitWin
	add	esp, 4
	mov	DWORD PTR _bRval$[ebp], eax

; 505  : 	if (!bRval) 

	cmp	DWORD PTR _bRval$[ebp], 0
	jne	SHORT $LN2@DXW_Init

; 506  : 	{		
; 507  : 		bRval = __DDInit();

	call	?__DDInit@@YAHXZ			; __DDInit
	mov	DWORD PTR _bRval$[ebp], eax

; 508  : 		if (!bRval) return FALSE;

	cmp	DWORD PTR _bRval$[ebp], 0
	jne	SHORT $LN2@DXW_Init
	xor	eax, eax
	jmp	$LN1@DXW_Init
$LN2@DXW_Init:

; 509  : 	}
; 510  : 	//bRval = __DDCSetClipper(g_pDDSBack, 0, 0, HRES, VRES);
; 511  : 	bRval = __DDCSetClipperWin();

	call	?__DDCSetClipperWin@@YAHXZ		; __DDCSetClipperWin
	mov	DWORD PTR _bRval$[ebp], eax

; 512  : 	if (!bRval) return FALSE;

	cmp	DWORD PTR _bRval$[ebp], 0
	jne	SHORT $LN4@DXW_Init
	xor	eax, eax
	jmp	$LN1@DXW_Init
$LN4@DXW_Init:

; 513  : #else
; 514  : 	bRval = __DDInit();
; 515  : 	if (!bRval) return FALSE;
; 516  : 	bRval = __DDCSetClipper(g_pDDSBack, 0, 0, HRES, VRES);
; 517  : 	if (!bRval) return FALSE;
; 518  : #endif
; 519  : 	
; 520  : 	///// ÇÈ¼¿Æ÷¸Ë Ã¼Å©
; 521  : 	g_dwPixelFormat = ::__CheckRGBBit(g_pDDSPrimary);

	mov	eax, DWORD PTR ?g_pDDSPrimary@@3PAUIDirectDrawSurface7@@A ; g_pDDSPrimary
	push	eax
	call	?__CheckRGBBit@@YAKPAUIDirectDrawSurface7@@@Z ; __CheckRGBBit
	add	esp, 4
	mov	DWORD PTR ?g_dwPixelFormat@@3KA, eax	; g_dwPixelFormat

; 522  : 
; 523  : 	///// µ¥ÀÌÅÍ ºÒ·¯¿À±â
; 524  : 	/*switch (g_dwPixelFormat)
; 525  : 	{
; 526  : 	case RGB565 : g_pDDSOne = __DDLoadBin("man16.bin", TRUE); break;				  
; 527  : 	case RGB888 : g_pDDSOne = __DDLoadBin("man32.bin", TRUE); break;
; 528  : 	default : return FALSE;
; 529  : 	}*/
; 530  : 	g_pDDSOne = ::DDLoadBitmap(g_pDD, "image/Hero.bmp", 774, 81, TRUE);

	push	1
	push	81					; 00000051H
	push	774					; 00000306H
	push	OFFSET ??_C@_0P@MIMHEJLI@image?1Hero?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSOne

; 531  : 	::DDSetColorKey(g_pDDSOne, RGB(181, 230, 29));

	push	1959605					; 001de6b5H
	mov	eax, DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A ; g_pDDSOne
	push	eax
	call	_DDSetColorKey
	add	esp, 8

; 532  : 	g_pDDSDHole = ::DDLoadBitmap(g_pDD, "image/Hole.bmp", 87, 36, TRUE);

	push	1
	push	36					; 00000024H
	push	87					; 00000057H
	push	OFFSET ??_C@_0P@MPHNJBIF@image?1Hole?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_pDDSDHole@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSDHole

; 533  : 	::DDSetColorKey(g_pDDSDHole, RGB(0, 255, 0));

	push	65280					; 0000ff00H
	mov	eax, DWORD PTR ?g_pDDSDHole@@3PAUIDirectDrawSurface7@@A ; g_pDDSDHole
	push	eax
	call	_DDSetColorKey
	add	esp, 8

; 534  : 	g_pDDSSkillBut = ::DDLoadBitmap(g_pDD, "image/SkillButton.bmp", 64, 34, TRUE);

	push	1
	push	34					; 00000022H
	push	64					; 00000040H
	push	OFFSET ??_C@_0BG@MCGLLKNE@image?1SkillButton?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_pDDSSkillBut@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSSkillBut

; 535  : 	::DDSetColorKey(g_pDDSSkillBut, RGB(0, 255, 0));

	push	65280					; 0000ff00H
	mov	eax, DWORD PTR ?g_pDDSSkillBut@@3PAUIDirectDrawSurface7@@A ; g_pDDSSkillBut
	push	eax
	call	_DDSetColorKey
	add	esp, 8

; 536  : 	g_pDDSSkillCool = ::DDLoadBitmap(g_pDD, "image/SkillCool.bmp", 62, 32, TRUE);

	push	1
	push	32					; 00000020H
	push	62					; 0000003eH
	push	OFFSET ??_C@_0BE@EFMCEHEN@image?1SkillCool?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_pDDSSkillCool@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSSkillCool

; 537  : 	::DDSetColorKey(g_pDDSSkillCool, RGB(0, 255, 0));

	push	65280					; 0000ff00H
	mov	eax, DWORD PTR ?g_pDDSSkillCool@@3PAUIDirectDrawSurface7@@A ; g_pDDSSkillCool
	push	eax
	call	_DDSetColorKey
	add	esp, 8

; 538  : 	g_pDDSCast = ::DDLoadBitmap(g_pDD, "image/Cast3.bmp", 3840,192, TRUE); //¾Ö´Ï¸ÞÀÌ¼Ç 20°³.

	push	1
	push	192					; 000000c0H
	push	3840					; 00000f00H
	push	OFFSET ??_C@_0BA@IIOEGDCI@image?1Cast3?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_pDDSCast@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSCast

; 539  : 	::DDSetColorKey(g_pDDSCast, RGB(0, 255, 0));

	push	65280					; 0000ff00H
	mov	eax, DWORD PTR ?g_pDDSCast@@3PAUIDirectDrawSurface7@@A ; g_pDDSCast
	push	eax
	call	_DDSetColorKey
	add	esp, 8

; 540  : 	g_pDDSCast2 = ::DDLoadBitmap(g_pDD, "image/Cast4.bmp", 3840, 192, TRUE); //¾Ö´Ï¸ÞÀÌ¼Ç 20°³.

	push	1
	push	192					; 000000c0H
	push	3840					; 00000f00H
	push	OFFSET ??_C@_0BA@JFOBFDJA@image?1Cast4?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_pDDSCast2@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSCast2

; 541  : 	::DDSetColorKey(g_pDDSCast2, RGB(255, 0, 255));

	push	16711935				; 00ff00ffH
	mov	eax, DWORD PTR ?g_pDDSCast2@@3PAUIDirectDrawSurface7@@A ; g_pDDSCast2
	push	eax
	call	_DDSetColorKey
	add	esp, 8

; 542  : 	g_pDDSCastAtt = ::DDLoadBitmap(g_pDD, "image/CastAttack.bmp", 3440, 525, TRUE); //¾Ö´Ï¸ÞÀÌ¼Ç 10°³.

	push	1
	push	525					; 0000020dH
	push	3440					; 00000d70H
	push	OFFSET ??_C@_0BF@LBHFHDLC@image?1CastAttack?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_pDDSCastAtt@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSCastAtt

; 543  : 	::DDSetColorKey(g_pDDSCastAtt, RGB(0,255,0));

	push	65280					; 0000ff00H
	mov	eax, DWORD PTR ?g_pDDSCastAtt@@3PAUIDirectDrawSurface7@@A ; g_pDDSCastAtt
	push	eax
	call	_DDSetColorKey
	add	esp, 8

; 544  : 	g_pDDSBossAtt = ::DDLoadBitmap(g_pDD, "image/BossAttackMotionL.bmp", 7116, 321, TRUE); //¾Ö´Ï¸ÞÀÌ¼Ç 12°³.

	push	1
	push	321					; 00000141H
	push	7116					; 00001bccH
	push	OFFSET ??_C@_0BM@EFMPOJLK@image?1BossAttackMotionL?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_pDDSBossAtt@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSBossAtt

; 545  : 	::DDSetColorKey(g_pDDSBossAtt, RGB(0, 255, 0));

	push	65280					; 0000ff00H
	mov	eax, DWORD PTR ?g_pDDSBossAtt@@3PAUIDirectDrawSurface7@@A ; g_pDDSBossAtt
	push	eax
	call	_DDSetColorKey
	add	esp, 8

; 546  : 	g_pDDSBossAttR = ::DDLoadBitmap(g_pDD, "image/BossAttackMotionR.bmp", 7116, 321, TRUE); //¾Ö´Ï¸ÞÀÌ¼Ç 12°³.

	push	1
	push	321					; 00000141H
	push	7116					; 00001bccH
	push	OFFSET ??_C@_0BM@HMBDIKFB@image?1BossAttackMotionR?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_pDDSBossAttR@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSBossAttR

; 547  : 	::DDSetColorKey(g_pDDSBossAttR, RGB(0, 255, 0));

	push	65280					; 0000ff00H
	mov	eax, DWORD PTR ?g_pDDSBossAttR@@3PAUIDirectDrawSurface7@@A ; g_pDDSBossAttR
	push	eax
	call	_DDSetColorKey
	add	esp, 8

; 548  : 	g_pDDSDragAttR = ::DDLoadBitmap(g_pDD, "image/BossAttack2R.bmp", 12240, 315, TRUE); //¾Ö´Ï¸ÞÀÌ¼Ç 17°³.

	push	1
	push	315					; 0000013bH
	push	12240					; 00002fd0H
	push	OFFSET ??_C@_0BH@PDGBKHPO@image?1BossAttack2R?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_pDDSDragAttR@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSDragAttR

; 549  : 	::DDSetColorKey(g_pDDSDragAttR, RGB(0, 255, 0));

	push	65280					; 0000ff00H
	mov	eax, DWORD PTR ?g_pDDSDragAttR@@3PAUIDirectDrawSurface7@@A ; g_pDDSDragAttR
	push	eax
	call	_DDSetColorKey
	add	esp, 8

; 550  : 	g_pDDSDragAtt = ::DDLoadBitmap(g_pDD, "image/BossAttack2L.bmp", 12240, 315, TRUE); //¾Ö´Ï¸ÞÀÌ¼Ç 17°³.

	push	1
	push	315					; 0000013bH
	push	12240					; 00002fd0H
	push	OFFSET ??_C@_0BH@MKLNMEBF@image?1BossAttack2L?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_pDDSDragAtt@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSDragAtt

; 551  : 	::DDSetColorKey(g_pDDSDragAtt, RGB(0, 255, 0));

	push	65280					; 0000ff00H
	mov	eax, DWORD PTR ?g_pDDSDragAtt@@3PAUIDirectDrawSurface7@@A ; g_pDDSDragAtt
	push	eax
	call	_DDSetColorKey
	add	esp, 8

; 552  : 	g_pDDSPlayerskill = ::DDLoadBitmap(g_pDD, "image/Worldreaver.bmp", 20480, 768, TRUE); //¾Ö´Ï¸ÞÀÌ¼Ç 20°³.

	push	1
	push	768					; 00000300H
	push	20480					; 00005000H
	push	OFFSET ??_C@_0BG@MIHCLFFG@image?1Worldreaver?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_pDDSPlayerskill@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSPlayerskill

; 553  : 	::DDSetColorKey(g_pDDSPlayerskill, RGB(0, 255, 0));

	push	65280					; 0000ff00H
	mov	eax, DWORD PTR ?g_pDDSPlayerskill@@3PAUIDirectDrawSurface7@@A ; g_pDDSPlayerskill
	push	eax
	call	_DDSetColorKey
	add	esp, 8

; 554  : 	g_pDDSBoss3Att = ::DDLoadBitmap(g_pDD, "image/Boss3AttackL.bmp", 16100, 384, TRUE); //¾Ö´Ï¸ÞÀÌ¼Ç 24°³.

	push	1
	push	384					; 00000180H
	push	16100					; 00003ee4H
	push	OFFSET ??_C@_0BH@BGEGJJDF@image?1Boss3AttackL?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_pDDSBoss3Att@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSBoss3Att

; 555  : 	::DDSetColorKey(g_pDDSBoss3Att, RGB(0, 255, 0));

	push	65280					; 0000ff00H
	mov	eax, DWORD PTR ?g_pDDSBoss3Att@@3PAUIDirectDrawSurface7@@A ; g_pDDSBoss3Att
	push	eax
	call	_DDSetColorKey
	add	esp, 8

; 556  : 	g_pDDSBoss3AttR = ::DDLoadBitmap(g_pDD, "image/Boss3AttackR.bmp", 16100, 384, TRUE); //¾Ö´Ï¸ÞÀÌ¼Ç 24°³.

	push	1
	push	384					; 00000180H
	push	16100					; 00003ee4H
	push	OFFSET ??_C@_0BH@CPJKPKNO@image?1Boss3AttackR?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_pDDSBoss3AttR@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSBoss3AttR

; 557  : 	::DDSetColorKey(g_pDDSBoss3AttR, RGB(0, 255, 0));

	push	65280					; 0000ff00H
	mov	eax, DWORD PTR ?g_pDDSBoss3AttR@@3PAUIDirectDrawSurface7@@A ; g_pDDSBoss3AttR
	push	eax
	call	_DDSetColorKey
	add	esp, 8

; 558  : 	g_pDDSBoss3Att3 = ::DDLoadBitmap(g_pDD, "image/Boss3Attack33L.bmp", 35247, 798, TRUE); //¾Ö´Ï¸ÞÀÌ¼Ç 31°³.

	push	1
	push	798					; 0000031eH
	push	35247					; 000089afH
	push	OFFSET ??_C@_0BJ@OPEOHJGM@image?1Boss3Attack33L?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_pDDSBoss3Att3@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSBoss3Att3

; 559  : 	::DDSetColorKey(g_pDDSBoss3Att3, RGB(0, 255, 0));

	push	65280					; 0000ff00H
	mov	eax, DWORD PTR ?g_pDDSBoss3Att3@@3PAUIDirectDrawSurface7@@A ; g_pDDSBoss3Att3
	push	eax
	call	_DDSetColorKey
	add	esp, 8

; 560  : 	g_pDDSBoss3AttR3 = ::DDLoadBitmap(g_pDD, "image/Boss3Attack33R.bmp", 35247, 798, TRUE); //¾Ö´Ï¸ÞÀÌ¼Ç 31°³.

	push	1
	push	798					; 0000031eH
	push	35247					; 000089afH
	push	OFFSET ??_C@_0BJ@NGJCBKIH@image?1Boss3Attack33R?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_pDDSBoss3AttR3@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSBoss3AttR3

; 561  : 	::DDSetColorKey(g_pDDSBoss3AttR3, RGB(0, 255, 0));

	push	65280					; 0000ff00H
	mov	eax, DWORD PTR ?g_pDDSBoss3AttR3@@3PAUIDirectDrawSurface7@@A ; g_pDDSBoss3AttR3
	push	eax
	call	_DDSetColorKey
	add	esp, 8

; 562  : 	g_pDDSGroundAtt= ::DDLoadBitmap(g_pDD, "image/GroundAttack.bmp", 6330, 629, TRUE); //¾Ö´Ï¸ÞÀÌ¼Ç 15°³.

	push	1
	push	629					; 00000275H
	push	6330					; 000018baH
	push	OFFSET ??_C@_0BH@OOONBDHA@image?1GroundAttack?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_pDDSGroundAtt@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSGroundAtt

; 563  : 	::DDSetColorKey(g_pDDSGroundAtt, RGB(0, 0, 255));

	push	16711680				; 00ff0000H
	mov	eax, DWORD PTR ?g_pDDSGroundAtt@@3PAUIDirectDrawSurface7@@A ; g_pDDSGroundAtt
	push	eax
	call	_DDSetColorKey
	add	esp, 8

; 564  : 	g_pDDSOneR = ::DDLoadBitmap(g_pDD, "image/HeroRR.bmp", 774, 81, TRUE);

	push	1
	push	81					; 00000051H
	push	774					; 00000306H
	push	OFFSET ??_C@_0BB@IGNNDELJ@image?1HeroRR?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSOneR

; 565  : 	::DDSetColorKey(g_pDDSOneR, RGB(181, 230, 29));

	push	1959605					; 001de6b5H
	mov	eax, DWORD PTR ?g_pDDSOneR@@3PAUIDirectDrawSurface7@@A ; g_pDDSOneR
	push	eax
	call	_DDSetColorKey
	add	esp, 8

; 566  : 	g_BossAtt = ::DDLoadBitmap(g_pDD, "image/BossAtt2.bmp", 12000, 656, TRUE);

	push	1
	push	656					; 00000290H
	push	12000					; 00002ee0H
	push	OFFSET ??_C@_0BD@JDMLGABL@image?1BossAtt2?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_BossAtt@@3PAUIDirectDrawSurface7@@A, eax ; g_BossAtt

; 567  : 	::DDSetColorKey(g_BossAtt, RGB(255, 255, 255));

	push	16777215				; 00ffffffH
	mov	eax, DWORD PTR ?g_BossAtt@@3PAUIDirectDrawSurface7@@A ; g_BossAtt
	push	eax
	call	_DDSetColorKey
	add	esp, 8

; 568  : 	g_BossAtt2 = ::DDLoadBitmap(g_pDD, "image/BossAtt3.bmp", 12000, 656, TRUE);

	push	1
	push	656					; 00000290H
	push	12000					; 00002ee0H
	push	OFFSET ??_C@_0BD@FIJHLDLO@image?1BossAtt3?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_BossAtt2@@3PAUIDirectDrawSurface7@@A, eax ; g_BossAtt2

; 569  : 	::DDSetColorKey(g_BossAtt2, RGB(0, 0, 0));

	push	0
	mov	eax, DWORD PTR ?g_BossAtt2@@3PAUIDirectDrawSurface7@@A ; g_BossAtt2
	push	eax
	call	_DDSetColorKey
	add	esp, 8

; 570  : 	g_pDDSTwo = ::DDLoadBitmap(g_pDD, "image/BossStand.bmp", 1392, 148, TRUE);

	push	1
	push	148					; 00000094H
	push	1392					; 00000570H
	push	OFFSET ??_C@_0BE@CJOBCKBE@image?1BossStand?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_pDDSTwo@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSTwo

; 571  : 	::DDSetColorKey(g_pDDSTwo, RGB(34, 177, 76));

	push	5026082					; 004cb122H
	mov	eax, DWORD PTR ?g_pDDSTwo@@3PAUIDirectDrawSurface7@@A ; g_pDDSTwo
	push	eax
	call	_DDSetColorKey
	add	esp, 8

; 572  : 	g_pDDSTwoR = ::DDLoadBitmap(g_pDD, "image/BossStandR.bmp", 1392, 148, TRUE);

	push	1
	push	148					; 00000094H
	push	1392					; 00000570H
	push	OFFSET ??_C@_0BF@JILCBECG@image?1BossStandR?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_pDDSTwoR@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSTwoR

; 573  : 	::DDSetColorKey(g_pDDSTwoR, RGB(34, 177, 76));

	push	5026082					; 004cb122H
	mov	eax, DWORD PTR ?g_pDDSTwoR@@3PAUIDirectDrawSurface7@@A ; g_pDDSTwoR
	push	eax
	call	_DDSetColorKey
	add	esp, 8

; 574  : 	g_pDDSHP = ::DDLoadBitmap(g_pDD, "image/BossHP.bmp", 762, 16, TRUE);

	push	1
	push	16					; 00000010H
	push	762					; 000002faH
	push	OFFSET ??_C@_0BB@MBFJKOFI@image?1BossHP?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_pDDSHP@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSHP

; 575  : 	::DDSetColorKey(g_pDDSHP, RGB(34, 177, 76));

	push	5026082					; 004cb122H
	mov	eax, DWORD PTR ?g_pDDSHP@@3PAUIDirectDrawSurface7@@A ; g_pDDSHP
	push	eax
	call	_DDSetColorKey
	add	esp, 8

; 576  : 	g_pDDSCHARGE = ::DDLoadBitmap(g_pDD, "image/Charge.bmp", 4088, 263, TRUE);

	push	1
	push	263					; 00000107H
	push	4088					; 00000ff8H
	push	OFFSET ??_C@_0BB@MBNFNPOD@image?1Charge?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_pDDSCHARGE@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSCHARGE

; 577  : 	::DDSetColorKey(g_pDDSCHARGE, RGB(181, 230, 29));

	push	1959605					; 001de6b5H
	mov	eax, DWORD PTR ?g_pDDSCHARGE@@3PAUIDirectDrawSurface7@@A ; g_pDDSCHARGE
	push	eax
	call	_DDSetColorKey
	add	esp, 8

; 578  : 	g_pDDSCHARGER = ::DDLoadBitmap(g_pDD, "image/ChargeR.bmp", 4088, 263, TRUE);

	push	1
	push	263					; 00000107H
	push	4088					; 00000ff8H
	push	OFFSET ??_C@_0BC@LLIDEHGM@image?1ChargeR?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_pDDSCHARGER@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSCHARGER

; 579  : 	::DDSetColorKey(g_pDDSCHARGER, RGB(181, 230, 29));

	push	1959605					; 001de6b5H
	mov	eax, DWORD PTR ?g_pDDSCHARGER@@3PAUIDirectDrawSurface7@@A ; g_pDDSCHARGER
	push	eax
	call	_DDSetColorKey
	add	esp, 8

; 580  : 	g_pDDSHPbar = ::DDLoadBitmap(g_pDD, "image/BossHPbar.bmp", 758, 12, TRUE);

	push	1
	push	12					; 0000000cH
	push	758					; 000002f6H
	push	OFFSET ??_C@_0BE@IEPKBFCI@image?1BossHPbar?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_pDDSHPbar@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSHPbar

; 581  : 	::DDSetColorKey(g_pDDSHPbar, RGB(34, 177, 76));

	push	5026082					; 004cb122H
	mov	eax, DWORD PTR ?g_pDDSHPbar@@3PAUIDirectDrawSurface7@@A ; g_pDDSHPbar
	push	eax
	call	_DDSetColorKey
	add	esp, 8

; 582  : 	g_pDDSPHP = ::DDLoadBitmap(g_pDD, "image/PlayerHP.bmp", 202, 29, TRUE);

	push	1
	push	29					; 0000001dH
	push	202					; 000000caH
	push	OFFSET ??_C@_0BD@OCDLPHOG@image?1PlayerHP?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_pDDSPHP@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSPHP

; 583  : 	::DDSetColorKey(g_pDDSPHP, RGB(34, 177, 76));

	push	5026082					; 004cb122H
	mov	eax, DWORD PTR ?g_pDDSPHP@@3PAUIDirectDrawSurface7@@A ; g_pDDSPHP
	push	eax
	call	_DDSetColorKey
	add	esp, 8

; 584  : 	g_pDDSPHPbar = ::DDLoadBitmap(g_pDD, "image/PlayerHPbar.bmp", 169, 11, TRUE);

	push	1
	push	11					; 0000000bH
	push	169					; 000000a9H
	push	OFFSET ??_C@_0BG@IDPPCAHI@image?1PlayerHPbar?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_pDDSPHPbar@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSPHPbar

; 585  : 	::DDSetColorKey(g_pDDSPHPbar, RGB(34, 177, 76));

	push	5026082					; 004cb122H
	mov	eax, DWORD PTR ?g_pDDSPHPbar@@3PAUIDirectDrawSurface7@@A ; g_pDDSPHPbar
	push	eax
	call	_DDSetColorKey
	add	esp, 8

; 586  : 	g_pDDSSkill = ::DDLoadBitmap(g_pDD, "image/RagingBlow.bmp", 3913, 218, TRUE);

	push	1
	push	218					; 000000daH
	push	3913					; 00000f49H
	push	OFFSET ??_C@_0BF@GICFCKM@image?1RagingBlow?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_pDDSSkill@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSSkill

; 587  : 	::DDSetColorKey(g_pDDSSkill, RGB(34, 177, 76));

	push	5026082					; 004cb122H
	mov	eax, DWORD PTR ?g_pDDSSkill@@3PAUIDirectDrawSurface7@@A ; g_pDDSSkill
	push	eax
	call	_DDSetColorKey
	add	esp, 8

; 588  : 	g_pDDSSkillR = ::DDLoadBitmap(g_pDD, "image/RagingBlowR.bmp", 3913, 218, TRUE);

	push	1
	push	218					; 000000daH
	push	3913					; 00000f49H
	push	OFFSET ??_C@_0BG@FNCHEMOA@image?1RagingBlowR?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_pDDSSkillR@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSSkillR

; 589  : 	::DDSetColorKey(g_pDDSSkillR, RGB(34, 177, 76));

	push	5026082					; 004cb122H
	mov	eax, DWORD PTR ?g_pDDSSkillR@@3PAUIDirectDrawSurface7@@A ; g_pDDSSkillR
	push	eax
	call	_DDSetColorKey
	add	esp, 8

; 590  : 	g_pDDSP3standL = ::DDLoadBitmap(g_pDD, "image/Boss3StandL.bmp", 3888, 314, TRUE);

	push	1
	push	314					; 0000013aH
	push	3888					; 00000f30H
	push	OFFSET ??_C@_0BG@KKLAIKPC@image?1Boss3StandL?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_pDDSP3standL@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSP3standL

; 591  : 	::DDSetColorKey(g_pDDSP3standL, RGB(0, 255, 0));

	push	65280					; 0000ff00H
	mov	eax, DWORD PTR ?g_pDDSP3standL@@3PAUIDirectDrawSurface7@@A ; g_pDDSP3standL
	push	eax
	call	_DDSetColorKey
	add	esp, 8

; 592  : 	g_pDDSP3standR = ::DDLoadBitmap(g_pDD, "image/Boss3StandR.bmp", 3888, 314, TRUE);

	push	1
	push	314					; 0000013aH
	push	3888					; 00000f30H
	push	OFFSET ??_C@_0BG@JDGMOJBJ@image?1Boss3StandR?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_pDDSP3standR@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSP3standR

; 593  : 	::DDSetColorKey(g_pDDSP3standR, RGB(0, 255, 0));

	push	65280					; 0000ff00H
	mov	eax, DWORD PTR ?g_pDDSP3standR@@3PAUIDirectDrawSurface7@@A ; g_pDDSP3standR
	push	eax
	call	_DDSetColorKey
	add	esp, 8

; 594  : 	g_pDDSDBossHit = ::DDLoadBitmap(g_pDD, "image/BossHit.bmp", 1080, 226, TRUE);

	push	1
	push	226					; 000000e2H
	push	1080					; 00000438H
	push	OFFSET ??_C@_0BC@LDOKHLD@image?1BossHit?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_pDDSDBossHit@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSDBossHit

; 595  : 	::DDSetColorKey(g_pDDSDBossHit, RGB(0, 255, 0));

	push	65280					; 0000ff00H
	mov	eax, DWORD PTR ?g_pDDSDBossHit@@3PAUIDirectDrawSurface7@@A ; g_pDDSDBossHit
	push	eax
	call	_DDSetColorKey
	add	esp, 8

; 596  : 	g_pDDSDPlayerHit = ::DDLoadBitmap(g_pDD, "image/PlayerHit.bmp", 1080, 226, TRUE);

	push	1
	push	226					; 000000e2H
	push	1080					; 00000438H
	push	OFFSET ??_C@_0BE@CHMEFLGB@image?1PlayerHit?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_pDDSDPlayerHit@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSDPlayerHit

; 597  : 	::DDSetColorKey(g_pDDSDPlayerHit, RGB(0, 255, 0));

	push	65280					; 0000ff00H
	mov	eax, DWORD PTR ?g_pDDSDPlayerHit@@3PAUIDirectDrawSurface7@@A ; g_pDDSDPlayerHit
	push	eax
	call	_DDSetColorKey
	add	esp, 8

; 598  : 	if (!g_pDDSOne) return MSGERROR("¿ÀÇÁ½ºÅ©¸°»ý¼º½ÇÆÐ");

	cmp	DWORD PTR ?g_pDDSOne@@3PAUIDirectDrawSurface7@@A, 0 ; g_pDDSOne
	jne	SHORT $LN5@DXW_Init
	mov	eax, DWORD PTR ?__LINE__Var@?0??DXW_Init@@YAHXZ@4JA
	add	eax, 100				; 00000064H
	push	eax
	push	OFFSET ??_C@_0EE@LHDKHKAN@c?3?2users?2administrator?2desktop?2@
	push	OFFSET ??_C@_0BD@CJHDELKA@?$LP?$MA?G?A?$LN?$LK?E?$KJ?$LI?$LA?$LL?$PN?$LM?$LK?$LN?G?F?P@
	call	?___Error@@YAHPAD0H@Z			; ___Error
	add	esp, 12					; 0000000cH
	jmp	$LN1@DXW_Init
$LN5@DXW_Init:

; 599  : 	g_pDDSTITLE = ::DDLoadBitmap(g_pDD, "image/Title.bmp", HRES, VRES, TRUE);

	push	1
	push	768					; 00000300H
	push	1024					; 00000400H
	push	OFFSET ??_C@_0BA@HCGNGLPL@image?1Title?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_pDDSTITLE@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSTITLE

; 600  : 	g_pDDSBG = ::DDLoadBitmap(g_pDD, "image/MI1.bmp", HRES, VRES, TRUE);

	push	1
	push	768					; 00000300H
	push	1024					; 00000400H
	push	OFFSET ??_C@_0O@MJENNBBN@image?1MI1?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_pDDSBG@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSBG

; 601  : 	g_pDDSBG2 = ::DDLoadBitmap(g_pDD, "image/MI2.bmp", HRES, VRES, TRUE);

	push	1
	push	768					; 00000300H
	push	1024					; 00000400H
	push	OFFSET ??_C@_0O@EPNJKDLD@image?1MI2?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_pDDSBG2@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSBG2

; 602  : 	g_pDDSBG3 = ::DDLoadBitmap(g_pDD, "image/MI3.bmp", HRES, VRES, TRUE);

	push	1
	push	768					; 00000300H
	push	1024					; 00000400H
	push	OFFSET ??_C@_0O@IEIFHABG@image?1MI3?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_pDDSBG3@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSBG3

; 603  : 	g_pDDSGameover = ::DDLoadBitmap(g_pDD, "image/GameOver.bmp", HRES, VRES, TRUE);

	push	1
	push	768					; 00000300H
	push	1024					; 00000400H
	push	OFFSET ??_C@_0BD@PFPDFPIN@image?1GameOver?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_pDDSGameover@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSGameover

; 604  : 	g_pDDSEnd = ::DDLoadBitmap(g_pDD, "image/End.bmp", HRES, VRES, TRUE);

	push	1
	push	768					; 00000300H
	push	1024					; 00000400H
	push	OFFSET ??_C@_0O@EMPBFEPO@image?1End?4bmp@
	mov	eax, DWORD PTR ?g_pDD@@3PAUIDirectDraw7@@A ; g_pDD
	push	eax
	call	_DDLoadBitmap
	add	esp, 20					; 00000014H
	mov	DWORD PTR ?g_pDDSEnd@@3PAUIDirectDrawSurface7@@A, eax ; g_pDDSEnd

; 605  : 	//// VRAM Cache »ý¼º, ÄÃ·¯Å°2
; 606  : 	::__CreateFastVBuffer(HRES, VRES, RGB(255, 255, 0));

	push	65535					; 0000ffffH
	push	768					; 00000300H
	push	1024					; 00000400H
	call	?__CreateFastVBuffer@@YAHKKK@Z		; __CreateFastVBuffer
	add	esp, 12					; 0000000cH

; 607  : 	::__CreateFastSBuffer(HRES, VRES, RGB(255, 255, 0));

	push	65535					; 0000ffffH
	push	768					; 00000300H
	push	1024					; 00000400H
	call	?__CreateFastSBuffer@@YAHKKK@Z		; __CreateFastSBuffer
	add	esp, 12					; 0000000cH

; 608  : 	::__CreateFastSBuffer2(HRES, VRES, RGB(255, 255, 0));

	push	65535					; 0000ffffH
	push	768					; 00000300H
	push	1024					; 00000400H
	call	?__CreateFastSBuffer2@@YAHKKK@Z		; __CreateFastSBuffer2
	add	esp, 12					; 0000000cH

; 609  : 
; 610  : 	g_Pos.x = 20;

	mov	DWORD PTR ?g_Pos@@3UtagPOINT@@A, 20	; 00000014H

; 611  : 	g_Pos.y = 590;

	mov	DWORD PTR ?g_Pos@@3UtagPOINT@@A+4, 590	; 0000024eH

; 612  : 	g_BPos.x = 700;

	mov	DWORD PTR ?g_BPos@@3UtagPOINT@@A, 700	; 000002bcH

; 613  : 	g_BPos.y = 530;

	mov	DWORD PTR ?g_BPos@@3UtagPOINT@@A+4, 530	; 00000212H

; 614  : 	Timer[7] = 60;

	mov	eax, 4
	imul	ecx, eax, 7
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 60	; 0000003cH

; 615  : 	Timer[17] = 150;

	mov	eax, 4
	imul	ecx, eax, 17
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 150	; 00000096H

; 616  : 	Timer[20] = 300;

	mov	eax, 4
	imul	ecx, eax, 20
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 300	; 0000012cH

; 617  : 	Timer[28] = 500;

	mov	eax, 4
	imul	ecx, eax, 28
	mov	DWORD PTR ?Timer@@3PAHA[ecx], 500	; 000001f4H

; 618  : 	//// LUT
; 619  : 	DXW_LUTInit();

	call	?DXW_LUTInit@@YAXXZ			; DXW_LUTInit

; 620  : 
; 621  : 	srand(time(NULL));

	push	0
	call	_time
	add	esp, 4
	push	eax
	call	_srand
	add	esp, 4

; 622  : 	///// ±âÅ¸
; 623  : 	gFpsMng.SetFPS(_FPS);

	push	60					; 0000003cH
	mov	ecx, OFFSET ?gFpsMng@@3VCFpsMng@@A	; gFpsMng
	call	?SetFPS@CFpsMng@@QAEXK@Z		; CFpsMng::SetFPS

; 624  : 	srand((unsigned)time(NULL));

	push	0
	call	_time
	add	esp, 4
	push	eax
	call	_srand
	add	esp, 4

; 625  : 	__CreateFont("bahnschrift", FNTSZ, FNTWH);	

	push	20					; 00000014H
	push	16					; 00000010H
	push	OFFSET ??_C@_0M@DJJLNBDH@bahnschrift@
	call	?__CreateFont@@YAXPBDHH@Z		; __CreateFont
	add	esp, 12					; 0000000cH

; 626  : 
; 627  : #ifdef _DISPLAYINFO
; 628  : 	gAppSet.bIsDisplayInfo = TRUE;

	mov	DWORD PTR ?gAppSet@@3UtagAPP_SET@@A+8, 1

; 629  : #endif
; 630  : 
; 631  : 	TRACE0("DXW_Init()\n");

	push	OFFSET ??_C@_0M@OFBGHODP@DXW_Init?$CI?$CJ?6@
	call	?___Trace0@@YAXPAD@Z			; ___Trace0
	add	esp, 4

; 632  :     return TRUE;

	mov	eax, 1
$LN1@DXW_Init:

; 633  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DXW_Init@@YAHXZ ENDP					; DXW_Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\time.h
;	COMDAT _time
_TEXT	SEGMENT
__Time$ = 8						; size = 4
_time	PROC						; COMDAT

; 535  :         {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 536  :             return _time64(_Time);

	mov	eax, DWORD PTR __Time$[ebp]
	push	eax
	call	__time64
	add	esp, 4

; 537  :         }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_time	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT _vsprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__ArgList$ = 16						; size = 4
_vsprintf PROC						; COMDAT

; 1477 :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1478 :         #pragma warning(push)
; 1479 :         #pragma warning(disable: 4996) // Deprecation
; 1480 :         return _vsnprintf_l(_Buffer, (size_t)-1, _Format, NULL, _ArgList);

	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR __Format$[ebp]
	push	ecx
	push	-1
	mov	edx, DWORD PTR __Buffer$[ebp]
	push	edx
	call	__vsnprintf_l
	add	esp, 20					; 00000014H

; 1481 :         #pragma warning(pop)
; 1482 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_vsprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -208						; size = 4
__Result$ = -8						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1389 :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 1390 :         int const _Result = __stdio_common_vsprintf(

	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __BufferCount$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Buffer$[ebp]
	push	ecx
	call	___local_stdio_printf_options
	mov	edx, DWORD PTR [eax]
	or	edx, 1
	mov	eax, DWORD PTR [eax+4]
	push	eax
	push	edx
	call	___stdio_common_vsprintf
	add	esp, 28					; 0000001cH
	mov	DWORD PTR __Result$[ebp], eax

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

	cmp	DWORD PTR __Result$[ebp], 0
	jge	SHORT $LN3@vsnprintf_
	mov	DWORD PTR tv74[ebp], -1
	jmp	SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
	mov	eax, DWORD PTR __Result$[ebp]
	mov	DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
	mov	eax, DWORD PTR tv74[ebp]

; 1395 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\±èÁöÈÆ - ¹Ì·¯¿ùµå\1.src\dxwframe.cpp
;	COMDAT _WinMain@16
_TEXT	SEGMENT
_msg$ = -32						; size = 28
_hInstance$ = 8						; size = 4
_hPrevInstance$ = 12					; size = 4
_lpCmdLine$ = 16					; size = 4
_nCmdShow$ = 20						; size = 4
_WinMain@16 PROC					; COMDAT

; 331  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 332  :     MSG		msg;
; 333  :     
; 334  : 	//// Ã¢¸ðµå ¼³Á¤
; 335  : 
; 336  : 	////
; 337  :     if(!__Init(hInstance, nCmdShow)) return FALSE;

	mov	eax, DWORD PTR _nCmdShow$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hInstance$[ebp]
	push	ecx
	call	?__Init@@YAHPAUHINSTANCE__@@H@Z		; __Init
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN4@WinMain
	xor	eax, eax
	jmp	$LN1@WinMain
$LN4@WinMain:

; 338  : 
; 339  : 	TRACE1("===== Open Process ===== [ DxWFrame - %x]\n", ::GetCurrentProcessId());

	mov	esi, esp
	call	DWORD PTR __imp__GetCurrentProcessId@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	OFFSET ??_C@_0CL@NKEIDMPK@?$DN?$DN?$DN?$DN?$DN?5Open?5Process?5?$DN?$DN?$DN?$DN?$DN?5?$FL?5DxWF@
	call	?___Trace@@YAXPADZZ			; ___Trace
	add	esp, 8

; 340  : 	TRACE3("HRes %4d VRes %4d Bpp %2d\n", HRES, VRES, BPP);

	push	16					; 00000010H
	push	768					; 00000300H
	push	1024					; 00000400H
	push	OFFSET ??_C@_0BL@MGKPEOFF@HRes?5?$CF4d?5VRes?5?$CF4d?5Bpp?5?$CF2d?6@
	call	?___Trace@@YAXPADZZ			; ___Trace
	add	esp, 16					; 00000010H
$LN2@WinMain:

; 341  : 
; 342  :     while(1)

	mov	eax, 1
	test	eax, eax
	je	$LN3@WinMain

; 343  :     {
; 344  :     	if( PeekMessage( &msg, NULL, 0, 0, PM_NOREMOVE ) )

	mov	esi, esp
	push	0
	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	call	DWORD PTR __imp__PeekMessageA@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN5@WinMain

; 345  :     	{
; 346  :     	    if( !GetMessage( &msg, NULL, 0, 0 ) ) break;			

	mov	esi, esp
	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	call	DWORD PTR __imp__GetMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN7@WinMain
	jmp	SHORT $LN3@WinMain
$LN7@WinMain:

; 347  :     	    TranslateMessage(&msg);

	mov	esi, esp
	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	call	DWORD PTR __imp__TranslateMessage@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 348  :     	    DispatchMessage(&msg);

	mov	esi, esp
	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	call	DWORD PTR __imp__DispatchMessageA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN6@WinMain
$LN5@WinMain:

; 349  :     	}
; 350  :     	else if( gAppSet.bIsActive && !gAppSet.bIsPause)

	cmp	DWORD PTR ?gAppSet@@3UtagAPP_SET@@A+4, 0
	je	SHORT $LN8@WinMain
	cmp	DWORD PTR ?gAppSet@@3UtagAPP_SET@@A, 0
	jne	SHORT $LN8@WinMain

; 351  : 		//else
; 352  :     	{
; 353  : 			DXW_MainLoop();	

	call	?DXW_MainLoop@@YAXXZ			; DXW_MainLoop
	jmp	SHORT $LN6@WinMain
$LN8@WinMain:

; 354  :         }
; 355  :         else WaitMessage();		

	mov	esi, esp
	call	DWORD PTR __imp__WaitMessage@0
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@WinMain:

; 356  :     }

	jmp	$LN2@WinMain
$LN3@WinMain:

; 357  : 
; 358  : 	TRACE1("===== Close Process ===== [ DxWFrame - %x]\n", ::GetCurrentProcessId());

	mov	esi, esp
	call	DWORD PTR __imp__GetCurrentProcessId@0
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	push	OFFSET ??_C@_0CM@KCIILGMA@?$DN?$DN?$DN?$DN?$DN?5Close?5Process?5?$DN?$DN?$DN?$DN?$DN?5?$FL?5DxW@
	call	?___Trace@@YAXPADZZ			; ___Trace
	add	esp, 8

; 359  : 
; 360  :     return msg.wParam ;

	mov	eax, DWORD PTR _msg$[ebp+8]
$LN1@WinMain:

; 361  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@WinMain
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN13@WinMain:
	DD	1
	DD	$LN12@WinMain
$LN12@WinMain:
	DD	-32					; ffffffe0H
	DD	28					; 0000001cH
	DD	$LN11@WinMain
$LN11@WinMain:
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
_WinMain@16 ENDP
_TEXT	ENDS
END
